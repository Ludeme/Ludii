package core.uberposition;

import java.util.Random;

public class Zobrist {
	
	static long pieces[][][] =
		{{{0x49BD7284758ABBDFl,0x21CD5C98DCBEE58Dl,0xEAD1C972CDA221DFl,0xA063DC5E2D5A8E2Bl,0x491F73946FE3BE2Al,0x9EF259EF14217C36l,0x35AB35F31027F1EDl,0x4D5FAB0DDB53ED7El},
		{0xDF498F9777E81D57l,0x7DE45B3CC32AAD85l,0x3890419D29743312l,0xA7C3FB700D2D1843l,0x4786E307C97C6BE2l,0x162A10D96A04AB60l,0xEFD5BAA35E04328Dl,0xE1413A2A96A15156l},
		{0x24BBC44AED4317FDl,0xCFAF0BE499C71449l,0x0C3F984B2DC5EFA9l,0x7458CD126625E145l,0x4C33978D69BE8340l,0x91E228AE2E03BCA6l,0x3E11EEF7D0C8CDDCl,0x406008286FFDAC91l},
		{0x7548F4E8B05BF859l,0x05F99A03AE680BCCl,0x56BDAAFFF0ED34D4l,0xD554E6EA587EC3F5l,0x4A2180722AE4F79Al,0x851C3BA2FA050AA4l,0x78DAB6AD3A3EC956l,0x15FBE2967CC6F8B1l},
		{0x0EF1CA486676F718l,0x1C8F79FC163F80E7l,0x1660C1566BD1453Cl,0xAB18C7456CE096A7l,0x2E8A139E050E2952l,0x213684778F538472l,0xCBB291CB601769FCl,0x673BF79FB17E39F1l},
		{0xE586F96B2AF5A240l,0x9239C4526E770EFAl,0x5F62370929BC3AB4l,0x146E2F17346192B4l,0xCAF1DC73EE51D7CBl,0x745A4B618995A9FDl,0x57872F45A07E8CC4l,0x8366D2A5FC67772Bl},
		{0x2DDB932D9F80DE3Fl,0x0476E74CC85F28AEl,0xD2C6BEDFC5EE9A21l,0xBBDABE64FBEEFDAAl,0xFA0AE8C2145E801Bl,0x54E447ACDD588DB3l,0x32E2E7FBA9A738CAl,0x54308A6AE640609Al},
		{0xDE54602C0A35B56Fl,0xBF4939C729E11B9Al,0x82C9121CD863EF65l,0x741CBC5D4B1198B4l,0x7737869DCC7F2DDFl,0xA36159B6A731E2D6l,0x93207A227CDA3B86l,0xD5FE726F4FAD35BAl}},

		{{0x1C0FD897980CA25Bl,0xE9AE3DF8E6614984l,0x3B378A8CB92FF0A8l,0xB3013EB1FA311FC5l,0x3564A67974CD70FBl,0x0716FA6B153E27A4l,0x90DC62819A498B5Cl,0xAD0C86C681D1BAEBl},
		{0xEDF20FC2E314A61Dl,0xB5DA5F4F6BA6BDA4l,0xD9B9612BC927C3B7l,0x2D1AEE1899D9F9F0l,0xF21C7522FBC1777Cl,0x004CCF81BFF76A73l,0x60FC8EF6036EE18El,0xBFE84938477B2156l},
		{0x8E61AC488ABFDC24l,0x4DD080D98C23C1A4l,0x8EEEA91163FCC838l,0x03CA603C1FB69198l,0xD0C9BE5B288A561Fl,0x6F39E2DD3A068297l,0x7636810843676791l,0x88ABA7B3269DADAFl},
		{0x4D585F6DA61D1455l,0xB63189B42F937677l,0x6706571D0DD8893Al,0x188A0E11FE5B1CD5l,0xEE0D976251C7665Fl,0xACBEF1659F4212C6l,0x2F717239652AFCDEl,0x1F195F22CF2BADB3l},
		{0xAC5C62235230577El,0x18E3A850B4E42CF8l,0xB6AB348D10053CFCl,0xA77A05952A05A091l,0x6709006210544508l,0x7A8E1FF544D98436l,0x379D596A19C6CE25l,0xFE367459DA028CB2l},
		{0x294DFBD86F606A27l,0xA30D2D5297DFD2CDl,0xF67E283C1E2819BBl,0x681B75576F6D5842l,0xE17F22785985D63Cl,0x9429C31AE0EC1741l,0x5E49909B7DFD08CDl,0x3A4109AD2982316Bl},
		{0xB568060DA06F5F97l,0x9571DA762BE6253Cl,0xE171DA0BCA30F488l,0xE9436E71F8964177l,0x1F542C02533E2903l,0xCB9942908387F33Cl,0xBF06BCF273E9544Cl,0x983365C2A1AC8A60l},
		{0x597C6556A9D50D56l,0x642582427FCA50DAl,0x69E011C9FD5820E7l,0x03E0C233A55766DCl,0xC6D07432EC3DC221l,0xF67A21D9AA2DF121l,0x966AA367A3DD3603l,0x63D30BB38F29EDAEl}},

		{{0x5F67C10E0B4BA41Dl,0x7210B3F9A3BC475Fl,0xBC0BAF02AC8B45D6l,0xA09C8F012288F4CDl,0x58C683D211996102l,0x5F24E4993BE32C9Cl,0xAA60759B3A6CBC16l,0xC237BD3F1F08D455l},
		{0x7541E2E63AB6598Bl,0x82F5FD0DB0C08949l,0x4CF371A60178AC69l,0xF5AD8137DC79F189l,0x37B0144784B87434l,0x10485B2FB3AA4152l,0xCEDEAA4B19A3CF4Bl,0x53F968EEE3D53194l},
		{0x87B6662EB0C17707l,0x813A8930CDED6DFFl,0x15456E059E5DFF74l,0x229AEF7BACFCE153l,0x5DAA04E1630B5475l,0xD8E93092F7A95C5El,0x3C43F79F1DA62C7Dl,0x994473C4C8C45659l},
		{0xE30EE9F117058953l,0x9D44C92AD975FE11l,0x442FA46A076695D9l,0x10698A2F86B3F3F6l,0xF3BAAF4F4ED85565l,0x5FC7B51C6F78175Dl,0xC9DFC480AA5976B2l,0xBD908133DF20F710l},
		{0x51CCF689EE196DADl,0x2804D937FD61F0BEl,0x7CB257E38821708Bl,0x42A9B9841899DBD4l,0xB40D4F828EB7D06Cl,0xA2C8182D286A86C1l,0x6DDF81C93B4AF6E6l,0xDC9AA9AC927E08A8l},
		{0xE8B576A7B137FF20l,0xE31E2C3F768A26C1l,0xCE26024157A001E0l,0x4CEC9D1EE8FC495Fl,0xC98EFA8FD8080929l,0x11E709F1C1F98B77l,0xB7C79287DFAD1687l,0xA07F2855C70F3CE6l},
		{0x366C1D7C6D6A9BCDl,0xE0C6DB8299F2D92Cl,0xAF3A41A852BCA166l,0x3E00B9E342E75E15l,0xBC76A361CB047798l,0x8ED630B296CD5F66l,0xA70D5B52C98611A0l,0xFA761206BFD481A9l},
		{0x563CCA85D787C937l,0x9DE96131CC06AF32l,0x3E6802589D541033l,0x564E97718A9E1246l,0x8FD2035A5FEE66B1l,0xE01305A6771D1494l,0xD362F699DB62225El,0x52FF8C23E51EA378l}},

		{{0xE6D3A44616078C68l,0xB6872E7CBAEE90CEl,0xDE276679B1F71628l,0xA6EF3FCEE3585EF7l,0xD13F0F7C60A9945Cl,0xE949F6A61D1140B7l,0x3C6E18D72C2461C4l,0x35B46D2786739537l},
		{0x0F4BE8E165B51F94l,0xAF91B2F64BEE0FC6l,0xC5411A23DC8EF266l,0x103B9FDD9929BD21l,0xF875209282B870B4l,0x6A620C41B1147136l,0x877A16058C7C25DAl,0x2440FC6A1B50351Bl},
		{0x79770C585B5339F8l,0xFA1DCCE779611C09l,0x9A3CCACB7B06F33Dl,0xA5B14E7EB2FCA967l,0x87DE140AEAB01789l,0xE25C652A72C9A490l,0xF24C91800E278D05l,0x913D2D36BB2BA559l},
		{0x646DC89CB2F70463l,0xFA6A4AA0CB70F328l,0xB739BC29B0CAFEFEl,0x52C0C72297AE8AB8l,0xFF387C44A38D66A3l,0x4AA8375F4B9BBDABl,0x69FE48F47B740303l,0xE0585433F4732EFDl},
		{0x0D3C07149FF91043l,0x4F5F568BC4FFC623l,0xF3AC932B2561D5A3l,0xF4A86BCC7EAC864Fl,0x5DA91ED6A291D5B3l,0x036E7669DC005B06l,0x609B3FF71C30F9D3l,0x9227BD7212983E77l},
		{0xC4DF35EE6568825Al,0x29D056818005E07Fl,0x057788741A835EABl,0xBBBC5B86BA260D37l,0x6D29AE0EA25DB947l,0x4A2131DFCFBC10EFl,0x192A54B6ED331732l,0x49E3E015D49A53D3l},
		{0x240EDF10EE67016El,0x7EE1D768680AA274l,0x4C23FF7452A918C1l,0x9802BE62C6200790l,0xA0830FC326291D1Cl,0x9E219E586D052701l,0x96062E1945790C85l,0xAF065D2DC19B7D28l},
		{0x3BB20FEC6057A22Fl,0xC407F20A272E8268l,0xC64D1EE473D491DDl,0xFD3EA45C7A1BE7BDl,0x3138325AD102F661l,0x56D9DC0036F10B6Bl,0x874C3634B06AE7C4l,0x8C620C43E443BB7Al}},

		{{0xCB661C0257535DE7l,0x026BD27506972716l,0x57CE41BD95A77195l,0x171713BC72ECC66Bl,0x32DF83280F830058l,0x5B1B3FF869DFAF00l,0x67E28A6DDD58DC00l,0xDF8D08802CF2AA72l},
		{0x7619E803E419457El,0x1C3A4B9C99A87CDBl,0xBBE9F8EA9C942932l,0xB2D9245BF54CFF8El,0x5B5E2B92263FFAEAl,0x586510C947314D97l,0x9D1349BD8F996F76l,0xC1FCB15E08E2F357l},
		{0xD204C0848D95C9BCl,0x7820432F204E5A23l,0x65F1A3193E685482l,0x7238D6F4391EE5DAl,0x4480DAA3C01D58CBl,0xA92538F53C7AFA65l,0x4A5B24F0F9EF41F0l,0xDE8BBA08D99CDB9Bl},
		{0x30A9888C6D395599l,0x523D71063639485Bl,0xBD58D1AECB4E9048l,0x88D06877DDAD2AB0l,0xADD958FD3370B0F6l,0x6AF8462F65D3FF48l,0x843E0B3A9F85C32Al,0xB88D2792BB15CFB5l},
		{0xC2F85B7F2B0E8CE5l,0xC476AF8A2C69AEA7l,0xFCC582269F33B172l,0x389EF92ABCD45203l,0xC025E24815B58688l,0x702D651657CA47EBl,0x5B078B0933A931EFl,0x453E4BC6AC48E519l},
		{0xC2EC4908D41789E4l,0x9F1A8305ABF499B2l,0x6EC2723ABF287F89l,0x13C908EB16878FCCl,0x2CBFFB7E001A709El,0x948DD09E756B431Dl,0x9F9E6CBAE1B79222l,0xDBE7F6AA702188B8l},
		{0x3988A6A17FAF5F37l,0x5C91E48340E41681l,0x1EA5156F198514C5l,0x278EF0E998E3A318l,0x0ACE6831C08BEF06l,0x51244EFD74983440l,0x4A552375368024EEl,0x31214630CAF7B8D1l},
		{0x435CB9C35296A289l,0x984482971D020825l,0x471CAE0C9E4AA880l,0xCCEAC83C4C7548DFl,0xD15C51E8335C9126l,0x307D7112062ACB68l,0x40728D1611C9B0C6l,0x4E64F4AD32D4C929l}},

		{{0x1B770918AD864C75l,0xB776786BC57D37AFl,0x2044F6BAE823A454l,0xC85620C297D2E655l,0xE2088C2D80012F9Al,0x706EF8054E837597l,0x8D6B2F9CE10482EAl,0x91FD20B36AA6F208l},
		{0xBA282CB24B317866l,0x1EB49DE7DDC93472l,0xEC370B78D34ABEB3l,0x34ED74187B67BE7Bl,0xC7F4FEFDF33DA9FAl,0x87EF35EC57914025l,0x141ED34E753A5CACl,0x1C40957FE594A7CCl},
		{0x85B216C6BDCBD20Cl,0xF42A4B3C7665F2C2l,0xE707543A1C08F799l,0xD45D33035F10F604l,0xD13F49112C19F9E9l,0x8D2575A8BB3141FBl,0x1D0B783937F6838Cl,0x1589538F3F383F10l},
		{0xCC4FD7456E16927Dl,0xAFAEB710B3B9E7CFl,0x98248993729D9B8Bl,0xCEDC359335526CE4l,0xE9008D1B0AAE7D8Cl,0xE0A119BE279ED9EEl,0xD6F221290F9D0CB0l,0x8E8E6F41132E7A09l},
		{0x0891FACB7DC91098l,0x634EA6C75F8EE9ADl,0x99AAF60EC2386E4Bl,0xB0D685BF92B92487l,0xCB0F5F2AA2F58779l,0xDDC55516B43CA1CAl,0xB9BC02666DBD4F25l,0xFE28001A00CB08CDl},
		{0xEC950465DCDB9F65l,0x829AD2ACF46CAF8El,0xAF9C0828F6673B9Cl,0xE674EF0E91DFD1D1l,0x79D1C1BDA26A0D7Bl,0xD4F0A1AFEE8FD8FBl,0x6AD380887C548F0Fl,0x54C963D101F81F31l},
		{0x5E97215E70B27A2El,0x99B87842119E1CE2l,0xBC3C09BF052DB4D2l,0x300A2496EDC78A2Fl,0x21D2DA28EB0CE742l,0x5FFC237F69E88288l,0xB49F3CFCEB2E9FE1l,0x404C30CEE340C211l},
		{0x5DB1B2C6FFB807CAl,0x0CA9E3041FA522C9l,0x2D476475207D8029l,0xFBF1C1D1088AD8ADl,0x67FEC7D0B6F39B6Al,0xFAF46418982FB961l,0xD582282214EA0B09l,0x278EF26BDA02A95El}}};
	
	static long castling[] = {0x68516ED3B16845F1l,0x7440923C0CEFDF56l};
	
	static Random r = new Random();
	
	public static String rand()
	{
		String out = "0x";
		char c[] = new char[16];
		
		for (int k=0; k<16; k++)
		{
			int a = r.nextInt(16);
			c[k]=(char)(a<10? '0'+a : 'A'+(a-10));
		}
		return out+new String(c)+"l";
	}
	
	public static String randColumn()
	{
		String out = "{";
		for (int k=0; k<8; k++)
		{
			out += rand();
			if (k<7) out += ","; else out += "}";
		}
		return out;
	}
	
	public static String randGroup()
	{
		String out = "{";
		for (int k=0; k<8; k++)
		{
			out += randColumn();
			if (k<7) out += ",\n"; else out += "}\n";
		}
		return out;
	}
	
	public static void main(String args[])
	{
		for (int k=0; k<7; k++) System.out.println(randGroup());
	}

}
