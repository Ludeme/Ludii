(define "NumPlayers" 4)
(define "ColumnSize" 5)
(define "NumColumns" 9)

(define "EmptyTop" (intersection (sites Top) (sites Empty)))

(define "LastColumn" (sites Column (column of:(last To))))

(define "Distance" (count Sites in:(intersection (sites Empty) "LastColumn")))

(define "Drop" (slide (from (last To)) S (between (exact "Distance"))))

(define "NormalPlayRules"
    (fromTo
        (from (sites Hand Shared))
        (to "EmptyTop")
        copy:True
        (then (and { "Drop" #1 }))
    )
)

//------------------------------------------------------------------------------

(game "Dont Connect N"
    (players "NumPlayers")
    (equipment {
        (board (rectangle "ColumnSize" "NumColumns"))
        (piece "Disc" Each)
        (hand Shared size:"NumPlayers")
    })

    (rules
        (start {
            (place "Disc1" (handSite Shared))
            (place "Disc2" (handSite Shared 1))
            (place "Disc3" (handSite Shared 2))
            (place "Disc4" (handSite Shared 3))
        })
        <Swap:playRules>
        (end
            (forEach
                Player
                if:(is Line (count Active) through:(last To afterConsequence:True) Player)
                (result Player Loss)
            )
        )
    )
)

//------------------------------------------------------------------------------

(option "Swap Rule" <Swap> args:{ <playRules> }
    {
    (item "No Swap"
        <(play "NormalPlayRules")>
        "No swap rule."
    )*
    (item "In-place Previous"
        <(play
            (or {
                ("NormalPlayRules")
                (if (and {
                        (> (count Moves) 0) 					// No swapping for first player in first turn
                        (<= (count Turns) (count Players))		// No swapping after everyone's had a turn
                        (not (= (mover) (prev)))			// No swapping if we just got swapped into our current role
                    })
                    (swap Players Mover Prev)		// Mover swaps with previous player
                )
            })
        )>
        "In-place swap with previous."
    )
    (item "In-place Any"
        <(play
            (or {
                ("NormalPlayRules")
                (if (and {
                        (> (count Moves) 0) 					// No swapping for first player in first turn
                        (<= (count Turns) (count Players))		// No swapping after everyone's had a turn
                        (not (= (mover) (prev)))			// No swapping if we just got swapped into our current role
                    })
                    (select
                        (from (forEach (sites Board) if:(and (< (to) (mover)) (>= (to) 1)))) 		// Select Player index lower than Mover index
                        (then (swap Players Mover (last To)))										// Swap mover with selected index
                    )
                )
            })
        )>
        "In-place swap with any player with a lower index."
    )
    (item "Shift Previous"
        <(play
            (or {
                ("NormalPlayRules")
                (if (and {
                        (> (count Moves) 0) 					// No swapping for first player in first turn
                        (< (count Moves) (count Players))		// No swapping after everyone's had a move
                    })
                    (shiftPlayers Mover (- (mover) 1))		// Mover ''shift-swaps'' with index 1 lower than his own
                )
            })
        )>
        "Move into previous position, move previous player to last spot, and shift all the players in between."
    )
    (item "Shift Any"
        <(play
            (or {
                ("NormalPlayRules")
                (if (and {
                        (> (count Moves) 0) 					// No swapping for first player in first turn
                        (< (count Moves) (count Players))		// No swapping after everyone's had a move
                    })
                    (select
                        (from (forEach (sites Board) if:(and (< (to) (mover)) (>= (to) 1)))) 		// Select Player index lower than Mover index
                        (then (shiftPlayers Mover (last To)))										// "Shift-swap" mover with selected index
                    )
                )
            })
        )>
        "Move into any lower-index position, move that player to last spot, and shift all the players in between."
    )
    //	(item "Cut and Choose"
        //		<phases:{
        //			(phase "Cut"
            //				(play
                //					("NormalPlayRules" (if (< (count Moves) "NumPlayers") (moveAgain)))
            //				)
            //				(nextPhase (= (count Moves) "NumPlayers") "Choose")
        //			)
        //
        //			(phase "Choose"
            //				(play
                //					(select
                    //						(from (forEach (sites Board) if:(and {(= (state at:(to)) 0) (<= (to) "NumPlayers") (>= (to) 1)}))) 		// Select non-taken Player Index
                    //						(then
                        //							(and {
                            //								(set State (last To) 1)							// Mark the index as taken
                            //								(take Control of:(last To) by:(mover))			// Flip colour of selected pieces to our colour
                            //								(take Control of:(mover) by:(last To))			// Flip colour of our old pieces to selected player index
                        //							})
                    //						)
                //					)
            //				)
            //				(nextPhase (= (mover) 1) "NormalPlayPhase")
        //			)
        //
        //			(phase "NormalPlayPhase" (play ("NormalPlayRules")))
        //		}>
    //	)
    }
)

(metadata

    (info
        {
        (description "Don't Connect N was designed as an experimental game for a UM masters student group project investigating Multiplayer Swap rules.")
        (rules "Players can play a piece of any colour each turn. If a line of 4 is made in any colour then that player is eliminated. Last surviving player wins.")
        (source "")
        (version "0.9.3")
        (classification "board/space/line")
        (author "Lisa Clappers")
        (date "2020")
        (credit "Cameron Browne 17/6/2020")
        }
    )

    (graphics {
        (board Style Pyramidal)
        (noAnimation True)
        (selectClosestPiece True)
    })

)
