(define "NextHole" (trackSite Move from:#1 "Track" steps:#2))
(define "NoPieceOnBoard" (no Pieces All in:(sites Board)))
(define "NoPieceOnOwnedHolesP1" (no Pieces All in:(sites (values Remembered "OwnedP1"))))
(define "NoPieceOnOwnedHolesP2" (no Pieces All in:(sites (values Remembered "OwnedP2"))))
(define "RemmemberOwnedHoles"
    (if (is Mover P1)
        (remember Value "OwnedP1" #1)
        (remember Value "OwnedP2" #1)
    )
)

(define "OwnedHoles"
    (if (is Mover P1)
        (sites (values Remembered "OwnedP1"))
        (sites (values Remembered "OwnedP2"))
    )
)

(define "RememberOwnedHolesRandom"
    (if (< 50 (value Random (range 1 100)))
        (remember Value "OwnedP1" #1)
        (remember Value "OwnedP2" #1)
    )
)

(define "LeftMostEmpty"
    (trackSite FirstSite "Track"
        from:(mapEntry "LeftMost" Mover)
        if:(is Empty (to))
    )
)

//------------------------------------------------------------------------------

(game "Lahemay Waladat"
    (players 2)

    (equipment {
        (mancalaBoard 2 6 store:None
            (track "TrackCCW" "0,E,N,W" loop:True)
        )
        (piece "Seed" Shared)
        (hand Each)
        (regions P1 (sites Bottom))                     // P1 home
        (regions P2 (sites Top))                        // P2 home
        (map "LeftMost" {(pair P1 0) (pair P2 11)})
    })
    (rules

        (start {
            (set Count 4 to:(sites Track) )
            (set RememberValue "OwnedP1" (sites Bottom))
            (set RememberValue "OwnedP2" (sites Top))
        })

        phases:{
        (phase "Sowing"
            (play
                (or {
                    (move Select
                        (from
                            (if (is Mover Prev)
                                (sites {(var "Replay")})
                                ("OwnedHoles")
                            )
                            if:(is Occupied (from))
                        )
                        (then
                            (do
                                (set Var "NumSowed" (count at:(last To)))
                                next:(sow
                                    apply:(if (< 1 (count at:(to)))
                                        (and
                                            (moveAgain)
                                            (set Var "Replay" (to))
                                        )
                                    )
                                )
                                (then // No need of the Jen rule, because the capture is automatic in Ludii, so no errors are possible.
                                    (and
                                        (forEach Site (sites Track from:(last From) to:(trackSite Move from:(last From) "Track" steps:(- (var "NumSowed") 1)))
                                            (if (= 4 (count at:(site)))
                                                (fromTo
                                                    (from (site))
                                                    (to (if (is In (site) (sites (values Remembered "OwnedP1"))) (handSite P1) (handSite P2)))
                                                    count:4
                                                )
                                            )
                                        )
                                        (set Var "NumSowed" 0)
                                    )
                                )
                            )
                        )
                    )
                    }
                    (then
                        (if (or ("NoPieceOnOwnedHolesP1") ("NoPieceOnOwnedHolesP2")) // Be careful here, that's not said in the rules we know, that's why it is a recons one.
                            (and {
                                (if ("NoPieceOnOwnedHolesP2")
                                    (forEach Site (sites Board)
                                        (fromTo
                                            (from (site))
                                            (to (handSite P1))
                                            count:(count at:(site))
                                        )
                                    )
                                    (forEach Site (sites Board)
                                        (fromTo
                                            (from (site))
                                            (to (handSite P2))
                                            count:(count at:(site))
                                        )
                                    )
                                )
                                (forget Value "OwnedP1" All)
                                (forget Value "OwnedP2" All)
                            })
                        )
                    )
                )
            )

            (end (if ("NoPieceOnBoard")
                    {
                    (if (= 0 (count Cell at:(handSite P1))) (result P2 Win))
                    (if (= 0 (count Cell at:(handSite P2))) (result P1 Win))
                    }
                )
            )

            (nextPhase ("NoPieceOnBoard") "BetweenRounds")
        )

        (phase "BetweenRounds"
            (play
                (if (<= 4 (count Cell at:(handSite Mover)))
                    (move
                        (from (handSite Mover))
                        (to ("LeftMostEmpty"))
                        count:4
                        (then
                            (and {
                                ("RemmemberOwnedHoles" (last To))
                                (if (<= 4 (count Cell at:(handSite Mover)))
                                    (moveAgain)
                                    (if (= 3 (count Cell at:(handSite Mover)))
                                        (and {
                                            (fromTo
                                                (from (handSite Mover))
                                                (to ("LeftMostEmpty"))
                                                count:3
                                            )
                                            (fromTo
                                                (from (handSite Next))
                                                (to ("LeftMostEmpty"))
                                                count:1
                                            )
                                            ("RemmemberOwnedHoles" ("LeftMostEmpty"))
                                        })
                                        (if (= 2 (count Cell at:(handSite Mover)))
                                            (and {
                                                (fromTo
                                                    (from (handSite Mover))
                                                    (to ("LeftMostEmpty"))
                                                    count:2
                                                )
                                                (fromTo
                                                    (from (handSite Next))
                                                    (to ("LeftMostEmpty"))
                                                    count:2
                                                )
                                                ("RememberOwnedHolesRandom" ("LeftMostEmpty"))
                                            })
                                        )
                                    )
                                )
                            })
                        )
                    )
                )
            )
            (nextPhase (and (is Empty (handSite P1)) (is Empty (handSite P2))) "Sowing")
        )

        }
    )
)

//------------------------------------------------------------------------------

(metadata
    (info
        {
        (description "Lahemay Waladat (\"My cow has given birth\") is a two-row mancala-style board game played in Mek'ele, Ethiopia.  ")
        (rules "2x6 board. Four counters in each hole. Sowing proceeds in an anti-clockwise direction. When the final counter of a sowing falls into an occupied hole, these counters are picked up and sowing continues. During the sowing, when a  hole is made to contain three counters, these counters are captured by the owner of the hole, unless it is the final hole of the sowing, in which case the player continues to sow from this hole. When the final counter lands in an empty hole, the turn ends. Play continues until Players then count their pieces by placing four in each hole, and the player who has more than their original number takes ownership of one of the opponent's holes for every four counters more than the original number that have been taken. If no player took four more than the original, the player with three extra gets the hole, if each player has two extra they draw lots to see who gets an extra hole. Play then begins again as before. The game ends when one player owns all of the counters, and thus all of the holes. If toward then end of the game, when a player has been reduced to a single hole and it is captured by the opponent, the opponent captures the four counters involved in the capture. The hole remains in the possession of its owner, and is able to utilise any pieces falling into that hole on subsequent turns, but may also capture from this hole as though the hole had been captured by the opponent.")
        (source "Pankhurst 1971: 173.")
        (version "1.3.0")
        (classification "board/sow/two rows/reconstruction")
        (credit "Eric Piette")
        (origin  "This game was played in Horn of Africa, around 1971.")
        }
    )

    (graphics {
        (board Style Mancala)
    })
)

