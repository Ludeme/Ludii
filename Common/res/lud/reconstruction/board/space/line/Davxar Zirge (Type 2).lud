(define "IsLineDirection" 
    (if (is Line 4 #1 #2 whats:{0 1 2})	
        (is Line 4 #1 #2 exact:True) 
        (is Line 3 #1 #2 exact:True) 
    )	
)

(define "IsLine"
    (or {
        ("IsLineDirection" N #1)
        ("IsLineDirection" NE #1)
        ("IsLineDirection" E #1)
        ("IsLineDirection" SE #1)
        ("IsLineDirection" S #1)
        ("IsLineDirection" SW #1)
        ("IsLineDirection" W #1)
        ("IsLineDirection" NW #1)	
    })
)

(define "RemoveEnemyPiece" 
    (move
        Remove
        (forEach 
            (sites Occupied by:Next container:"Board") 
            if:(not ("IsLine" through:(site)))
        )
    )
)

(define "IfLineMoveAgain" 
    (then 
        (if 
            ("IsLine")
            (moveAgain)
        )
    )
)

//------------------------------------------------------------------------------

(game "Davxar Zirge (Type 2)"
    (players 2)
    
    (equipment { 
        (board 
            (add
                (merge {
                    (shift 7 7 (remove (square 3) vertices:{4}))
                    (shift 6 6 (scale 2 (remove (square 3) vertices:{4})))
                    (shift 4 4 (scale 4 (remove (square 3) vertices:{4})))
                    (scale 8 (remove (square 3) vertices:{4}))
                })
                edges:{{21 30} {27 21} {27 16} {16 25} {25 18} {18 28} {28 23} {23 30}
                {30 22} {17 25}{19 27} {20 28} {22 13} {13 19} {19 8} {8 17} {17 10}
                {10 20} {20 15} {15 22} {14 5} {5 11} {11 0} {0 9} {9 2} {2 12} {12 7} {7 14}
                {6 14} {14 22} {3 11} {11 19} {1 9} {9 17} {4 12} {12 20} {13 21} {13 5}
                {21 29} {0 8} {8 16} {16 24} {2 10} {10 18} {18 26} {31 23} {23 15} {15 7} 
                }
            )
            use:Vertex
        ) 
        (hand Each)
        (piece "Marker" Each "StepToEmpty") 
    })  
    (rules 
        (start (place "Marker" "Hand" count:[#])) // The unknow information is the number of pieces.
        
        phases:{
        (phase "Placement"
            (play
                (if "SameTurn"
                    "RemoveEnemyPiece"
                    (move 
                        (from (handSite Mover)) 
                        (to (sites Empty)) 
                        "IfLineMoveAgain" 
                    )  
                )
            ) 
            (nextPhase Mover ("HandEmpty" Mover) "Movement")
        )
        
        (phase "Movement" 
            (play 
                (if "SameTurn"
                    "RemoveEnemyPiece"
                    (forEach Piece
                        ("IfLineMoveAgain")		
                    )
                )
            )
        )
        }
        
        (end (if (no Pieces Next) (result Mover Win)))
    )
)

//------------------------------------------------------------------------------

(metadata 
    
    (info
        {
        (description "Davxar Zirge is an alignment game played on Mongolia on a complex board. ")
        (rules "Four concentric squares, with lines connecting the corners and the midpoints of the sides. Three diamonds are also drawn within the squares, connecting the midpoints of a square to the corners of the next smallest square.. Players alternate turns placing one of their pieces on an empty spot on the board. When all of the pieces are placed, they alternate turns moving one of their pieces to an empty adjacent spot along the lines of the board. During either phase, when a player places three of their pieces in a row along a line that has only three spots, or four in a row along a line that has four spots, they may remove one of the opponent's pieces from the board. Pieces which are in a three- or four-in-a-row arrangement cannot be removed from the board. The player who captures all of the opponent's pieces wins.
        ")
        (source "DLP evidence.")
        (id "1033")
        (version "1.3.2")
        (classification "board/space/line/reconstruction")
        (credit "Eric Piette")
        (origin  "This game was played in Mongolia, from around 1963 to 1966.")
        }
    )
    
    (graphics {
        (show Edges Diagonal (colour Hidden))
    })
    
)
