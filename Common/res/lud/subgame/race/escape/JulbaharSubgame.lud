(define "NotAnEnemy"
    (not (is Enemy (who at:(to))))
)

(define "NextSiteFrom"
    (trackSite Move
        from:#1
        steps:(pips)
    )
)

(define "DieNotUsed" (!= (pips) 0))

(define "RemoveAPiece"
    (move
        Remove
        (site)
    )
)

(define "DieNotUsedAndNoEscapeAndNotOffTheTrack"
    (and {
        ("DieNotUsed")
        (!= ("NextSiteFrom" (from)) Off)
        (!= ("NextSiteFrom" (from)) End)
    })
)

(define "MoveAPiece"
    (move
        (from #1)
        (to
            ("NextSiteFrom" #1)
            if:("NotAnEnemy")
        )
    )
)

(define "MoveAPieceIf"
    (forEach Die
        replayDouble:True
        if:#1
        ("MoveAPiece" #2)
    )
)

(define "AllPieceEscaped" (= 0 (size Stack in:(sites Occupied by:Mover))))

(define "NotEmptyAndNotOffTheBoard"
    (and
        (!= (what at:(site)) 0)
        (!= ("NextSiteFrom" (site)) Off)
    )
)

(define "NotEmptyAndOneSpaceAfterEnd"
    (and
        (!= (what at:(site)) 0)
        (= ("NextSiteFrom" (site)) End)
    )
)

(define "NotEmptyAndOffBoard"
    (and
        (!= (what at:(site)) 0)
        (= ("NextSiteFrom" (site)) Off)
    )
)

(define "SetScoreOf"
    (score
        #1
        (+ (score #1) (size Stack in:(sites Occupied by:#2)))
    )
)

(define "AllPieceLastQuadrant"
    (=
        (count Sites in:(difference (sites Occupied by:Mover) (sites Mover "Home")))
        0
    )
)

(define "Move"
    (forEach Die
        replayDouble:True
        if:("DieNotUsed")
        (forEach Site
            (sites Occupied by:Mover)
            (or {
                (if "NotEmptyAndOneSpaceAfterEnd"
                    ("RemoveAPiece")
                )
                (if (and "AllPieceLastQuadrant" "NotEmptyAndOffBoard")
                    ("RemoveAPiece")
                )
                (if ("NotEmptyAndNotOffTheBoard")
                    ("MoveAPiece" (site))
                )
            })
            (then
                (if (not (all DiceUsed))
                    (moveAgain)
                )
            )
        )
    )
)

//-----------------------------------------------------------------------------

(game "JulbaharSubgame"
    (players 2)
    (equipment {
        (board (rectangle 2 13)
            {
            (track "Track1" {12..7 5..0 13..18 20..25 End} P1 directed:True)
            (track "Track2" {25..20 18..13 0..5 7..12 End} P2 directed:True)
            }
            use:Vertex
        )
        (dice num:2)
        (regions "Home" P1 { 20..25 })
        (regions "Home" P2 { 7..12 })
        (map {(pair 1 12) (pair 2 25)}) // The starting positions of each player.
        (piece "Disc" Each)
    })

    (rules
        (start {
            (place Stack "Disc1" 12 count:15)
            (place Stack "Disc2" 25 count:15)
        })

        (play
            (do
                (if (not "SameTurn") (roll))
                next:
                (if (can Move ("Move"))
                    ("Move")
                    (move Pass (then (addScore Next 5)))
                )
            )
        )

        (end
            (if ("AllPieceEscaped")
                (byScore {
                    ("SetScoreOf" P1 P2)
                    ("SetScoreOf" P2 P1)
                } )
            )
        )
    )
)

//-------------------------------------------------------------------------

(metadata

    (info
        {
        (version "1.1.0")
        (classification "")
        }
    )

    (graphics {
        (board Style backgammon)
        (stackType Backgammon)
    })

)
