(game "Radran"
    (players <Version:numPlayers>)
    (equipment
        {
        (board <Board:type> use:Edge)
        (piece "Marker" Neutral)
        }
    )

    (rules
        (start
            <Board:start>
        )
        (play
            (move Add (piece "Marker0")
                (to Edge (sites Empty Edge))
                (then
                    (addScore Mover (cost Edge at:(last To)))
                )
            )
        )
        (end
            (if (is RegularGraph Neutral)
                (byScore)
            )
        )
    )
)

//------------------------------------------------------------------------------

(option "Board" <Board> args:{ <type> <start> }
    {
    (item "Graph1"
        <
        (graph
            vertices:{{0 0} {5 0} {10 0} {0 5} {5 5} {10 5} {0 10} {5 10} {10 10}}
            edges:{{0 1} {0 2} {0 3} {0 4} {0 5} {0 6} {0 7} {1 2} {1 3} {1 4} {1 5} {1 6} {1 8} {2 3} {2 4} {2 5}
            {2 7} {2 8} {3 4} {3 6} {3 7} {3 8} {4 5} {4 6} {4 7} {4 8} {5 6} {5 8} {5 7} {6 7} {6 8} {7 8}}
        )
        >
        <
        {
        (set Cost 1 Edge at:0)
        (set Cost 2 Edge at:1)
        (set Cost 3 Edge at:2)
        (set Cost 1 Edge at:3)
        (set Cost 2 Edge at:4)
        (set Cost 3 Edge at:5)
        (set Cost 1 Edge at:6)
        (set Cost 2 Edge at:7)
        (set Cost 3 Edge at:8)
        (set Cost 3 Edge at:9)
        (set Cost 1 Edge at:10)
        (set Cost 2 Edge at:11)
        (set Cost 3 Edge at:12)
        (set Cost 1 Edge at:13)
        (set Cost 2 Edge at:14)
        (set Cost 3 Edge at:15)
        (set Cost 1 Edge at:16)
        (set Cost 2 Edge at:17)
        (set Cost 3 Edge at:18)
        (set Cost 3 Edge at:19)
        (set Cost 1 Edge at:20)
        (set Cost 2 Edge at:21)
        (set Cost 3 Edge at:22)
        (set Cost 1 Edge at:23)
        (set Cost 2 Edge at:24)
        (set Cost 3 Edge at:25)
        (set Cost 1 Edge at:26)
        (set Cost 2 Edge at:27)
        (set Cost 3 Edge at:28)
        (set Cost 3 Edge at:29)
        (set Cost 1 Edge at:30)
        (set Cost 2 Edge at:31)
        }
        >
        ""
    )*

    (item "Graph2"
        <
        (graph
            vertices:{{0 1} {4 0} {8 1} {4 5} {0 6} {8 6} {2 4} {6 4} {4 9}}
            edges:{{0 1} {0 2} {0 3} {0 4} {0 5} {0 6} {0 7} {0 8} {1 2} {1 3} {1 4} {1 5} {1 6} {1 7} {1 8} {2 3} {2 4} {2 5} {2 6}
            {2 7} {2 8} {3 4} {3 5} {3 6} {3 7} {3 8} {4 5} {4 6} {4 7} {4 8} {5 6} {5 7} {5 8} {6 7} {6 8} {7 8}}
        )
        >
        <
        {
        (set Cost 1 Edge at:0)
        (set Cost 2 Edge at:1)
        (set Cost 3 Edge at:2)
        (set Cost 1 Edge at:3)
        (set Cost 2 Edge at:4)
        (set Cost 3 Edge at:5)
        (set Cost 1 Edge at:6)
        (set Cost 2 Edge at:7)
        (set Cost 0 Edge at:8)
        (set Cost 3 Edge at:9)
        (set Cost 1 Edge at:10)
        (set Cost 2 Edge at:11)
        (set Cost 3 Edge at:12)
        (set Cost 1 Edge at:13)
        (set Cost 2 Edge at:14)
        (set Cost 0 Edge at:15)
        (set Cost 1 Edge at:16)
        (set Cost 2 Edge at:17)
        (set Cost 3 Edge at:18)
        (set Cost 3 Edge at:19)
        (set Cost 1 Edge at:20)
        (set Cost 2 Edge at:21)
        (set Cost 3 Edge at:22)
        (set Cost 1 Edge at:23)
        (set Cost 2 Edge at:24)
        (set Cost 3 Edge at:25)
        (set Cost 1 Edge at:26)
        (set Cost 2 Edge at:27)
        (set Cost 3 Edge at:28)
        (set Cost 3 Edge at:29)
        (set Cost 1 Edge at:30)
        (set Cost 2 Edge at:31)
        (set Cost 3 Edge at:32)
        (set Cost 1 Edge at:33)
        (set Cost 2 Edge at:34)
        (set Cost 3 Edge at:35)
        }
        >
        ""
    )

    (item "Graph3"
        <
        (graph
            vertices:{ {7 0.5} {12 2} {14.5 6} {14.5 10} {12 14} {7 15.5} {3 14} {0 10} {0 6} {3 2}}
            edges:{{0 1} {1 2} {2 3} {3 4} {4 5} {5 6} {6 7} {7 8} {8 9} {9 0}
            {0 2} {0 3} {0 4} {0 5} {0 6} {0 7} {0 8}
            {1 3} {1 4} {1 5} {1 6} {1 7} {1 8} {1 9}
            {2 4} {2 5} {2 6} {2 7} {2 8} {2 9}
            {3 5} {3 6} {3 7} {3 8} {3 9}
            {4 6} {4 7} {4 8} {4 9}
            {5 7} {5 8} {5 9} {6 8} {6 9}
            {7 9}}
        )
        >
        <
        {
        (set Cost 1 Edge at:0)
        (set Cost 2 Edge at:1)
        (set Cost 3 Edge at:2)
        (set Cost 1 Edge at:3)
        (set Cost 2 Edge at:4)
        (set Cost 3 Edge at:5)
        (set Cost 1 Edge at:6)
        (set Cost 2 Edge at:7)
        (set Cost 3 Edge at:8)
        (set Cost 3 Edge at:9)
        (set Cost 1 Edge at:10)
        (set Cost 2 Edge at:11)
        (set Cost 3 Edge at:12)
        (set Cost 1 Edge at:13)
        (set Cost 2 Edge at:14)
        (set Cost 3 Edge at:15)
        (set Cost 1 Edge at:16)
        (set Cost 2 Edge at:17)
        (set Cost 3 Edge at:18)
        (set Cost 3 Edge at:19)
        (set Cost 1 Edge at:20)
        (set Cost 2 Edge at:21)
        (set Cost 3 Edge at:22)
        (set Cost 1 Edge at:23)
        (set Cost 2 Edge at:24)
        (set Cost 3 Edge at:25)
        (set Cost 1 Edge at:26)
        (set Cost 2 Edge at:27)
        (set Cost 3 Edge at:28)
        (set Cost 3 Edge at:29)
        (set Cost 1 Edge at:30)
        (set Cost 2 Edge at:31)
        (set Cost 3 Edge at:32)
        (set Cost 1 Edge at:33)
        (set Cost 2 Edge at:34)
        (set Cost 3 Edge at:35)
        (set Cost 1 Edge at:36)
        (set Cost 2 Edge at:37)
        (set Cost 3 Edge at:38)
        (set Cost 3 Edge at:39)
        (set Cost 1 Edge at:40)
        (set Cost 2 Edge at:41)
        (set Cost 3 Edge at:42)
        (set Cost 1 Edge at:43)
        (set Cost 2 Edge at:44)
        }
        >
        ""
    )

})

//------------------------------------------------------------------------------

(option "Players" <Version> args:{ <numPlayers>}
    {
    (item "2"
        <2>
        "The version of the game played with 2 players."
    )*

    (item "3"
        <3>
        "The version of the game played with 3 players."
    )

    (item "4"
        <4>
        "The version of the game played with 4 players."
    )
})

//------------------------------------------------------------------------------

(metadata

    (info
        {
        (description "Radran is a graph theory game that uses a regular graph mechanism. A regular graph is a graph where each vertex has the same number of neighbours; i.e. every vertex has the same degree. Radran can be played on any undirected and edge-weighted graph. It can be played with two or more player.")
        (rules "The graph is initially empty. Players alternate turns colouring an uncoloured edge between two of the vertices. Both players share a common colour for this gameplay. Radran is a score-based game. At each turn, a player gets a score, which is equal to the cost of his last coloured edge. The game ends when the coloured graph is regular. The player with the highest score wins.")
        (version "1.3.0")
        (classification "experimental/graph theory")
        (author "Tahmina Begum")
        (credit "Tahmina Begum")
        (date "01-07-2020")
        }
    )

    (graphics {
        (player Colour Neutral (colour 255 127 0))
        (board Style PenAndPaper replaceComponentsWithFilledCells:True)
        (show Cost)
        (show Edges ThinDotted (colour 127 127 127))

    })

    (ai
        "Radran_ai"
    )
)
