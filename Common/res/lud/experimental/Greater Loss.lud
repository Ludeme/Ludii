(define "LastStateRemove" (value Player Mover))

(define "StoreStateRemoved" (set Value Mover (state at:(last To)) ))

//------------------------------------------------------------------------------

(game "Greater Loss"
    (players 2)
    (equipment {
        (board (square 4))
        (piece "Disc" Each)
    })
    (rules
        (start {
            (place "Disc1" {"A1"} state:1)
            (place "Disc1" {"B1"} state:2)
            (place "Disc1" {"C1"} state:3)
            (place "Disc1" {"D1"} state:4)
            (place "Disc1" {"A2"} state:5)
            (place "Disc1" {"B2"} state:6)
            (place "Disc1" {"C2"} state:7)
            (place "Disc1" {"D2"} state:8)
            (place "Disc2" {"A3"} state:5)
            (place "Disc2" {"B3"} state:6)
            (place "Disc2" {"C3"} state:7)
            (place "Disc2" {"D3"} state:8)
            (place "Disc2" {"A4"} state:1)
            (place "Disc2" {"B4"} state:2)
            (place "Disc2" {"C4"} state:3)
            (place "Disc2" {"D4"} state:4)
        })

        (play
            (move Select
                (from
                    (forEach
                        (sites Occupied by:Mover)
                        if:(> (state at:(site)) ("LastStateRemove"))
                    )
                )
                (then
                    (and
                        ("StoreStateRemoved")
                        (remove (last To))
                    )
                )
            )
        )

        (end
            (if
                (= 0
                    (count Sites
                        in:(forEach
                            (sites Occupied by:Mover)
                            if:(= 8 (state at:(site)))
                        )
                    )
                )
                (result Mover Loss)
            )
        )
    )
)

//------------------------------------------------------------------------------

(metadata
    (info
        {
        (description "Greater Loss is a theoretical game designed to demonstrate Monte Carlo resistance. There is one optimal (non-losing) move per turn against a competent opponent and always a losing move.")
        (rules "Players take turns removing a piece of their colour whose number is higher than the last piece they removed (free choice of first piece). The player who removes their highest numbered piece loses.")
        (version "1.3.0")
        (classification "experimental")
        (author "Cameron Browne")
        (credit "Cameron Browne")
        (date "2021")
        }
    )

    (graphics {
        (player Colour P1 (colour White))
        (player Colour P2 (colour Blue))
        (show Piece State Middle)
    })
    (ai
        "Greater Loss_ai"
    )
)
