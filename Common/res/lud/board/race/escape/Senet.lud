(define "SiteToEnter" (coord "A3"))

(define "Throw" (mapEntry (count Pips)))

(define "SiteToMoveOnTrack" (trackSite Move #1 #2 steps:"Throw"))

(define "PieceMovement" <Ruleset:piece>)

(define "SevenPiecesOnBoard"
    (start
        {
        (place "SenetPiece1" (sites {"B3" "D3" "F3" "H3" "J3" "I2" "G2"}))
        (place "SenetPiece2" (sites {"A3" "C3" "E3" "G3" "I3" "J2" "H2"}))
        }
    )
)

(define "FivePiecesOnBoard"
    (start
        {
        (place "SenetPiece1" (sites {"B3" "D3" "F3" "H3" "J3"}))
        (place "SenetPiece2" (sites {"A3" "C3" "E3" "G3" "I3"}))
        }
    )
)

(define "Ankh Waset Site" (coord "F2"))

//---------------------------Define specifically for Kendall------------------------------------------

(define "MoveInFront7Pieces" (fromTo (from (coord "G2")) (to (coord "F2"))))

(define "MoveInFront5Pieces" (fromTo (from (coord "J3")) (to (coord "J2"))))

(define "TwoConsecutiveSpaces"
    (if (= ("SiteToMoveOnTrack" #1 #2) 19)
        (or (is Line 2 W through:("SiteToMoveOnTrack" #1 #2)) (is Line 2 N through:("SiteToMoveOnTrack" #1 #2)))
        (if (= ("SiteToMoveOnTrack" #1 #2) 29)
            (or (is Line 2 W through:("SiteToMoveOnTrack" #1 #2)) (is Line 2 S through:("SiteToMoveOnTrack" #1 #2)))
            (if (= ("SiteToMoveOnTrack" #1 #2) 10)
                (or (is Line 2 E through:("SiteToMoveOnTrack" #1 #2)) (is Line 2 S through:("SiteToMoveOnTrack" #1 #2)))
                (if (= ("SiteToMoveOnTrack" #1 #2) 0)
                    (or (is Line 2 E through:("SiteToMoveOnTrack" #1 #2)) (is Line 2 N through:("SiteToMoveOnTrack" #1 #2)))
                    (or (is Line 2 W through:("SiteToMoveOnTrack" #1 #2)) (is Line 2 E through:("SiteToMoveOnTrack" #1 #2)))
                )
            )
        )
    )
)

(define "NextSiteFrom" (trackSite Move from:(last From) steps:1))

(define "BearOffPiece" (move Remove (from)))

(define "BearOffPieceIfNoPieceInHomeRow"
    (if (= 0 (count Sites in:(intersection (sites Occupied by:Mover) (sites "TopRow"))))
        (move Remove (from))
    )
)

(define "BearOffPieceOnWater" (move Remove (sites "Water")))

(define "BearOffPieceOnWaterIfNoPieceInHomeRow"
    (if (= 0 (count Sites in:(intersection (sites Occupied by:Mover) (sites "TopRow"))))
        (move Remove (sites "Water"))
    )
)

(define "TrapRule"
    (if  (and (or {
                (= ("SiteToMoveOnTrack") End)
                (= ("SiteToMoveOnTrack") Off)
                (is In ("SiteToMoveOnTrack") (union {(sites "Water") (sites "Baw") (sites "Two Men") (sites "Horus")}))
            })
            (= 1 (count Sites in:(intersection (sites Empty) (sites "Water"))))
        )
        (move (from) (to (sites "Water")))
    )
)

(define "ThrowOfOne" (or (is Mover P1) (and (is Mover P2) (= (value Player Mover) 1))))

(define "NoStartingThrow" True)

(define "StartingThrow" #1)

(define "SetStartingThrow" (then (if (and (!= (value Player Mover) 1) (= 1 ("Throw"))) (set Value Mover 1))))

(define "MovePieceForward"
    (or {
        // Square 26
        (if (is In (from) (sites "Neferu"))
            (if  (!= ("SiteToMoveOnTrack") Off)
                (if (= ("SiteToMoveOnTrack") End)
                    #1 // Bear off rule
                    (if
                        (is Empty ("SiteToMoveOnTrack"))
                        (move
                            (from)
                            (to ("SiteToMoveOnTrack"))
                        )
                        (if (and (not ("TwoConsecutiveSpaces")) (is Enemy (who at:("SiteToMoveOnTrack") )))
                            (if (and
                                    (= 1 (count in:(intersection (sites Empty) (sites "Water"))))
                                    (is In ("SiteToMoveOnTrack") (union {(sites "Baw") (sites "Two Men") (sites "Horus")}))
                                )
                                (move Swap Pieces
                                    (from)
                                    ("SiteToMoveOnTrack")
                                    (then (fromTo
                                            (from (last From))
                                            (to ("NextSiteFrom"))
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            )
        )
        // Squares 28-29
        (if (is In (from) (union {(sites "Two Men") (sites "Baw")}))
            (if  (!= ("SiteToMoveOnTrack") Off)
                (if (= ("SiteToMoveOnTrack") End)
                    #1 // Bear off rule
                )
            )
        )
        // Square 30
        (if (is In (from) (sites "Horus"))
            (if  (or
                    (= ("SiteToMoveOnTrack") End)
                    (= ("SiteToMoveOnTrack") Off)
                )
                #1 // Bear off rule
            )
        )
        (if (not (is In (from) (union {(sites "Neferu") (sites "Water") (sites "Baw") (sites "Two Men") (sites "Horus")})))
            (or {
                #2 // Trap rule
                // Squares 1 to 25
                (if (not
                        (or {
                            (= ("SiteToMoveOnTrack") End)
                            (= ("SiteToMoveOnTrack") Off)
                            (is In ("SiteToMoveOnTrack") (union {(sites "Water") (sites "Baw") (sites "Two Men") (sites "Horus")}))
                        })
                    )
                    (if
                        (is Empty ("SiteToMoveOnTrack"))
                        (move
                            (from)
                            (to ("SiteToMoveOnTrack"))
                        )
                        (if (and (not ("TwoConsecutiveSpaces")) (is Enemy (who at:("SiteToMoveOnTrack") )))
                            (move Swap Pieces
                                (from)
                                ("SiteToMoveOnTrack")
                            )
                        )
                    )
                )
            })
        )
    })
)

(define "MovePieceBackward"
    (or {
        // Square 26
        (if (is In (from) (sites "Neferu"))
            (if  (!= ("SiteToMoveOnTrack" "TrackOpposite") Off)
                (if
                    (is Empty ("SiteToMoveOnTrack" "TrackOpposite"))
                    (move
                        (from)
                        (to ("SiteToMoveOnTrack" "TrackOpposite"))
                    )
                    (if (and (not ("TwoConsecutiveSpaces" "TrackOpposite")) (is Enemy (who at:("SiteToMoveOnTrack" "TrackOpposite") )))
                        (move Swap Pieces
                            (from)
                            ("SiteToMoveOnTrack" "TrackOpposite")
                        )
                    )
                )
            )
        )
        (if (not (is In (from) (union {(sites "Neferu") (sites "Water") (sites "Baw") (sites "Two Men") (sites "Horus")})))
            // Squares 1 to 25
            (if (!= ("SiteToMoveOnTrack" "TrackOpposite") Off)
                (if
                    (is Empty ("SiteToMoveOnTrack" "TrackOpposite"))
                    (move
                        (from)
                        (to ("SiteToMoveOnTrack" "TrackOpposite"))
                    )
                    (if (and (not ("TwoConsecutiveSpaces" "TrackOpposite")) (is Enemy (who at:("SiteToMoveOnTrack" "TrackOpposite") )))
                        (move Swap Pieces
                            (from)
                            ("SiteToMoveOnTrack" "TrackOpposite")
                        )
                    )
                )
            )
        )
    })
)

(define "PieceOnAnkhWasetFromWaterHasToMove"
    (and
        (= (state at:("Ankh Waset Site")) 1)
        (= 1 (count Sites in:(intersection (sites Occupied by:Mover) (sites "Ankh Waset"))))
    )
)

(define "PieceOnAnkhWasetHasMoved" (then (set State at:(last To) 0)))

(define "PieceOnAnkhWasetHasToMove" (then (set State at:(last To) 1)))

(define "PieceOnWater" (= 1 (count Sites in:(intersection (sites Occupied by:Mover) (sites "Water")))))

(define "NoPieceOnAnkhWaset" (= 1 (count Sites in:(intersection (sites Empty) (sites "Ankh Waset")))))

(define "KendallMoves"
    (if ("PieceOnAnkhWasetFromWaterHasToMove")
        (priority {
            (if
                (is Empty ("SiteToMoveOnTrack" from:("Ankh Waset Site")))
                (move
                    (from ("Ankh Waset Site"))
                    (to ("SiteToMoveOnTrack" from:("Ankh Waset Site")))
                )
                (if (and
                        (not ("TwoConsecutiveSpaces" from:("Ankh Waset Site")))
                        (is Enemy (who at:("SiteToMoveOnTrack" from:("Ankh Waset Site")) ))
                    )
                    (move Swap Pieces
                        ("Ankh Waset Site")
                        ("SiteToMoveOnTrack" from:("Ankh Waset Site"))
                    )
                )
                ("PieceOnAnkhWasetHasMoved")
            )
            (if
                (is Empty ("SiteToMoveOnTrack" from:("Ankh Waset Site") "TrackOpposite"))
                (move
                    (from ("Ankh Waset Site"))
                    (to ("SiteToMoveOnTrack" from:("Ankh Waset Site") "TrackOpposite"))
                )
                (if (and
                        (not ("TwoConsecutiveSpaces" from:("Ankh Waset Site") "TrackOpposite"))
                        (is Enemy (who at:("SiteToMoveOnTrack" from:("Ankh Waset Site") "TrackOpposite") ))
                    )
                    (move Swap Pieces
                        ("Ankh Waset Site")
                        ("SiteToMoveOnTrack" from:("Ankh Waset Site") "TrackOpposite")
                    )
                )
                ("PieceOnAnkhWasetHasMoved")
            )
        })
        (if ("PieceOnWater")
            (if (= ("Throw") 4)
                #3 // Bear off rule on water
                (or
                    (if ("NoPieceOnAnkhWaset")
                        (move (from (sites "Water")) (to (sites "Ankh Waset")) ("PieceOnAnkhWasetHasToMove"))
                    )
                    (move Pass)
                )
            )

            (if ("StartingThrow" #1)
                (priority {
                    (forEach Piece ("MovePieceForward" #2 #4))
                    (forEach Piece ("MovePieceBackward"))
                    }
                    (then (if (is In ("Throw") (sites {1 4 5})) (moveAgain)))
                )
            )
        )
    )
)

(define "KendallRules"
    (rules
        #1 // Starting rules
        phases:{
        (phase "Opening"
            (play
                (do (roll)
                    next:(move Pass
                        (then
                            (if (= 1 ("Throw"))
                                (and {
                                    #2
                                    (if (is Mover P2)
                                        (swap Players P1 P2)
                                    )
                                    (set NextPlayer (player 1))
                                })
                            )
                        )
                    )
                )
            )
            (nextPhase (= 1 (count Pips)) "Playing")
        )
        (phase "Playing"
            (play
                (do
                    (roll #6)
                    next:(if (can Move ("KendallMoves" #3 #4 #5 #7))
                        ("KendallMoves" #3 #4 #5 #7)
                        (move Pass (then (if (is In ("Throw") (sites {1 4 5})) (moveAgain))))
                    )
                )
            )
        )
        }

        (end
            (if
                (no Pieces Mover)
                (result Mover Win)
            )
        )
    )
)

//------------------------------------------------------------------------------

(game "Senet"
    (players 2)
    (equipment
        {
        (board (rectangle 3 10)
            {
            <Track>
            }
        )
        <Dice>
        <Throw>
        (regions "Symbols" (sites {"F2" "F1" "G1" "H1" "I1"}))
        (regions "Ankh Waset" (sites {"F2"}))
        (regions "Neferu" (sites {"F1"}))
        (regions "Water" (sites {"G1"}))
        (regions "Baw" (sites {"H1"}))
        (regions "Two Men" (sites {"I1"}))
        (regions "Horus" (sites {"J1"}))
        (regions "TopRow" (sites Top))
        (regions "MiddleRow" (difference (expand (sites Top)) (sites Top)))
        (regions "BottomRow" (sites Bottom))
        (piece "SenetPiece" Each ("PieceMovement"))
        (hand Each)
        }
    )
    <Ruleset:rules>
)

//------------------------------------------------------------------------------

(option "Track" <Track> args:{<track>}
    {
    (item "Boustrophedon"
        <
        (track "Track1" "20,E,S1,W,S1,E,End" P1 directed:True)
        (track "Track2" "20,E,S1,W,S1,E,End" P2 directed:True)
        >
    "The track is a boustrophedon track.")

    (item "Boustrophedon + Backward Except Three Last Spaces"
        <
        (track "Track1" "20,E,S1,W,S1,E,End" P1 directed:True)
        (track "Track2" "20,E,S1,W,S1,E,End" P2 directed:True)
        (track "TrackOpposite1" "6,W,N1,E,N1,W" P1 directed:True)
        (track "TrackOpposite2" "6,W,N1,E,N1,W" P2 directed:True)
        >
    "The track is a boustrophedon track with backward track.")

    (item "Boustrophedon + Backward"
        <
        (track "Track1" "20,E,S1,W,S1,E,End" P1 directed:True)
        (track "Track2" "20,E,S1,W,S1,E,End" P2 directed:True)
        (track "TrackOpposite1" "9,W,N1,E,N1,W" P1 directed:True)
        (track "TrackOpposite2" "9,W,N1,E,N1,W" P2 directed:True)
        >
    "The track is a boustrophedon track with backward track.")**
    }
)

//------------------------------------------------------------------------------

(option "Dice" <Dice> args:{<dice>}
    {
    (item "1xD4" <(dice d:4 num:1)> "One D4.")
    (item "4xD2" <(dice d:2 from:0 num:4)> "Four D2.")**
    }
)

//----------------------------------------------------

(option "Throw" <Throw> args:{<throw>}
    {
    (item "Sum" <(map {(pair 0 0) (pair 1 1) (pair 2 2) (pair 3 3) (pair 4 4)})> "The throw is equal to the sum of the dice.")
    (item "Piccione-Kendall" <(map {(pair 0 5) (pair 1 1) (pair 2 2) (pair 3 3) (pair 4 4)})> "The value of the throw is equal to the sum except when the sum is 0 the throw = 5.")**
    (item "Jequier" <(map {(pair 0 6) (pair 1 1) (pair 2 2) (pair 3 3) (pair 4 4)})> "The value of the throw is equal to the sum except when the sum is 0 the throw = 6.")
    }
)

//----------------------------------------------------

(option "Play Rules" <Ruleset> args:{<piece> <rules>}
    {
    (item "Kendall"
        <>
        <
        ("KendallRules" ("SevenPiecesOnBoard") ("MoveInFront7Pieces") ("NoStartingThrow") ("BearOffPiece")  ("BearOffPieceOnWater"))
        >
    "The rules of Kendall.")**

    //-----------------------------------

    (item "Kendall 5 pieces"
        <>
        <
        ("KendallRules" ("FivePiecesOnBoard") ("MoveInFront5Pieces") ("NoStartingThrow") ("BearOffPiece")  ("BearOffPieceOnWater"))
        >
    "The rules of Kendall with 5 pieces.")

    //-----------------------------------

    (item "Kendall with trap"
        <>
        <
        ("KendallRules" ("SevenPiecesOnBoard") ("MoveInFront7Pieces") ("NoStartingThrow") ("BearOffPiece")  ("BearOffPieceOnWater") ~ ("TrapRule"))
        >
    "The rules of Kendall. A roll greater than that required to land exactly on the Neferu site causes the player to fall into the water.")

    //-----------------------------------

    (item "Kendall special bear off"
        <>
        <
        ("KendallRules" ("SevenPiecesOnBoard") ("MoveInFront7Pieces") ("NoStartingThrow") ("BearOffPieceIfNoPieceInHomeRow")  ("BearOffPieceOnWaterIfNoPieceInHomeRow"))
        >
    "The rules of Kendall. Cannot bear off until all pieces are beyond the home row.")

    //-----------------------------------

    (item "Kendall starting throw"
        <>
        <
        ("KendallRules" ("SevenPiecesOnBoard") ("MoveInFront7Pieces") ("ThrowOfOne") ("BearOffPiece")  ("BearOffPieceOnWater") ("SetStartingThrow"))
        >
    "The rules of Kendall. A throw of 1 is required to begin.")

    //-----------------------------------

    (item "Kendall 5 pieces and with trap"
        <>
        <
        ("KendallRules" ("FivePiecesOnBoard") ("MoveInFront5Pieces") ("NoStartingThrow") ("BearOffPiece")  ("BearOffPieceOnWater") ~ ("TrapRule"))
        >
    "The rules of Kendall with 5 pieces. A roll greater than that required to land exactly on the Neferu site causes the player to fall into the water.")

    //-----------------------------------

    (item "Kendall 5 pieces special bear off"
        <>
        <
        ("KendallRules" ("FivePiecesOnBoard") ("MoveInFront5Pieces") ("NoStartingThrow") ("BearOffPieceIfNoPieceInHomeRow")  ("BearOffPieceOnWaterIfNoPieceInHomeRow") ~ ~)
        >
    "The rules of Kendall with 5 pieces. A roll greater than that required to land exactly on the Neferu site causes the player to fall into the water.")

    //-----------------------------------

    (item "Kendall with trap and starting throw"
        <>
        <
        ("KendallRules" ("SevenPiecesOnBoard") ("MoveInFront7Pieces") ("ThrowOfOne") ("BearOffPiece")  ("BearOffPieceOnWater") ("SetStartingThrow") ("TrapRule"))
        >
    "The rules of Kendall. A roll greater than that required to land exactly on the Neferu site causes the player to fall into the water. A throw of 1 is required to begin.")

    //-----------------------------------

    (item "Kendall 5 pieces and starting throw"
        <>
        <
        ("KendallRules" ("FivePiecesOnBoard") ("MoveInFront5Pieces") ("ThrowOfOne") ("BearOffPiece")  ("BearOffPieceOnWater") ("SetStartingThrow") ~)
        >
    "The rules of Kendall with 5 pieces. A throw of 1 is required to begin.")

    //-----------------------------------

    (item "Kendall starting throw special bear off"
        <>
        <
        ("KendallRules" ("SevenPiecesOnBoard") ("MoveInFront7Pieces") ("ThrowOfOne") ("BearOffPieceIfNoPieceInHomeRow")  ("BearOffPieceOnWaterIfNoPieceInHomeRow") ("SetStartingThrow") ~)
        >
    "The rules of Kendall. Cannot bear off until all pieces are beyond the home row. A throw of 1 is required to begin.")

    //-----------------------------------

    (item "Kendall with trap and special bear off"
        <>
        <
        ("KendallRules" ("SevenPiecesOnBoard") ("MoveInFront7Pieces") ("NoStartingThrow") ("BearOffPieceIfNoPieceInHomeRow")  ("BearOffPieceOnWaterIfNoPieceInHomeRow") ~ ("TrapRule"))
        >
    "The rules of Kendall. A roll greater than that required to land exactly on the Neferu site causes the player to fall into the water. Cannot bear off until all pieces are beyond the home row.")

    //-----------------------------------

    (item "Kendall 5 pieces special bear off and starting throw"
        <>
        <
        ("KendallRules" ("FivePiecesOnBoard") ("MoveInFront5Pieces") ("ThrowOfOne") ("BearOffPieceIfNoPieceInHomeRow")  ("BearOffPieceOnWaterIfNoPieceInHomeRow") ("SetStartingThrow"))
        >
    "The rules of Kendall with 5 pieces. Cannot bear off until all pieces are beyond the home row. A throw of 1 is required to begin.")

    //-----------------------------------

    (item "Kendall 5 pieces trap and special bear off"
        <>
        <
        ("KendallRules" ("FivePiecesOnBoard") ("MoveInFront5Pieces") ("NoStartingThrow") ("BearOffPieceIfNoPieceInHomeRow")  ("BearOffPieceOnWaterIfNoPieceInHomeRow") ~ ("TrapRule"))
        >
    "The rules of Kendall with 5 pieces. Cannot bear off until all pieces are beyond the home row. A roll greater than that required to land exactly on the Neferu site causes the player to fall into the water.")

    //-----------------------------------

    (item "Kendall starting throw trap and special bear off"
        <>
        <
        ("KendallRules" ("SevenPiecesOnBoard") ("MoveInFront7Pieces") ("ThrowOfOne") ("BearOffPieceIfNoPieceInHomeRow")  ("BearOffPieceOnWaterIfNoPieceInHomeRow") ("SetStartingThrow") ("TrapRule"))
        >
    "The rules of Kendall. A roll greater than that required to land exactly on the Neferu site causes the player to fall into the water. Cannot bear off until all pieces are beyond the home row. A throw of 1 is required to begin.")

    //-----------------------------------

    (item "Kendall 5 pieces trap and starting throw"
        <>
        <
        ("KendallRules" ("FivePiecesOnBoard") ("MoveInFront5Pieces") ("ThrowOfOne") ("BearOffPiece")  ("BearOffPieceOnWater") ("SetStartingThrow") ("TrapRule"))
        >
    "The rules of Kendall with 5 pieces. A roll greater than that required to land exactly on the Neferu site causes the player to fall into the water. A throw of 1 is required to begin.")

    //-----------------------------------

    (item "Kendall all options"
        <>
        <
        ("KendallRules" ("FivePiecesOnBoard") ("MoveInFront5Pieces") ("ThrowOfOne") ("BearOffPieceIfNoPieceInHomeRow")  ("BearOffPieceOnWaterIfNoPieceInHomeRow") ("SetStartingThrow") ("TrapRule"))
        >
    "The rules of Kendall with 5 pieces. A roll greater than that required to land exactly on the Neferu site causes the player to fall into the water. Cannot bear off until all pieces are beyond the home row. A throw of 1 is required to begin.")

    //-----------------------------------

    (item "Bell"
        <
        (define "NotAFriendOrNotOnSymbols"
            (if (is In ("SiteToMoveOnTrack" #1) (sites "Symbols"))
                (is In ("SiteToMoveOnTrack" #1) (sites Empty))
                (not (is Friend (who at:("SiteToMoveOnTrack" #1) )))
            )
        )

        //-----------------------------------

        (if (= ("SiteToMoveOnTrack" #1) End)
            (move
                Remove
                (from)
                (then
                    (addScore Mover 1)
                )
            )
            (if (not (= ("SiteToMoveOnTrack" #1) Off) )
                (if
                    ("NotAFriendOrNotOnSymbols" #1)
                    (move
                        (from)
                        (to
                            ("SiteToMoveOnTrack" #1)
                            if:True
                            (apply
                                if:(is Enemy (who at:(to)))
                                (remove (to))
                            )
                        )
                    )
                )
            )
        )
        >
        <
        (rules
            (start
                {
                (place "SenetPiece1" (sites {"A3" "C3" "E3" "G3" "I3" "J2" "H2" "F2" "D2" "B2"}))
                (place "SenetPiece2" (sites {"B3" "D3" "F3" "H3" "J3" "I2" "G2" "E2" "C2" "A2"}))
                }
            )

            phases:{
            (phase "Opening"
                (play
                    (do (roll)
                        next:(move Pass
                            (then
                                (if (is Mover P1)
                                    (set Var (count Pips))
                                    (if (< (var) (count Pips))
                                        (moveAgain)
                                    )
                                )
                            )
                        )
                    )
                )
                (nextPhase (= 2 (count Moves)) "Playing")
            )
            (phase "Playing"
                (play
                    (do
                        (roll)
                        next:(priority
                            (forEach Site
                                (sites "Symbols")
                                (if (= (who at:(to)) (mover))
                                    ("PieceMovement" from:(to))
                                )
                            )
                            (forEach Piece)
                        )
                    )
                )
            )
            }

            (end
                (if
                    (and (no Pieces P1) (no Pieces P2))
                    (byScore)
                )
            )
        )
        >
    "The rules of Bell.")

    //-----------------------------------

    (item "Piccione"
        <
        (define "CurrentThrow" (value Player Mover))

        (define "IteratedThrow" (value))

        (define "SiteToMoveOnTrackPiccione" (trackSite Move #1 steps:"IteratedThrow"))

        (define "RestOfThrow"
            (if (= (last To) (last From))
                (- (value Player Mover) (+ 1 (count StepsOnTrack (last From) 9)))
                (- (value Player Mover) (count StepsOnTrack (last From) (last To)))
            )
        )

        //-----------------------------------

        (if (or (not ("HasEnteredAPiece")) (and ("HasEnteredAPiece") (= (from) ("SiteToEnter"))))
            (priority {
                (forEach Value min:1 max:("CurrentThrow")
                    (if (= ("SiteToMoveOnTrackPiccione") End)
                        (move
                            Remove
                            (from)
                            (then
                                (if ("HasAnAdditionalThrow") ("ResetAdditionalThrow"))
                            )
                        )
                        (if (not (= ("SiteToMoveOnTrackPiccione") Off) )
                            (if
                                (is Empty ("SiteToMoveOnTrackPiccione"))
                                (move
                                    (from)
                                    (to
                                        ("SiteToMoveOnTrackPiccione")
                                    )
                                    (then (if ("HasAnAdditionalThrow") ("ResetAdditionalThrow")))
                                )
                            )
                        )
                        (then
                            (and
                                (if (is In (last To)  (sites "Water"))
                                    ("AutoCaptureLastPiece")
                                )
                                (if
                                    (< 0 ("RestOfThrow"))
                                    (and {
                                        (set Value Mover ("RestOfThrow"))
                                        (if (is In (last To) (union (sites "Ankh Waset") (sites "Neferu")))
                                            ("SaveAdditionalThrow")
                                        )
                                        (moveAgain)
                                    })
                                    (if (or ("HasASaveAdditionalThrow") (is In (last To) (union (sites "Ankh Waset") (sites "Neferu"))))
                                        (and ("GetAdditionalThrow") (moveAgain))
                                        ("ResetAdditionalThrow")
                                    )
                                )
                            )
                        )
                    )
                )
                (forEach Value min:1 max:("CurrentThrow")
                    (if (not (= ("SiteToMoveOnTrackPiccione" "TrackOpposite") Off) )
                        (if
                            (is Empty ("SiteToMoveOnTrackPiccione" "TrackOpposite"))
                            (move
                                (from)
                                (to
                                    ("SiteToMoveOnTrackPiccione" "TrackOpposite")
                                )
                                (then (if ("HasAnAdditionalThrow") ("ResetAdditionalThrow")))
                            )
                        )
                    )
                    (then
                        (and
                            (if (is In (last To)  (sites "Water"))
                                ("AutoCaptureLastPiece")
                            )
                            (if
                                (< 0 ("RestOfThrow"))
                                (and {
                                    (set Value Mover ("RestOfThrow"))
                                    (if (is In (last To) (union (sites "Ankh Waset") (sites "Neferu")))
                                        ("SaveAdditionalThrow")
                                    )
                                    (moveAgain)
                                })
                                (if (or ("HasASaveAdditionalThrow") (is In (last To) (union (sites "Ankh Waset") (sites "Neferu"))))
                                    (and ("GetAdditionalThrow") (moveAgain))
                                    ("ResetAdditionalThrow")
                                )
                            )
                        )
                    )
                )
            })
        )
        >
        <
        (define "HasASaveAdditionalThrow" (= (var) 1))

        (define "HasAnAdditionalThrow" (= (var) 2))

        (define "SaveAdditionalThrow" (set Var 1))

        (define "ResetAdditionalThrow" (set Var 0))

        (define "GetAdditionalThrow" (set Var 2))

        (define "HasEnteredAPiece" (= (last From) (handSite Mover)))

        (define "HasEnteredAPieceOrNewTurn" (or ("HasEnteredAPiece") (and (!= (last From) (handSite Mover)) (or ("HasAnAdditionalThrow") ("NewTurn")))))

        (define "CanEnterAPiece" (and { (or ("HasAnAdditionalThrow") ("NewTurn")) (not ("HandEmpty" Mover)) (= ("Throw") 1) }))

        (define "AutoCaptureLastPiece"
            (move (from (last To)) (to (handSite Mover))
                (then (if ("HasAnAdditionalThrow") ("ResetAdditionalThrow")))
            )
        )

        (define "MoveApieceAfterThrowing"
            (do (set Value Mover ("Throw"))
                next:(forEach Piece)
            )
        )

        (define "CanMoveEnteredPiece"
            (if (= ("Throw") 1)
                (is Empty 21)
                (if (= ("Throw") 2)
                    (or (is Empty 21) (is Empty 22))
                    (if (= ("Throw") 3)
                        (or { (is Empty 21) (is Empty 22) (is Empty 23) } )
                        (if (= ("Throw") 4)
                            (or { (is Empty 21) (is Empty 22) (is Empty 23) (is Empty 24)} )
                            (or { (is Empty 21) (is Empty 22) (is Empty 23) (is Empty 24) (is Empty 25)})
                        )
                    )
                )
            )
        )

        //-----------------------------------

        (rules
            (start
                (place "SenetPiece" "Hand" count:5)
            )

            (play
                (do
                    (if (or { (= (last From) (handSite Mover)) ("NewTurn") ("HasAnAdditionalThrow") })
                        (roll)
                    )
                    next:(or
                        (if ("CanEnterAPiece")
                            (move
                                (from (handSite Mover))
                                (to ("SiteToEnter"))
                                (then
                                    (and
                                        (if ("HasAnAdditionalThrow") ("ResetAdditionalThrow"))
                                        (moveAgain)
                                    )
                                )
                            )
                        )
                        (if ("HasEnteredAPieceOrNewTurn")
                            (if ("HasEnteredAPiece")
                                (if ("CanMoveEnteredPiece")
                                    ("MoveApieceAfterThrowing")
                                    ("AutoCaptureLastPiece")
                                )
                                ("MoveApieceAfterThrowing")
                            )
                            (forEach Piece)
                        )
                    )
                )
            )

            (end (if (no Pieces Mover) (result Mover Win)))
        )
        >
    "The rules of Piccione.")

    //-----------------------------------

    (item "Jequier"
        <
        (define "EmptyOrEnemyNotOnSafePlacesAndNotTwoInARow"
            (or
                (is Empty ("SiteToMoveOnTrack" #1))
                (and {
                    (is Enemy (who at:("SiteToMoveOnTrack" #1)))
                    (not (is In ("SiteToMoveOnTrack" #1) (union { (sites "Ankh Waset") (sites "Neferu") (sites "Baw") (sites "Two Men") })))
                    (and (not (is Line 2 W through:("SiteToMoveOnTrack" #1))) (not (is Line 2 E through:("SiteToMoveOnTrack" #1))))
                })
            )
        )

        (define "NextSite" (trackSite Move steps:1))

        (define "FurthestEmptySite"
            (if (is Empty 20)
                20
                (if (is Empty 21)
                    21
                    (if (is Empty 22)
                        22
                        (if (is Empty 23)
                            23
                            (if (is Empty 24)
                                24
                                (if (is Empty 25)
                                    25
                                    (if (is Empty 26)
                                        26
                                        (if (is Empty 27)
                                            27
                                            (if (is Empty 28)
                                                28
                                                29
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            )
        )

        (define "NotGroupOfThree"
            (and
                (not (is Line 3 W through:(trackSite Move #1 steps:(/ ("Throw") 2)) whats:{(id "SenetPiece1") (id "SenetPiece2")}))
                (not (is Line 3 E through:(trackSite Move #1 steps:(/ ("Throw") 2)) whats:{(id "SenetPiece1") (id "SenetPiece2")}))
            )
        )

        (define "AllPieceInBottomRow"
            (= 0 (count Sites in:(intersection (sites Occupied by:Mover) (union (sites "TopRow") (sites "MiddleRow"))) ))
        )

        (define "NumEnemyPiecesOnTopRow"
            (count Sites in:(intersection (sites Occupied by:Next) (sites "TopRow")))
        )
        (define "NumEnemyPiecesOnMiddleRow"
            (count Sites in:(intersection (sites Occupied by:Next) (sites "MiddleRow")))
        )
        (define "NumEnemyPiecesOnBottomRow"
            (count Sites in:(intersection (sites Occupied by:Next) (sites "BottomRow")))
        )

        //-----------------------------------

        (priority {
            (if (and
                    (or
                        (not (is In (from) (sites "TopRow")))
                        (and
                            (is In (from) (sites "TopRow"))
                            (is Empty ("NextSite"))
                        )
                    )
                    (or (< "Throw" 4) (and (>= "Throw" 4) ("NotGroupOfThree")))
                )
                (if (or
                        (= ("SiteToMoveOnTrack" #1) End)
                        (= ("SiteToMoveOnTrack" #1) Off)
                    )
                    (if ("AllPieceInBottomRow")
                        (move
                            Remove
                            (from)
                        )
                    )
                    (if
                        ("EmptyOrEnemyNotOnSafePlacesAndNotTwoInARow" #1)
                        (move
                            (from)
                            (to
                                ("SiteToMoveOnTrack" #1)
                                if:True
                                (apply
                                    if:(is Enemy (who at:(to)))
                                    (fromTo (from (to)) (to "FurthestEmptySite"))
                                )
                            )
                        )
                    )
                )
                (then
                    (if (is In (last To) (sites "Water"))
                        (fromTo (from (last To)) (to "FurthestEmptySite"))
                    )
                )
            )
            (if (and
                    (or
                        (not (is In (from) (sites "TopRow")))
                        (and
                            (is In (from) (sites "TopRow"))
                            (is Empty ("NextSite"))
                        )
                    )
                    (or (< "Throw" 4) (and (>= "Throw" 4) ("NotGroupOfThree" "TrackOpposite")))
                )
                (if (not (= ("SiteToMoveOnTrack" "TrackOpposite") Off) )
                    (if
                        ("EmptyOrEnemyNotOnSafePlacesAndNotTwoInARow" "TrackOpposite")
                        (move
                            (from)
                            (to
                                ("SiteToMoveOnTrack" "TrackOpposite")
                                if:True
                                (apply
                                    if:(is Enemy (who at:(to)))
                                    (fromTo (from (to)) (to "FurthestEmptySite"))
                                )
                            )
                        )
                    )
                )
                (then
                    (if (is In (last To) (sites "Water"))
                        (fromTo (from (last To)) (to "FurthestEmptySite"))
                    )
                )
            )
        })
        >
        <
        (rules
            (start
                {
                (place "SenetPiece1" (sites {"A3" "C3" "E3" "G3" "I3" }))
                (place "SenetPiece2" (sites {"B3" "D3" "F3" "H3" "J3"}))
                }
            )

            phases:{
            (phase "Opening"
                (play
                    (do (roll)
                        next:(move Pass
                            (then
                                (if (= 1 ("Throw"))
                                    (and {
                                        (fromTo (from (coord "J3")) (to (coord "J2")))
                                        (if (is Mover P1)
                                            (swap Players P1 P2)
                                        )
                                        (set NextPlayer (player 2))
                                    })
                                )
                            )
                        )
                    )
                )
                (nextPhase (= 1 (count Pips)) "Playing")
            )
            (phase "Playing"
                (play
                    (do
                        (roll)
                        next:(if (can Move (forEach Piece))
                            (forEach Piece (then (if (is In ("Throw") (sites {1 4 6})) (moveAgain))))
                            (move Pass (then (if (is In ("Throw") (sites {1 4 6})) (moveAgain))))
                        )
                    )
                )
            )
            }

            (end
                (if
                    (no Pieces Mover)
                    (byScore {
                        (score Mover
                            (+ {
                                (* 3("NumEnemyPiecesOnTopRow"))
                                (* 2 ("NumEnemyPiecesOnMiddleRow"))
                                ("NumEnemyPiecesOnBottomRow")
                            })
                        )
                        }
                    )
                )
            )
        )
        >
    "The rules of Jequier.")
})

//------------------------------------------------------------------------------

(rulesets {

    (ruleset "Ruleset/Cypriot Senet (Incomplete)" {

    })

    (ruleset "Ruleset/Double Senet (Incomplete)" {

    })

    (ruleset "Ruleset/Vertical Senet (Incomplete)" {

    })

    (ruleset "Ruleset/Late New Kingdom Senet (Incomplete)" {

    })

    (ruleset "Ruleset/Early New Kingdom Senet (Incomplete)" {

    })

    (ruleset "Ruleset/Middle Kingdom Senet (Incomplete)" {

    })

    (ruleset "Ruleset/Simple Marked Senet (Incomplete)" {

    })

    (ruleset "Ruleset/Simple Senet (Incomplete)" {

    })

    (ruleset "Ruleset/Kendall (Scholarly)" {
        "Play Rules/Kendall" "Dice/4xD2" "Throw/Piccione-Kendall" "Track/Boustrophedon + Backward"
    })

    (ruleset "Ruleset/Kendall Five Pieces (Scholarly)" {
        "Play Rules/Kendall 5 pieces" "Dice/4xD2" "Throw/Piccione-Kendall" "Track/Boustrophedon + Backward"
    })

    (ruleset "Ruleset/Kendall Trap (Scholarly)" {
        "Play Rules/Kendall with trap" "Dice/4xD2" "Throw/Piccione-Kendall" "Track/Boustrophedon + Backward"
    })

    (ruleset "Ruleset/Kendall Home Row (Scholarly)" {
        "Play Rules/Kendall special bear off" "Dice/4xD2" "Throw/Piccione-Kendall" "Track/Boustrophedon + Backward"
    })

    (ruleset "Ruleset/Kendall Starting Throw (Scholarly)" {
        "Play Rules/Kendall starting throw" "Dice/4xD2" "Throw/Piccione-Kendall" "Track/Boustrophedon + Backward"
    })

    (ruleset "Ruleset/Kendall Trap Home Row (Scholarly)" {
        "Play Rules/Kendall with trap and special bear off" "Dice/4xD2" "Throw/Piccione-Kendall" "Track/Boustrophedon + Backward"
    })

    (ruleset "Ruleset/Kendall Five Pieces Starting Throw (Scholarly)" {
        "Play Rules/Kendall 5 pieces and starting throw" "Dice/4xD2" "Throw/Piccione-Kendall" "Track/Boustrophedon + Backward"
    })

    (ruleset "Ruleset/Kendall Starting Throw Trap (Scholarly)" {
        "Play Rules/Kendall with trap and starting throw" "Dice/4xD2" "Throw/Piccione-Kendall" "Track/Boustrophedon + Backward"
    })

    (ruleset "Ruleset/Kendall Starting Throw Home Row (Scholarly)" {
        "Play Rules/Kendall starting throw special bear off" "Dice/4xD2" "Throw/Piccione-Kendall" "Track/Boustrophedon + Backward"
    })

    (ruleset "Ruleset/Kendall Five Pieces Trap (Scholarly)" {
        "Play Rules/Kendall 5 pieces and with trap" "Dice/4xD2" "Throw/Piccione-Kendall" "Track/Boustrophedon + Backward"
    })

    (ruleset "Ruleset/Kendall Five Pieces Home Row (Scholarly)" {
        "Play Rules/Kendall 5 pieces special bear off" "Dice/4xD2" "Throw/Piccione-Kendall" "Track/Boustrophedon + Backward"
    })

    (ruleset "Ruleset/Kendall Five Pieces Starting Throw Home Row (Scholarly)" {
        "Play Rules/Kendall 5 pieces special bear off and starting throw" "Dice/4xD2" "Throw/Piccione-Kendall" "Track/Boustrophedon + Backward"
    })

    (ruleset "Ruleset/Kendall Five Pieces Trap Home Row (Scholarly)" {
        "Play Rules/Kendall 5 pieces trap and special bear off" "Dice/4xD2" "Throw/Piccione-Kendall" "Track/Boustrophedon + Backward"
    })

    (ruleset "Ruleset/Kendall Five Pieces Starting Throw Trap (Scholarly)" {
        "Play Rules/Kendall 5 pieces trap and starting throw" "Dice/4xD2" "Throw/Piccione-Kendall" "Track/Boustrophedon + Backward"
    })

    (ruleset "Ruleset/Kendall Starting Throw Trap Home Row (Scholarly)" {
        "Play Rules/Kendall starting throw trap and special bear off" "Dice/4xD2" "Throw/Piccione-Kendall" "Track/Boustrophedon + Backward"
    })

    (ruleset "Ruleset/Kendall All Options (Scholarly)" {
        "Play Rules/Kendall all options" "Dice/4xD2" "Throw/Piccione-Kendall" "Track/Boustrophedon + Backward"
    })

    (ruleset "Ruleset/Bell (Suggested)" {
        "Play Rules/Bell" "Dice/1xD4" "Throw/Sum" "Track/Boustrophedon"
    })

    (ruleset "Ruleset/Piccione (Scholarly)" {
        "Play Rules/Piccione"  "Dice/4xD2" "Throw/Piccione-Kendall" "Track/Boustrophedon + Backward Except Three Last Spaces"
    })

    (ruleset "Ruleset/Jequier (Scholarly)" {
        "Play Rules/Jequier" "Dice/4xD2" "Throw/Jequier" "Track/Boustrophedon + Backward"
    })

    (ruleset "Ruleset/Cypriot Senet (Reconstructed)"
        {
        // Ruleset To Reconstruct
        }
    )

    (ruleset "Ruleset/Double Senet (Reconstructed)"
        {
        // Ruleset To Reconstruct
        }
    )

    (ruleset "Ruleset/Vertical Senet (Reconstructed)"
        {
        // Ruleset To Reconstruct
        }
    )

    (ruleset "Ruleset/Late New Kingdom Senet (Reconstructed)"
        {
        // Ruleset To Reconstruct
        }
    )

    (ruleset "Ruleset/Early New Kingdom Senet (Reconstructed)"
        {
        // Ruleset To Reconstruct
        }
    )

    (ruleset "Ruleset/Middle Kingdom Senet (Reconstructed)"
        {
        // Ruleset To Reconstruct
        }
    )

    (ruleset "Ruleset/Simple Marked Senet (Reconstructed)"
        {
        // Ruleset To Reconstruct
        }
    )

    (ruleset "Ruleset/Simple Senet (Reconstructed)"
        {
        // Ruleset To Reconstruct
        }
    )

    (ruleset "Ruleset/Historical Information (Incomplete)" {
        // Ruleset To Reconstruct
    })

})

//------------------------------------------------------------------------------

(metadata

    (info
        {
        (description "Senet is one of the oldest board games known in the world, documented from about 3000 BCE until the first millennium BCE in Egypt. It was also played In Cyprus for most of that time, and played at different times in the Levant. Though a full ruleset has never been found, hints from texts and tomb paintings in Egypt give us clues about the manner in which it was likely played. The game was also heavily imbued with religious significance, as the board itself represented the journey through the afterlife.")
        (aliases {"Znt"})
        (useFor "Ruleset/Simple Senet (Incomplete)" (rules "Played on a 3x10 grid. No spaces are marked."))
        (useFor "Ruleset/Simple Senet (Incomplete)" (source "Future reconstruction."))
        (useFor "Ruleset/Simple Marked Senet (Incomplete)" (rules "Played on a 3x10 board, with spaces marked as follows: 26: nefer hieroglyph (good) 27: X 28: ||| 29: ||."))
        (useFor "Ruleset/Simple Marked Senet (Incomplete)" (source "Future reconstruction."))
        (useFor "Ruleset/Middle Kingdom Senet (Incomplete)" (rules "Played on a 3x10 grid with markings in squares (counting from top left): square 2: || 3: ||| 4: X 5: nefer hieroglyph (good) arc over squares 2 & 3 arc over square 5."))
        (useFor "Ruleset/Middle Kingdom Senet (Incomplete)" (source "Future reconstruction."))
        (useFor "Ruleset/Early New Kingdom Senet (Incomplete)" (rules "Played on a 3x10 grid with markings in the following squares: 26: neferu hieroglyph 27: water hieroglpyh 28: 3 birds 29: 2 men."))
        (useFor "Ruleset/Early New Kingdom Senet (Incomplete)" (source "Future reconstruction."))
        (useFor "Ruleset/Late New Kingdom Senet (Incomplete)" (rules "Played on a 3x10 grid with markings in the following squares: 26: neferu 27: water 28: three gods 29: two gods 30: Horus."))
        (useFor "Ruleset/Late New Kingdom Senet (Incomplete)" (source "Future reference."))
        (useFor "Ruleset/Vertical Senet (Incomplete)" (rules "Played on a 3x10 grid, with the long side oriented vertically and with markings in the following squares: 27: neferu hieroglyph 28: neferu hieroglyph 30: neferu hieroglyph. Arcs appear over the top squares in each row."))
        (useFor "Ruleset/Vertical Senet (Incomplete)" (source "Future reconstruction."))
        (useFor "Ruleset/Double Senet (Incomplete)" (rules "Senet played on two 3x10 boards adjacent to each other."))
        (useFor "Ruleset/Double Senet (Incomplete)" (source "Future reconstruction."))
        (useFor "Ruleset/Cypriot Senet (Incomplete)" (rules "Crude limestone boards with depressions instead of squares as spaces.Pebbles, seeds, other small objects, number unknown."))
        (useFor "Ruleset/Cypriot Senet (Incomplete)" (source "Future reconstruction."))
        (useFor "Ruleset/Historical Information (Incomplete)" (rules "Played on a 3x10 board. Pieces can be five or seven in number. Two players. Four casting sticks used as dice. Boustrophedon track from top left to bottom right. "))
        (useFor "Ruleset/Historical Information (Incomplete)" (source "DLP evidence."))
        (useFor "Ruleset/Bell (Suggested)" (rules "Each player has ten pieces. The pieces begin placed on the board alternating between pieces of each player along the track on the first and second rows. One four-sided die. Players throw the die and whoever rolls the higher score plays first. The first player throws the die again and moves a piece according to the number indicated on the die. Pieces may move to an empty space or to a space containing the opponent's piece. When moving onto the same space as the opponent's piece, the opponent's piece is taken. A piece resting on a marked square cannot be captured. It also must move off the board with an exact throw. The player must vacate a marked square at the first possible throw. The player who removes the most pieces from the board wins. "))
        (useFor "Ruleset/Bell (Suggested)" (source "Bell 1979: 27–28."))
        (useFor "Ruleset/Kendall (Scholarly)" (rules "Seven pieces per player, which begin on the board, alternating spaces from white to black along the track. Four throwing sticks, marked on one side and blank on the other, used as dice. The values of the throws are equal to the number of blank sides up, when no blank sides are up the throw = 5. Throws of 1, 4, and 5 grant the player another throw. All throws are made before moving, and a piece must move the full value of one throw at a time. Players alternate turns throwing the sticks, and the first one to throw 1 plays as white and moves the white piece in front. When a piece lands on a space occupied by the opponent's piece, the opponent's piece is sent back to the space where the piece that captured it moved from. When a player has two or more pieces in consecutive spaces, these pieces cannot be sent backward in this way. If a player cannot use a throw to move a piece forward, it must be used to move a piece backward. If a backward move makes a player's piece land on a space occupied by a piece belonging to the opponent, the opponent's piece is sent to the place where the player's move began. If a player cannot move, the turn ends. Spaces 26-30 provide special rules allowing the player to bear off. To move beyond square 26, the player must first land on it with an exact throw. From there, the player may: bear off with a throw of 5; move to square 30 with a throw of 4 and bear off on any subsequent throw; move to square 29 with a throw of 3, but it must stay there until borne off with a throw of 2; move to square 28 with a throw of 2, but it must stay there until borne off with a throw of 3. Pieces in squares 28 and 29 are never required to move backward and bearing off is not required from any space. When a player lands on squares 28-30 and an opponent's piece is already there, the opponent's piece is sent to square 27 instead of 26. When a piece is in square 27, whether by being sent there as described above or by being forced to use a throw of 1 to move into square 27, the player may either move the piece back to square 15 and lose one turn, or may leave the piece in square 27 until a 4 is thrown, bearing the piece off. A player cannot move any other piece on the board when one remains in square 27 or 15 after being sent back to it, and pieces which normally would be protected from bring sent back because they are next to each other may now be sent back. Pieces in squares 28-30 are safe as long as a piece is in square 27. The player in square 27 may decide to give up trying to throw a 4 on any turn and move this piece back to square 15 and lose their next turn. The first player to successfully bear off all their pieces wins."))
        (useFor "Ruleset/Kendall (Scholarly)" (source "Kendall 1979: rules book"))
        (useFor "Ruleset/Kendall Five Pieces (Scholarly)" (rules "Five pieces per player. Standard Kendall rules."))
        (useFor "Ruleset/Kendall Five Pieces (Scholarly)" (source "Kendall 1979: rules book."))
        (useFor "Ruleset/Kendall Starting Throw (Scholarly)" (rules "Each player must throw a 1 to begin play. Standard Kendall rules."))
        (useFor "Ruleset/Kendall Starting Throw (Scholarly)" (source "Kendall 1979: rules book."))
        (useFor "Ruleset/Kendall Trap (Scholarly)" (rules "A roll greater than that required to land exactly on square 26 causes the player to fall into square 27. Standard Kendall Rules."))
        (useFor "Ruleset/Kendall Trap (Scholarly)" (source "Kendall 1979: rules book."))
        (useFor "Ruleset/Kendall Home Row (Scholarly)" (rules "A player must move all of their pieces out of the home row before bearing pieces off. Standard Kendall rules."))
        (useFor "Ruleset/Kendall Home Row (Scholarly)" (source "Kendall 1979: rules book."))
        (useFor "Ruleset/Kendall Five Pieces Starting Throw (Scholarly)" (rules "Five pieces per player. Each player must throw a 1 to begin play. Standard Kendall rules."))
        (useFor "Ruleset/Kendall Five Pieces Starting Throw (Scholarly)" (source "Kendall 1979: rules book."))
        (useFor "Ruleset/Kendall Five Pieces Trap (Scholarly)" (rules "Five pieces per player. A roll greater than that required to land exactly on square 26 causes the player to fall into square 27. Standard Kendall Rules.

        "))
        (useFor "Ruleset/Kendall Five Pieces Trap (Scholarly)" (source "Kendall 1979: rules book."))
        (useFor "Ruleset/Kendall Five Pieces Home Row (Scholarly)" (rules "Five pieces per player. A player must move all of their pieces out of the home row before bearing pieces off. Standard Kendall rules.

        "))
        (useFor "Ruleset/Kendall Five Pieces Home Row (Scholarly)" (source "Kendall 1979: rules book."))
        (useFor "Ruleset/Kendall Starting Throw Trap (Scholarly)" (rules "Each player must throw a 1 to begin play. A roll greater than that required to land exactly on square 26 causes the player to fall into square 27. Standard Kendall Rules.

        "))
        (useFor "Ruleset/Kendall Starting Throw Trap (Scholarly)" (source "Kendall 1979: rules book."))
        (useFor "Ruleset/Kendall Starting Throw Home Row (Scholarly)" (rules "Each player must throw a 1 to begin play. A player must move all of their pieces out of the home row before bearing pieces off. Standard Kendall rules."))
        (useFor "Ruleset/Kendall Starting Throw Home Row (Scholarly)" (source "Kendall 1979: rules book."))
        (useFor "Ruleset/Kendall Trap Home Row (Scholarly)" (rules "A roll greater than that required to land exactly on square 26 causes the player to fall into square 27.A player must move all of their pieces out of the home row before bearing pieces off. Standard Kendall rules.

        "))
        (useFor "Ruleset/Kendall Trap Home Row (Scholarly)" (source "Kendall 1979: rules book."))
        (useFor "Ruleset/Kendall Five Pieces Starting Throw Trap (Scholarly)" (rules "Five pieces per player. Each player must throw a 1 to begin play. A roll greater than that required to land exactly on square 26 causes the player to fall into square 27. Standard Kendall Rules.

        "))
        (useFor "Ruleset/Kendall Five Pieces Starting Throw Trap (Scholarly)" (source "Kendall 1979: rules book."))
        (useFor "Ruleset/Kendall Starting Throw Trap Home Row (Scholarly)" (rules "Each player must throw a 1 to begin play. A roll greater than that required to land exactly on square 26 causes the player to fall into square 27.A player must move all of their pieces out of the home row before bearing pieces off. Standard Kendall rules.

        "))
        (useFor "Ruleset/Kendall Starting Throw Trap Home Row (Scholarly)" (source "Kendall 1979: rules book."))
        (useFor "Ruleset/Kendall Five Pieces Trap Home Row (Scholarly)" (rules "Five pieces per player. A roll greater than that required to land exactly on square 26 causes the player to fall into square 27. A player must move all of their pieces out of the home row before bearing pieces off. Standard Kendall rules.

        "))
        (useFor "Ruleset/Kendall Five Pieces Trap Home Row (Scholarly)" (source "Kendall 1979: rules book."))
        (useFor "Ruleset/Kendall Five Pieces Starting Throw Home Row (Scholarly)" (rules "Five pieces per player. Each player must throw a 1 to begin play. A player must move all of their pieces out of the home row before bearing pieces off. Standard Kendall rules.

        "))
        (useFor "Ruleset/Kendall Five Pieces Starting Throw Home Row (Scholarly)" (source "Kendall 1979: rules book."))
        (useFor "Ruleset/Kendall All Options (Scholarly)" (rules "Five pieces per player. Each player must throw a 1 to begin play.A roll greater than that required to land exactly on square 26 causes the player to fall into square 27. A player must move all of their pieces out of the home row before bearing pieces off. Standard Kendall rules.

        "))
        (useFor "Ruleset/Kendall All Options (Scholarly)" (source "Kendall 1979: rules book."))
        (useFor "Ruleset/Piccione (Scholarly)" (rules "Five pieces per player. Four sticks, with one flat and one round side, used as dice. The value of the throw is equal to the number of flat sides up; when all round sides are up the throw = 5. A throw of 5 grants the player another throw. Players may enter a piece onto the board with a throw of 1. When a piece is entered, another throw is granted which must be used to move that piece. Throws may be divided among the pieces on the board as a player sees fit. Splitting throws in this way cannot be used to enter a piece, but the throw which is granted to move an entered piece may be divided, as long as the entered pieces moves at least one space. Pieces cannot land on the same space. If a throw does not allow a piece to move forward, it must move backward. All pieces must move in the same direction during a turn. If it is impossible for a piece to move from square 1, it must be removed from the board and entered again. If a player cannot move forward or backward, the turn ends. Squares 15 and 26 grant the player an extra throw. If pieces land on these squares as a result of splitting a throw, that throw must be fully used before the new throw is taken. A piece which lands on square 27 is removed from the board and must enter again. Players must bear off the board by an exact throw. Pieces may not move backwards from squares 28, 29, or 30. Pieces are not required to bear off unless no other forward move is possible. The fist player to bear off all their pieces wins."))
        (useFor "Ruleset/Piccione (Scholarly)" (source "Piccione 1977, King Tut's Game rules."))
        (useFor "Ruleset/Jequier (Scholarly)" (rules "Five pieces per player. Pieces begin on the board on the first row of spaces, alternating white and then black. Four sticks used as dice, with one red side and one plain side. Throws are determined by the number of plain sides that land face up, when all red sides are up the throw = 6. Throws of 1, 4, and 6 grant the player another throw. Throws are played immediately after they are thrown. The first player to throw a 1 plays as black, moves the black piece in front of the line of pieces one space, and then continues to play. Pieces which are in their starting spots may not move until after the piece immediately in front of them has moved. Pieces may not move past a group of the opponent's pieces which are resting in three squares in a row. Pieces may land on a square with an opponent's piece, sending the opponent's piece back to the unoccupied space furthest from the end. However, if two or more of the opponent's pieces are in a row, these cannot be sent back in this way. Pieces on squares 26, 28, 29, and 20 are likewise safe from being sent back. If a piece cannot move forward, it must move backward to an open space. If no moves are possible, the turn ends. A piece landing in square 27 is sent back to the furthest unoccupied space from the end. Pieces cannot be borne off until all of the player's pieces are in the last row. Pieces moving beyond the final space are borne off the board. The first player to remove their pieces from the board wins. Points are awarded based on the number of the opponent's pieces which remain on the board, 1 for each in the final row, 2 for each in the middle row, 3 for each in the first row."))
        (useFor "Ruleset/Jequier (Scholarly)" (source "Jéquier 1930."))
        (version "1.3.0")
        (classification "board/race/escape")
        (credit "Eric Piette")
        (origin  "This game was played in Egypt, from around 2970BCE to 301BCE.")
        }
    )

    (graphics {

        // Kendall symbols
        (useFor "Ruleset/Kendall (Scholarly)" (show Symbol "3nefer" Cell 5 scale:0.75))
        (useFor "Ruleset/Kendall (Scholarly)" (show Symbol "water" Cell 6 scale:0.75))
        (useFor "Ruleset/Kendall (Scholarly)" (show Symbol "3flags" Cell 7 scale:0.75))
        (useFor "Ruleset/Kendall (Scholarly)" (show Symbol "2flags" Cell 8 scale:0.75))
        (useFor "Ruleset/Kendall (Scholarly)" (show Symbol "horus" Cell 9 scale:0.9))

        (useFor "Ruleset/Kendall Five Pieces (Scholarly)" (show Symbol "3nefer" Cell 5 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces (Scholarly)" (show Symbol "water" Cell 6 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces (Scholarly)" (show Symbol "3flags" Cell 7 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces (Scholarly)" (show Symbol "2flags" Cell 8 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces (Scholarly)" (show Symbol "horus" Cell 9 scale:0.9))

        (useFor "Ruleset/Kendall Starting Throw (Scholarly)" (show Symbol "3nefer" Cell 5 scale:0.75))
        (useFor "Ruleset/Kendall Starting Throw (Scholarly)" (show Symbol "water" Cell 6 scale:0.75))
        (useFor "Ruleset/Kendall Starting Throw (Scholarly)" (show Symbol "3flags" Cell 7 scale:0.75))
        (useFor "Ruleset/Kendall Starting Throw (Scholarly)" (show Symbol "2flags" Cell 8 scale:0.75))
        (useFor "Ruleset/Kendall Starting Throw (Scholarly)" (show Symbol "horus" Cell 9 scale:0.9))

        (useFor "Ruleset/Kendall Trap (Scholarly)" (show Symbol "3nefer" Cell 5 scale:0.75))
        (useFor "Ruleset/Kendall Trap (Scholarly)" (show Symbol "water" Cell 6 scale:0.75))
        (useFor "Ruleset/Kendall Trap (Scholarly)" (show Symbol "3flags" Cell 7 scale:0.75))
        (useFor "Ruleset/Kendall Trap (Scholarly)" (show Symbol "2flags" Cell 8 scale:0.75))
        (useFor "Ruleset/Kendall Trap (Scholarly)" (show Symbol "horus" Cell 9 scale:0.9))

        (useFor "Ruleset/Kendall Home Row (Scholarly)" (show Symbol "3nefer" Cell 5 scale:0.75))
        (useFor "Ruleset/Kendall Home Row (Scholarly)" (show Symbol "water" Cell 6 scale:0.75))
        (useFor "Ruleset/Kendall Home Row (Scholarly)" (show Symbol "3flags" Cell 7 scale:0.75))
        (useFor "Ruleset/Kendall Home Row (Scholarly)" (show Symbol "2flags" Cell 8 scale:0.75))
        (useFor "Ruleset/Kendall Home Row (Scholarly)" (show Symbol "horus" Cell 9 scale:0.9))

        (useFor "Ruleset/Kendall Five Pieces Starting Throw (Scholarly)" (show Symbol "3nefer" Cell 5 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces Starting Throw (Scholarly)" (show Symbol "water" Cell 6 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces Starting Throw (Scholarly)" (show Symbol "3flags" Cell 7 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces Starting Throw (Scholarly)" (show Symbol "2flags" Cell 8 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces Starting Throw (Scholarly)" (show Symbol "horus" Cell 9 scale:0.9))

        (useFor "Ruleset/Kendall Five Pieces Trap (Scholarly)" (show Symbol "3nefer" Cell 5 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces Trap (Scholarly)" (show Symbol "water" Cell 6 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces Trap (Scholarly)" (show Symbol "3flags" Cell 7 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces Trap (Scholarly)" (show Symbol "2flags" Cell 8 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces Trap (Scholarly)" (show Symbol "horus" Cell 9 scale:0.9))

        (useFor "Ruleset/Kendall Five Pieces Home Row (Scholarly)" (show Symbol "3nefer" Cell 5 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces Home Row (Scholarly)" (show Symbol "water" Cell 6 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces Home Row (Scholarly)" (show Symbol "3flags" Cell 7 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces Home Row (Scholarly)" (show Symbol "2flags" Cell 8 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces Home Row (Scholarly)" (show Symbol "horus" Cell 9 scale:0.9))

        (useFor "Ruleset/Kendall Starting Throw Trap (Scholarly)" (show Symbol "3nefer" Cell 5 scale:0.75))
        (useFor "Ruleset/Kendall Starting Throw Trap (Scholarly)" (show Symbol "water" Cell 6 scale:0.75))
        (useFor "Ruleset/Kendall Starting Throw Trap (Scholarly)" (show Symbol "3flags" Cell 7 scale:0.75))
        (useFor "Ruleset/Kendall Starting Throw Trap (Scholarly)" (show Symbol "2flags" Cell 8 scale:0.75))
        (useFor "Ruleset/Kendall Starting Throw Trap (Scholarly)" (show Symbol "horus" Cell 9 scale:0.9))

        (useFor "Ruleset/Kendall Starting Throw Home Row (Scholarly)" (show Symbol "3nefer" Cell 5 scale:0.75))
        (useFor "Ruleset/Kendall Starting Throw Home Row (Scholarly)" (show Symbol "water" Cell 6 scale:0.75))
        (useFor "Ruleset/Kendall Starting Throw Home Row (Scholarly)" (show Symbol "3flags" Cell 7 scale:0.75))
        (useFor "Ruleset/Kendall Starting Throw Home Row (Scholarly)" (show Symbol "2flags" Cell 8 scale:0.75))
        (useFor "Ruleset/Kendall Starting Throw Home Row (Scholarly)" (show Symbol "horus" Cell 9 scale:0.9))

        (useFor "Ruleset/Kendall Trap Home Row (Scholarly)" (show Symbol "3nefer" Cell 5 scale:0.75))
        (useFor "Ruleset/Kendall Trap Home Row (Scholarly)" (show Symbol "water" Cell 6 scale:0.75))
        (useFor "Ruleset/Kendall Trap Home Row (Scholarly)" (show Symbol "3flags" Cell 7 scale:0.75))
        (useFor "Ruleset/Kendall Trap Home Row (Scholarly)" (show Symbol "2flags" Cell 8 scale:0.75))
        (useFor "Ruleset/Kendall Trap Home Row (Scholarly)" (show Symbol "horus" Cell 9 scale:0.9))

        (useFor "Ruleset/Kendall Five Pieces Starting Throw Trap (Scholarly)" (show Symbol "3nefer" Cell 5 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces Starting Throw Trap (Scholarly)" (show Symbol "water" Cell 6 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces Starting Throw Trap (Scholarly)" (show Symbol "3flags" Cell 7 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces Starting Throw Trap (Scholarly)" (show Symbol "2flags" Cell 8 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces Starting Throw Trap (Scholarly)" (show Symbol "horus" Cell 9 scale:0.9))

        (useFor "Ruleset/Kendall Starting Throw Trap Home Row (Scholarly)" (show Symbol "3nefer" Cell 5 scale:0.75))
        (useFor "Ruleset/Kendall Starting Throw Trap Home Row (Scholarly)" (show Symbol "water" Cell 6 scale:0.75))
        (useFor "Ruleset/Kendall Starting Throw Trap Home Row (Scholarly)" (show Symbol "3flags" Cell 7 scale:0.75))
        (useFor "Ruleset/Kendall Starting Throw Trap Home Row (Scholarly)" (show Symbol "2flags" Cell 8 scale:0.75))
        (useFor "Ruleset/Kendall Starting Throw Trap Home Row (Scholarly)" (show Symbol "horus" Cell 9 scale:0.9))

        (useFor "Ruleset/Kendall Five Pieces Trap Home Row (Scholarly)" (show Symbol "3nefer" Cell 5 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces Trap Home Row (Scholarly)" (show Symbol "water" Cell 6 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces Trap Home Row (Scholarly)" (show Symbol "3flags" Cell 7 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces Trap Home Row (Scholarly)" (show Symbol "2flags" Cell 8 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces Trap Home Row (Scholarly)" (show Symbol "horus" Cell 9 scale:0.9))

        (useFor "Ruleset/Kendall Five Pieces Starting Throw Home Row (Scholarly)" (show Symbol "3nefer" Cell 5 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces Starting Throw Home Row (Scholarly)" (show Symbol "water" Cell 6 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces Starting Throw Home Row (Scholarly)" (show Symbol "3flags" Cell 7 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces Starting Throw Home Row (Scholarly)" (show Symbol "2flags" Cell 8 scale:0.75))
        (useFor "Ruleset/Kendall Five Pieces Starting Throw Home Row (Scholarly)" (show Symbol "horus" Cell 9 scale:0.9))

        (useFor "Ruleset/Kendall All Options (Scholarly)" (show Symbol "3nefer" Cell 5 scale:0.75))
        (useFor "Ruleset/Kendall All Options (Scholarly)" (show Symbol "water" Cell 6 scale:0.75))
        (useFor "Ruleset/Kendall All Options (Scholarly)" (show Symbol "3flags" Cell 7 scale:0.75))
        (useFor "Ruleset/Kendall All Options (Scholarly)" (show Symbol "2flags" Cell 8 scale:0.75))
        (useFor "Ruleset/Kendall All Options (Scholarly)" (show Symbol "horus" Cell 9 scale:0.9))

        // Jequier symbols
        (useFor "Ruleset/Jequier (Scholarly)" (show Symbol "3nefer" Cell 5 scale:0.75))
        (useFor "Ruleset/Jequier (Scholarly)" (show Symbol "water" Cell 6 scale:0.75))
        (useFor "Ruleset/Jequier (Scholarly)" (show Symbol "3flags" Cell 7 scale:0.75))
        (useFor "Ruleset/Jequier (Scholarly)" (show Symbol "2flags" Cell 8 scale:0.75))
        (useFor "Ruleset/Jequier (Scholarly)" (show Symbol "horus" Cell 9 scale:0.9))

        // Bell symbols
        (useFor "Ruleset/Bell (Suggested)" (show Symbol "senetcross" Cell 5 scale:0.85))
        (useFor "Ruleset/Bell (Suggested)" (show Symbol "thinCross" Cell 6))
        (useFor "Ruleset/Bell (Suggested)" (show Symbol "3lines" Cell 7 scale:0.6))
        (useFor "Ruleset/Bell (Suggested)" (show Symbol "2lines" Cell 8 scale:0.6))

        // Piccione symbols
        (useFor "Ruleset/Piccione (Scholarly)" (show Symbol "ankh_waset" Cell 15 scale:0.85))
        (useFor "Ruleset/Piccione (Scholarly)" (show Symbol "3nefer" Cell 5 scale:0.8))
        (useFor "Ruleset/Piccione (Scholarly)" (show Symbol "water" Cell 6 scale:0.75))
        (useFor "Ruleset/Piccione (Scholarly)" (show Symbol "3bird" Cell 7 scale:0.9))
        (useFor "Ruleset/Piccione (Scholarly)" (show Symbol "2human_knee" Cell 8 scale:0.9))
        (useFor "Ruleset/Piccione (Scholarly)" (show Symbol "2human_knee" Cell 8 scale:0.9))
        (useFor "Ruleset/Piccione (Scholarly)" (show Symbol "horus" Cell 9 scale:0.9))

        (board Colour Symbols (colour DarkBrown))
        (piece ExtendName P2 "2")
        (useFor "Ruleset/Jequier (Scholarly)" (piece Colour "Die" state:0 fillColour:(colour Red)))
    })
    (ai
        "Senet_ai"
    )
)
