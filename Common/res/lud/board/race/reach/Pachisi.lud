(define "Goal" 96)

//------------------------------------------------------------------------------

(game "Pachisi"
    (players 4)
    (equipment {
        (board
            (add
                (hole
                    (merge
                        (shift 0 8 (rectangle 3 19))
                        (shift 8 0 (rectangle 19 3))
                    )
                    (poly {{8 8} {8 11} {11 11} {11 8}})
                )
                cells:{ { 8 28 48 68 69 70 71 51 31 11 10 9 } }
            )
            {
            (track "Track1" "97,68,N,11,E,N,W,53,N,W,S,42,W,S,E,8,S,55,N8" P1 directed:True)
            (track "Track2" "98,46,W,53,N,W,S,42,W,S,E,8,S,E,N,11,E,34,W8" P2 directed:True)
            (track "Track3" "99,81,S,42,W,S,E,8,S,E,N,11,E,N,W,53,N,94,S8" P3 directed:True)
            (track "Track4" "100,4,E,8,S,E,N,11,E,N,W,53,N,W,S,42,W,19,E8" P4 directed:True)
            }
        )
        (hand Each)
        (dice d:2 from:0 num:6)
        (map "Die" {(pair 0 25) (pair 1 10) (pair 2 2) (pair 3 3) (pair 4 4) (pair 5 5) (pair 6 6)})
        (map "Entry" {(pair 1 68) (pair 2 46) (pair 3 81) (pair 4 4)})
        (map "PreviousGoal" {(pair 1 9) (pair 2 27) (pair 3 52) (pair 4 26)})
        (regions "Castle" {61 63 65 32 47 15 80 84 86 21 38 3})
        (regions "Grace" {0 1 6})
        (piece "Pawn" Each
            (if (or
                    (= (trackSite Move steps:(count Pips)) ("Goal"))
                    (and
                        (is In (count Pips) (sites "Grace") )
                        (= (from) (mapEntry "PreviousGoal" (mover)))
                    )
                )
                (move
                    Select
                    (from)
                    (to ("Goal"))
                    (then (remove (last From)))
                )
                (if (and
                        (not (= (trackSite Move steps:(mapEntry "Die" (count Pips))) ("Goal")))
                        (not (= (trackSite Move steps:(mapEntry "Die" (count Pips))) Off))
                    )
                    (move
                        (from (from) level:(level))
                        (to
                            (trackSite Move steps:(mapEntry "Die" (count Pips)))
                            (apply if:(or
                                    (not
                                        (is In
                                            (trackSite Move steps:(mapEntry "Die" (count Pips)))
                                            (sites "castle")
                                        )
                                    )
                                    (and
                                        (is In
                                            (trackSite Move steps:(mapEntry "Die" (count Pips)))
                                            (sites "Castle")
                                        )
                                        (is Friend
                                            (who
                                                at:(trackSite
                                                    Move
                                                    steps:(mapEntry "Die" (count Pips))
                                                )
                                            )
                                        )
                                    )
                                )
                                (if
                                    (is Enemy (who at:(to)))
                                    (fromTo
                                        (from (to))
                                        (to (handSite (who at:(to))))
                                    )
                                )
                            )
                        )
                    )
                )
            )
        )
        }
    )
    (rules
        (start {
            (place Stack "Pawn1" (handSite P1) count:4)
            (place Stack "Pawn2" (handSite P2) count:4)
            (place Stack "Pawn3" (handSite P3) count:4)
            (place Stack "Pawn4" (handSite P4) count:4)
            (set Team 1 {P1 P3})
            (set Team 2 {P2 P4})
        })

        phases:{
        (phase "firstTurn"
            (play
                (do
                    (roll)
                    next:(move
                        (from (handSite (mover)))
                        (to
                            (trackSite Move
                                from:(handSite (mover))
                                steps:(mapEntry "Die" (count Pips))
                            )
                        )
                    )
                )
            )
            (nextPhase (> (count Moves) 3) "Movement")
        )
        (phase "Movement"
            (play (do (roll)
                    next:(or
                        {
                        (forEach Piece)
                        (if (and
                                (!= (what at:(handSite (mover))) 0)
                                (is In (count Pips) (sites "Grace") )
                            )
                            (move
                                (from
                                    (handSite Mover)
                                    level:(topLevel at:(handSite (mover)))
                                )
                                (to (mapEntry "Entry" (mover)))
                            )
                        )
                        (move Pass)
                        }
                        (then
                            (if
                                (is In (count Pips) (sites "Grace") )
                                (moveAgain)
                            )
                        )
                    )
                )
            )
        )
        }
        (end  (if (no Pieces TeamMover) (result TeamMover Win)))
    )
)

//------------------------------------------------------------------------------

(option "Variant" <Variant> args:{ <wikipedia> }
    {
    (item  "Wikipedia"  <> "")*
    }
)

//------------------------------------------------------------------------------

(rulesets {

    (ruleset "Ruleset/Wikipedia (Described)"
        {
        "Variant/Wikipedia"
        }
    )

    (ruleset "Ruleset/Pucheesee (Deccan seven cowries) (Observed)"
        {

        }
    )

    (ruleset "Ruleset/Pucheesee (Deccan six cowries) (Observed)"
        {

        }
    )

})

//------------------------------------------------------------------------------

(metadata

    (info
        {
        (description "Pachisi is a race game and one of the longest-played games in South Asia. It is widely played throughout South Asia, and was transformed in the UK and US as Ludo and Parcheesi.")
        (aliases {"Pachis" "Pucheesee"})
        (useFor "Ruleset/Pucheesee (Deccan six cowries) (Observed)" (rules "Four pieces per player. Play begins in the central row of each player's arm of the board. Values of the cowries are: 0=6, 1=10, 2=2, 3=3, 4=4, 5=25, 6=12. A roll of 25 adds an extra move of 1. This extra move can be assigned to any piece or allows the player to move a piece onto the board. Play proceeds in an anti-clockwise direction. Pieces on a space marked \"x\" are safe from being captured. Players throw dice until they receive a 2, 3, or 4, and then move. The value of an individual roll can only move one piece, but multiple pieces can be moved in turns with multiple rolls. If a player rolls the same number three times in a row, it does not count."))
        (useFor "Ruleset/Pucheesee (Deccan six cowries) (Observed)" (source "Herklots 1832:lviii-lix."))
        (useFor "Ruleset/Pucheesee (Deccan seven cowries) (Observed)" (rules "Four pieces per player. Play begins in the central row of each player's arm of the board. Values of the cowries are: 0=6, 1=10, 2=2, 3=3, 4=4, 5=25, 6=30, 7=12. Rolls of 25 and 30 add an extra move of 1, this extra can be assigned to any piece or allows the player to move a piece onto the board. Pieces on a space marked \"x\" are safe from being captured. Players throw dice until they receive a 2, 3, or 4, and then move. The value of an individual roll can only move one piece, but multiple pieces can be moved in turns with multiple rolls. If a player rolls the same number three times in a row, it does not count."))
        (useFor "Ruleset/Pucheesee (Deccan seven cowries) (Observed)" (source "Herklots 1832:lviii-lix."))
        (useFor "Ruleset/Wikipedia (Described)" (rules "The game is played either by two teams of two players, or by two players playing with two sets of pieces. The pieces move along the outer track of the board according to dice throws. If a piece lands on a space occupied by an opponent, the opponent's piece is sent back to the starting position. Certain marked squares indicate spaces where pieces are safe from being sent back. After completing a circuit of the board, the pieces then move into the central row of squares in the arm where the player began. The player must then move off all of their pieces by an exact roll. The player or team to remove all of their pieces from the board first wins."))
        (useFor "Ruleset/Wikipedia (Described)" (source "<a href=\"https://en.wikipedia.org/wiki/Pachisi\" target=\"_blank\" class=\"style1\" style=\"color: #0000EE\" />Wikipedia</a>"))
        (source "Murray 1951: 135")
        (version "1.3.0")
        (classification "board/race/reach")
        (credit "Eric Piette")
        (origin  "This game was played in South Asia, around 1832.")
        }
    )

    (graphics {
        (show Symbol "thinCross" {63 67 65 38 23 3 82 84 86 15 30 47} scale:0.9)
        (board Colour InnerEdges (colour Black))
        (board Colour OuterEdges (colour Black))
        (board Colour Symbols (colour Black))
        (board Colour Phase0 (colour 222 173 123))
        (stackType 0 Ground)
        (stackType 1 Count)
        (stackType 2 Count)
        (stackType 3 Count)
        (stackType 4 Count)
        (piece Scale "Pawn" 0.5)
    })

    (ai
        "Pachisi_ai"
    )
)
