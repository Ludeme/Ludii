(define "CreateVariables"
    (and {
        (set Var "TopLeft" (what at:(coord #1)))
        (set Var "TopRight" (what at:(coord #2)))
        (set Var "BottomRight" (what at:(coord #3)))
        (set Var "BottomLeft" (what at:(coord #4)))
        (set Var "Bottom" (what at:(coord #5)))
        (set Var "Left" (what at:(coord #6)))
        (set Var "Top" (what at:(coord #7)))
        (set Var "Right" (what at:(coord #8)))
    })
)

(define "RemoveOccupiedSites"
    (if (!= 0 (var "TopLeft")) (remove (coord #1)))
    (if (!= 0 (var "TopRight")) (remove (coord #2)))
    (if (!= 0 (var "BottomRight")) (remove (coord #3)))
    (if (!= 0 (var "BottomLeft")) (remove (coord #4)))
    (if (!= 0 (var "Bottom")) (remove (coord #5)))
    (if (!= 0 (var "Left")) (remove (coord #6)))
    (if (!= 0 (var "Top")) (remove (coord #7)))
    (if (!= 0 (var "Right")) (remove (coord #8)))
)

(define "Rotation"
    (if (!= 0 (var "TopLeft"))
        (add (piece (var "TopLeft")) (to (coord #1)))
    )
    (if (!= 0 (var "TopRight"))
        (add (piece (var "TopRight")) (to (coord #2)))
    )
    (if (!= 0 (var "BottomRight"))
        (add (piece (var "BottomRight")) (to (coord #3)))
    )
    (if (!= 0 (var "BottomLeft"))
        (add (piece (var "BottomLeft")) (to (coord #4)))
    )
    (if (!= 0 (var "Bottom"))
        (add (piece (var "Bottom")) (to (coord #5)))
    )
    (if (!= 0 (var "Left"))
        (add (piece (var "Left")) (to (coord #6)))
    )
    (if (!= 0 (var "Top"))
        (add (piece (var "Top")) (to (coord #7)))
    )
    (if (!= 0 (var "Right"))
        (add (piece (var "Right")) (to (coord #8)))
    )
)

(define "RegionToCheck"
    (if (is In (last To) (sites "BottomLeft"))
        (intersection (sites Occupied by:#1) (sites "BottomLeft"))
        (if (is In (last To) (sites "BottomRight"))
            (intersection (sites Occupied by:#1) (sites "BottomRight"))
            (if (is In (last To) (sites "TopLeft"))
                (intersection (sites Occupied by:#1) (sites "TopLeft"))
                (intersection (sites Occupied by:#1) (sites "TopRight"))
            )
        )
    )
)

//-------------------------------------------------------------------------

(game "Pentago"
    (players 2)
    (equipment {
        (board (square 6) use:Vertex)
        (piece "Ball" Each)
        (regions "BottomLeft" (expand origin:(coord "A1") steps:3))
        (regions "BottomRight" (expand origin:(coord "D1") steps:3))
        (regions "TopLeft" (expand origin:(coord "A4") steps:3))
        (regions "TopRight" (expand origin:(coord "D4") steps:3))
    })
    (rules
        phases:{
        (phase "Place"
            (play
                (move Add (to (sites Empty)) (then (moveAgain)))
            )
            (end (if (is Line 5 All) (result Mover Win)))
            (nextPhase Mover "Rotate")
        )

        (phase "Rotate"
            (play
                (or
                    (move Select (from (sites {"B2" "B5" "E2" "E5"}))
                        (then
                            (if (= (last To) (coord "E5"))
                                (do ("CreateVariables" "D6" "F6" "F4" "D4" "E4" "D5" "E6" "F5")
                                    next:(and {
                                        ("RemoveOccupiedSites" "D6" "F6" "F4" "D4" "E4" "D5" "E6" "F5")
                                        ("Rotation" "F6" "F4" "D4" "D6" "D5" "E6" "F5" "E4")
                                    })
                                )
                                (if (= (last To) (coord "B5"))
                                    (do ("CreateVariables" "A6" "C6" "C4" "A4" "B4" "A5" "B6" "C5")
                                        next:(and {
                                            ("RemoveOccupiedSites" "A6" "C6" "C4" "A4" "B4" "A5" "B6" "C5")
                                            ("Rotation" "C6" "C4" "A4" "A6" "A5" "B6" "C5" "B4")
                                        })
                                    )
                                    (if (= (last To) (coord "B2"))
                                        (do ("CreateVariables" "A3" "C3" "C1" "A1" "B1" "A2" "B3" "C2")
                                            next:(and {
                                                ("RemoveOccupiedSites" "A3" "C3" "C1" "A1" "B1" "A2" "B3" "C2")
                                                ("Rotation" "C3" "C1" "A1" "A3" "A2" "B3" "C2" "B1")
                                            })
                                        )
                                        (do ("CreateVariables" "D3" "F3" "F1" "D1" "E1" "D2" "E3" "F2")
                                            next:(and {
                                                ("RemoveOccupiedSites" "D3" "F3" "F1" "D1" "E1" "D2" "E3" "F2")
                                                ("Rotation" "F3" "F1" "D1" "D3" "D2" "E3" "F2" "E1")
                                            })
                                        )
                                    )
                                )
                            )
                        )
                    )
                    (move Select (from (sites {"B2" "B5" "E2" "E5"}))
                        (then
                            (if (= (last To) (coord "E5"))
                                (do
                                    ("CreateVariables" "D6" "F6" "F4" "D4" "E4" "D5" "E6" "F5")
                                    next:(and {
                                        ("RemoveOccupiedSites" "D6" "F6" "F4" "D4" "E4" "D5" "E6" "F5")
                                        ("Rotation" "D4" "D6" "F6" "F4" "F5" "E4" "D5" "E6" )
                                    })
                                )
                                (if (= (last To) (coord "B5"))
                                    (do ("CreateVariables" "A6" "C6" "C4" "A4" "B4" "A5" "B6" "C5")
                                        next:(and {
                                            ("RemoveOccupiedSites" "A6" "C6" "C4" "A4" "B4" "A5" "B6" "C5")
                                            ("Rotation" "A4" "A6" "C6" "C4" "C5" "B4" "A5" "B6")
                                        })
                                    )
                                    (if (= (last To) (coord "B2"))
                                        (do ("CreateVariables" "A3" "C3" "C1" "A1" "B1" "A2" "B3" "C2")
                                            next:(and {
                                                ("RemoveOccupiedSites" "A3" "C3" "C1" "A1" "B1" "A2" "B3" "C2")
                                                ("Rotation" "A1" "A3" "C3" "C1" "C2" "B1" "A2" "B3")
                                            })
                                        )
                                        (do
                                            ("CreateVariables" "D3" "F3" "F1" "D1" "E1" "D2" "E3" "F2")
                                            next:(and {
                                                ("RemoveOccupiedSites" "D3" "F3" "F1" "D1" "E1" "D2" "E3" "F2")
                                                ("Rotation" "D1" "D3" "F3" "F1" "F2" "E1" "D2" "E3")
                                            })
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            )
            (end {
                (if (and
                        (is Line 5 All throughAny:("RegionToCheck" Mover))
                        (is Line 5 All throughAny:("RegionToCheck" Next))
                    )
                    (result Mover Draw)
                )
                (if (is Line 5 All throughAny:("RegionToCheck" Mover)) (result Mover Win))
                (if (is Line 5 All throughAny:("RegionToCheck" Next)) (result Next Win))
            })
            (nextPhase Mover "Place")
        )
        }
    )
)

//------------------------------------------------------------------------------

(metadata

    (info
        {
        (description "Pentago is an abstract strategy game for two players with four 3×3 grids arranged into a larger 6×6 grid. ")
        (rules "After placing a marble, the player has to twist one of the grids by 90°, thus changing the board after every turn. The first player to get five marbles in a row wins. In case of both players having five in a row in the same time, the game is a draw.")
        (source "<a href=\"https://boardgamegeek.com/boardgame/19841/pentago\" target=\"_blank\" class=\"style1\" style=\"color: #0000EE\" />BGG</a>")
        (version "1.3.0")
        (classification "board/space/line")
        (author "Tomas Flodén")
        (credit "Eric Piette")
        (date "2005")
        }
    )

    (graphics {
        (show Edges Hidden)
        (show Symbol "Disc" (sites Board) fillColour:(colour 175 8 63) edgeColour:(colour White))
        (board Background image:"square.svg" fillColour:(colour 175 8 63) edgeColour:(colour 175 8 63) scale:1.4)
    })

)
