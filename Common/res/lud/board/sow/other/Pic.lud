(define "NumPlayers" <Player:num>)
(define "PiecesOwnedBy" (count Cell at:(handSite #1)))
(define "NoPieceOnBoard" (no Pieces All in:(sites Board)))

//------------------------------------------------------------------------------

(game "Pic"
    (players "NumPlayers")

    (equipment {
        (board
            (concentric {(* 3 "NumPlayers")})
            (track "Track" <Player:track> loop:True)
            use:Vertex
        )
        (piece "Seed" Shared)
        (hand Each)
        <Player:regions>
    })
    (rules
        (start (set Count <Start:numSeeds> to:(sites Track) ) )

        (play
            (or {
                (move Select
                    (from
                        (sites Mover)
                        if:(is Occupied (from))
                    )
                    (then
                        (sow
                            apply:(if (and
                                    (not (is In (to) (sites Mover)))
                                    (= 3 (count at:(to)))
                                )
                                (and
                                    (fromTo
                                        (from (to))
                                        (to (handSite Mover))
                                        count:3
                                    )
                                    (set State at:(to) (mover))
                                )
                            )
                        )
                    )
                )
                }
                (then
                    (forEach Site (sites Board)
                        (if (and (is Occupied (site)) (!= 0 (state at:(site))))
                            (and
                                (fromTo
                                    (from (site))
                                    (to (handSite (state at:(site))))
                                    count:(count at:(site))
                                )
                                (set State at:(site) (state at:(site)))
                            )
                        )
                    )
                )
            )
        )

        (end
            (if  ("NoPieceOnBoard")
                (byScore {
                    <Player:scores>
                })
            )
        )
    )
)

//------------------------------------------------------------------------------

(option "Start" <Start> args:{ <numSeeds> }
    {
    (item "9"   <9>  "Each hole contains initially 9 seeds.")
    (item "12"   <12>  "Each hole contains initially 12 seeds.")*
})

(option "Players" <Player> args:{ <num> <track> <regions> <scores>}
    {
    (item "2"   <2>  <{0 2 4 5 3 1}>
        <
        (regions P1 (sites {0 2 4}))
        (regions P2 (sites {5 3 1}))
        >
        <
        (score P1 ("PiecesOwnedBy" P1))
        (score P2 ("PiecesOwnedBy" P2))
        >
    "The game is played with 2 players.")
    (item "3"   <3>  <{0 1 3 5 7 8 6 4 2}>
        <
        (regions P1 (sites {0 1 3}))
        (regions P2 (sites {5 7 8}))
        (regions P3 (sites {6 4 2}))
        >
        <
        (score P1 ("PiecesOwnedBy" P1))
        (score P2 ("PiecesOwnedBy" P2))
        (score P3 ("PiecesOwnedBy" P3))
        >
    "The game is played with 3 players.")
    (item "4"   <4>  <{0 2 4 6 8 10 11 9 7 5 3 1}>
        <
        (regions P1 (sites {0 2 4}))
        (regions P2 (sites {6 8 10}))
        (regions P3 (sites {11 9 7}))
        (regions P4 (sites {5 3 1}))
        >
        <
        (score P1 ("PiecesOwnedBy" P1))
        (score P2 ("PiecesOwnedBy" P2))
        (score P3 ("PiecesOwnedBy" P3))
        (score P4 ("PiecesOwnedBy" P4))
        >
    "The game is played with 4 players.")
    (item "5"   <5>  <{0 1 3 5 7 9 11 13 14 12 10 8 6 4 2}>
        <
        (regions P1 (sites {0 1 3}))
        (regions P2 (sites {5 7 9}))
        (regions P3 (sites {11 13 14}))
        (regions P4 (sites {12 10 8}))
        (regions P5 (sites {6 4 2}))
        >
        <
        (score P1 ("PiecesOwnedBy" P1))
        (score P2 ("PiecesOwnedBy" P2))
        (score P3 ("PiecesOwnedBy" P3))
        (score P4 ("PiecesOwnedBy" P4))
        (score P5 ("PiecesOwnedBy" P5))
        >
    "The game is played with 5 players.")*
})

//------------------------------------------------------------------------------

(rulesets {

    (ruleset "Ruleset/Pic (Described)" {
        "Players/5" "Start/12"
        }
        variations:{"Players/2" "Players/3" "Players/4"}
    )*

    (ruleset "Ruleset/Nine counters (Described)" {
        "Players/5" "Start/9"
        }
        variations:{"Players/2" "Players/3" "Players/4"}
    )

})

//------------------------------------------------------------------------------

(metadata
    (info
        {
        (description "Piç is a multiplayer mancala-style board game played in eastern Turkey, particularly near the city of Erzurum. Instead of being played on a board, the counters are placed in heaps, and players capture heaps from which they capture all counters which enter that heap.")
        (aliases {"Piç"})
        (useFor "Ruleset/Pic (Described)" (rules "Played by two to five players. Each player has three heaps of counters, with twelve counters per heap. Sowing occurs in an anti-clockwise direction. When a player creates a heap containing three counters in an opponent's heap, a circle is drawn around the heap and the player captures the counters in it and every counter sown into it for the rest of the game. When there are no heaps left, the player with the most counters wins."))
        (useFor "Ruleset/Pic (Described)" (source "And 1979: 52-53."))
        (useFor "Ruleset/Nine counters (Described)" (rules "Nine counters per heap."))
        (useFor "Ruleset/Nine counters (Described)" (source "And 1979: 52-53."))
        (version "1.3.0")
        (classification "board/sow")
        (credit "Eric Piette")
        (origin  "This game was played in Turkey, around 1979.")
        }
    )

    (graphics {
        (board Style Mancala)
        (show LocalStateHoles)
    })
)

