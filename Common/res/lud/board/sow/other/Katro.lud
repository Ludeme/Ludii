(define "Columns" <Row:size>)

(define "OppositePit" (if (is Mover P1) (+ #1 "Columns") (- #1 "Columns") ) )

(define "OppositeMiddlePit" (if (is Mover P1) (+ #1 (* "Columns" 2)) (- #1 (* "Columns" 2)) ) )

(define "OppositeOuterPit" (if (is Mover P1) (+ #1 (* "Columns" 3)) (- #1 (* "Columns" 3)) ) )

(define "PlayFromLastHole" (sites {(last To afterConsequence:True)}))

(define "NoPiece" (= (count in:(sites Player "Home")) 0))

(define "OneSingePieceInTheMiddle" (and (= (count in:(sites Mover "Home")) 1) (= (count in:(sites Mover "Middle")) 1)))
(define "OneSingePieceInTheOuter" (and (= (count in:(sites Mover "Home")) 1) (= (count in:(sites Mover "Outer")) 1)))

(define "OuterMostRowWithPieces"
    (if (!= 0 (count in:(sites Mover "Outer")))
        (sites Mover "Outer")
        (if (!= 0 (count in:(sites Mover "Middle")))
            (sites Mover "Middle")
            (sites Mover "Inner")
        )
    )
)

//------------------------------------------------------------------------------

(game "Katro"
    (players 2)

    (equipment {
        (mancalaBoard 6 "Columns" store:None
            <Row:tracks>
        )
        (piece "Seed" Shared)
        (regions "Home" P1 (sites Track "TrackCCW1"))   // P1 Home
        (regions "Home" P2 (sites Track "TrackCCW2"))   // P2 home
        (regions "Inner" P1 (sites Row 2))              // P1 inner Home
        (regions "Inner" P2 (sites Row 3))              // P2 inner Home
        (regions "Middle" P1 (sites Row 1))             // P1 inner Home
        (regions "Middle" P2 (sites Row 4))             // P2 inner Home
        (regions "Outer" P1 (sites Bottom))             // P1 inner Home
        (regions "Outer" P2 (sites Top))                // P2 inner Home
        }
    )
    (rules

        (start (set Count 2 to:(sites Board)) )

        (play
            (or {
                (if (or (= (value Player Mover) 1) (<= (value Player Mover) 0) )
                    (move
                        Select
                        (from
                            (if
                                (is Mover Prev)
                                "PlayFromLastHole"
                                ("OuterMostRowWithPieces")
                            )
                            if:(> (count at:(from)) 0)
                        )
                        (then
                            (sow
                                "TrackCCW"
                                owner:(mover)
                                apply:(if (> (count at:(to)) 1)
                                    (and {
                                        (if (<= (value Player Mover) 0)
                                            (set Value Mover 1)
                                        )
                                        (moveAgain)
                                        (if (is In (to) (sites Mover "Inner"))
                                            (if (!= 0 (count at:("OppositePit" (to))))
                                                (fromTo
                                                    (from ("OppositePit" (to)))
                                                    (to (to))
                                                    count:(count at:("OppositePit" (to)))
                                                )
                                                (if (!= 0 (count at:("OppositeMiddlePit" (to))))
                                                    (fromTo
                                                        (from ("OppositeMiddlePit" (to)))
                                                        (to (to))
                                                        count:(count at:("OppositeMiddlePit" (to)))
                                                    )
                                                    (if (!= 0 (count at:("OppositeOuterPit" (to))))
                                                        (fromTo
                                                            (from ("OppositeOuterPit" (to)))
                                                            (to (to))
                                                            count:(count at:("OppositeOuterPit" (to)))
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    })
                                    (set Value Mover 0)
                                )
                            )
                        )
                    )
                )
                (if (or (= (value Player Mover) 2) (<= (value Player Mover) 0) )
                    (move
                        Select
                        (from
                            (if
                                (is Mover Prev)
                                "PlayFromLastHole"
                                ("OuterMostRowWithPieces")
                            )
                            if:(> (count at:(from)) 0)
                        )
                        (then
                            (sow
                                "TrackCW"
                                owner:(mover)
                                apply:(if (> (count at:(to)) 1)
                                    (and {
                                        (if (<= (value Player Mover) 0)
                                            (set Value Mover 2)
                                        )
                                        (moveAgain)
                                        (if (is In (to) (sites Mover "Inner"))
                                            (if (!= 0 (count at:("OppositePit" (to))))
                                                (fromTo
                                                    (from ("OppositePit" (to)))
                                                    (to (to))
                                                    count:(count at:("OppositePit" (to)))
                                                )
                                                (if (!= 0 (count at:("OppositeMiddlePit" (to))))
                                                    (fromTo
                                                        (from ("OppositeMiddlePit" (to)))
                                                        (to (to))
                                                        count:(count at:("OppositeMiddlePit" (to)))
                                                    )
                                                    (if (!= 0 (count at:("OppositeOuterPit" (to))))
                                                        (fromTo
                                                            (from ("OppositeOuterPit" (to)))
                                                            (to (to))
                                                            count:(count at:("OppositeOuterPit" (to)))
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    })
                                    (set Value Mover 0)
                                )
                            )
                        )
                    )
                )
                (if ("OneSingePieceInTheOuter")
                    (move
                        (from
                            (sites Mover "Outer")
                            if:(> (count at:(from)) 0)
                        )
                        (to
                            (if (is Mover P1)
                                (ahead (from) N)
                                (ahead (from) S)
                            )
                        )
                    )
                )
                (if ("OneSingePieceInTheMiddle")
                    (move
                        (from
                            (sites Mover "Middle")
                            if:(and
                                (> (count at:(from)) 0)
                                (< 1 (count in:(sites Column (column of:(from)))))
                            )
                        )
                        (to
                            (if (is Mover P1)
                                (ahead (from) N)
                                (ahead (from) S)
                            )
                        )
                        (then
                            (and
                                (if (!= 0 (count at:("OppositePit" (last To))))
                                    (fromTo
                                        (from ("OppositePit" (last To)))
                                        (to (last To))
                                        count:(count at:("OppositePit"  (last To)))
                                    )
                                    (if (!= 0 (count at:("OppositeMiddlePit"  (last To))))
                                        (fromTo
                                            (from ("OppositeMiddlePit"  (last To)))
                                            (to (last To))
                                            count:(count at:("OppositeMiddlePit"  (last To)))
                                        )
                                        (if (!= 0 (count at:("OppositeOuterPit"  (last To))))
                                            (fromTo
                                                (from ("OppositeOuterPit"  (last To)))
                                                (to (last To))
                                                count:(count at:("OppositeOuterPit" (last To)))
                                            )
                                        )
                                    )
                                )
                                (moveAgain)
                            )
                        )
                    )
                )
            })
        )

        (end
            (forEach NonMover
                if:("NoPiece")
                (result Player Loss)
            )
        )
    )
)

//------------------------------------------------------------------------------

(option "Board Size" <Row> args:{ <size> <tracks>}
    {
    (item "3"
        <3>
        <
        {
        (track "TrackCCW1" "0,E,N1,W,N1,E" loop:True P1)
        (track "TrackCW1" "2,W,N1,E,N1,W" loop:True P1)
        (track "TrackCW2" "9,E,N1,W,N1,E" loop:True P2)
        (track "TrackCCW2" "11,W,N1,E,N1,W" loop:True P2)
        }
        >
    "3 Holes per row.")
    (item "6"
        <6>
        <
        {
        (track "TrackCCW1" "0,E,N1,W,N1,E" loop:True P1)
        (track "TrackCW1" "5,W,N1,E,N1,W" loop:True P1)
        (track "TrackCW2" "18,E,N1,W,N1,E" loop:True P2)
        (track "TrackCCW2" "23,W,N1,E,N1,W" loop:True P2)
        }
        >
    "6 Holes per row.")**
})

//------------------------------------------------------------------------------

(rulesets {

    (ruleset "Ruleset/Katro (Observed)" {
        "Board Size/6"
        }
        variations:{"Board Size/3"}
    )*

})

//------------------------------------------------------------------------------

(metadata

    (info
        {
        (description "Katro is a unique six-row mancala-style board game played in Madagascar.")
        (rules "6x3 or 6 board. Two counters in each hole. Sowing occurs from one of the holes in the player's outermost row which contains counters, in either direction. Sowing moves in a boustrophedon path along the holes, moving from the last hole in the innermost row to the beginning of the outer row. When the final counter lands in an occupied hole, the contents of this hole are picked up and sowing continues. If this hole is in the player's inner row, the contents of the opponent's hole opposite it are captured, and these counters are also used along with the hole in which the last counter fell for the sowing to continue. If the opponent's inner row hole is empty, counters may be captured from their central row, and if both the inner and central rows are empty, captures may be made from the outer hole. Sowing ends when the final counter lands in an empty hole. When a player has only one counter on their side of the board, it may capture by moving from the central row directly to the inner row hole above it to make a capture (i.e., without following the normal track), and on the move prior to the capture, from the outer to the central row. Play continues until one player has captured all of the counters.")
        (source "de Voogt 1999: 112-113.")
        (version "1.3.0")
        (classification "board/sow")
        (credit "Eric Piette")
        (origin  "This game was played in Madagascar, around 1998.")
        }
    )

    (graphics {
        (board Style Mancala)
    })

    (ai
        "Katro_ai"
    )
)
