(define "PlayFromLastHole" (sites {(last To afterConsequence:True)}))

(define "PiecesOwnedBy" (+ (count at:(mapEntry #1)) (count in:(sites #1))))

//------------------------------------------------------------------------------

(game "Whyo"
    (players 2)

    (equipment {
        (mancalaBoard 2 6
            (track "TrackCCW" "1,E,N,W" loop:True)
        )
        (regions P1 (sites Bottom))                     // P1 home
        (regions P2 (sites Top))                        // P2 home
        (piece "Seed" Shared)
        (map {(pair P1 FirstSite) (pair P2 LastSite)})  // kalahs (storage pits)
    })
    (rules
        (start (set Count 4 to:(sites Track) ) )

        (play
            (move
                Select
                (from
                    (if
                        (is Mover Prev)
                        "PlayFromLastHole"
                        (if (= (score P1) 1)
                            (if (is Mover P1)
                                (union (sites Mover) (sites {12}))
                                (difference (sites Mover) (sites {12}))
                            )
                            (if (= (score P2) 1)
                                (if (is Mover P2)
                                    (union (sites Mover) (sites {1}))
                                    (difference (sites Mover) (sites {1}))
                                )
                                (sites Mover)
                            )
                        )
                    )
                    if:(> (count at:(from)) 0)
                )
                (then
                    (sow
                        apply:(if (= (count at:(to)) 4)
                            (fromTo
                                (from (to))
                                (to (mapEntry Mover))
                                count:(count at:(to))
                            )
                            (if (< (count at:(to)) 1)
                                (moveAgain)
                            )
                        )
                        (then
                            (if (no Moves Next)
                                (and
                                    (forEach Site (union (sites P1) (sites P2))
                                        (if (> (count at:(site)) 0)
                                            (fromTo
                                                (from (site))
                                                (to (mapEntry Mover))
                                                count:(count at:(site))
                                            )
                                        )
                                        (then
                                            (and {
                                                (if (< ("PiecesOwnedBy" P1) ("PiecesOwnedBy" P2))
                                                    (addScore P2 1)
                                                )
                                                (if (< ("PiecesOwnedBy" P2) ("PiecesOwnedBy" P1))
                                                    (addScore P1 1)
                                                )
                                                (if (< (var) 0)
                                                    (and {
                                                        (forEach Site (sites Board)
                                                            (if (> (count at:(site)) 0)
                                                                (remove (site))
                                                            )
                                                        )
                                                        (forEach Site (union (sites P1) (sites P2))
                                                            (add (piece (id "Seed" Shared)) (to (site)) count:4)
                                                        )
                                                    })
                                                )
                                            })
                                        )
                                    )
                                    (set Var (+ (var) 1))
                                )
                            )
                        )
                    )
                )
            )
        )

        (end
            (if  (= (var) 1)
                (byScore)
            )
        )
    )
)

//------------------------------------------------------------------------------

(metadata
    (info
        {
        (description "Whyo is a two-row mancala-style board game played in Oron, Nigeria. The name is reportedly taken from the English \"Why oh!\", an exclamation made when referring to smart tricks.")
        (rules "Two rows of six holes with two stores. Four counters in each hole. Players sow in an anti-clockwise direction from a hole in their row. Sowing ends when the last counter falls into a hole, making it contain four counters, which are taken. Sowing also ends when the last counter falls into an empty hole. Sowing continues in any other scenario by picking up the contents of the hole where the last counter was dropped and continuing to sow. The game ends when one player can no longer move. The remaining counters are taken by the last player that was able to move and put into the store. A new round begins: The winner of the previous round now owns seven holes - the six in his row and the next hole in the opponent's row. Player takes fours from the extra hole.")
        (source "Murray 1951: 186.")
        (version "1.3.0")
        (classification "board/sow/two rows")
        (credit "Eric Piette")
        }
    )

    (graphics {
        (board Style Mancala)
    })
)

