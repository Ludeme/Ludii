(define "Columns" 6)

(define "PiecesOwnedBy" (+ (count at:(mapEntry #1)) (count in:(sites #1))))

(define "PossibleSowFrom"
    (if (is Mover P1)
        (not (is In (from) (values Remembered "P1SowFrom")))
        (not (is In (from) (values Remembered "P2SowFrom")))
    )
)

(define "PlayFromLastHole" (sites {(last To afterConsequence:True)}))

(define "NextHole" (trackSite Move from:#1 "Track" steps:#2))

(define "NoPieceOnBoard" (no Pieces All in:(union (sites P1) (sites P2))))

(define "RightMostEmpty"
    (trackSite FirstSite
        "TrackCW"
        from:(mapEntry "RightMost" Mover)
        if:(is Empty (to))
    )
)

(define "ForgetValue"
    (if (is Mover P1)
        (forget Value "OwnedP1" #1)
        (forget Value "OwnedP2" #1)
    )
)

(define "OwnedHoles"
    (if (is Mover P1)
        (sites (values Remembered "OwnedP1"))
        (sites (values Remembered "OwnedP2"))
    )
)

(define "RemmemberOwnedHoles"
    (if (is Mover P1)
        (remember Value "OwnedP1" #1)
        (remember Value "OwnedP2" #1)
    )
)

(define "RemmemberNextOwnedHoles"
    (if (is Next P1)
        (remember Value "OwnedP1" #1)
        (remember Value "OwnedP2" #1)
    )
)

(define "NoMoreCapturePossible"
    (not
        (can Move
            (or
                (move
                    Select
                    (from
                        (sites (values Remembered "OwnedP1"))
                        if:(and (not (is In (from) (values Remembered "P1SowFrom"))) (< 0 (count at:(from))))
                    )
                )
                (move
                    Select
                    (from
                        (sites (values Remembered "OwnedP2"))
                        if:(and (not (is In (from) (values Remembered "P2SowFrom"))) (< 0 (count at:(from))))
                    )
                )
            )
        )
    )
)

//------------------------------------------------------------------------------

(game "Adi"
    (players 2)
    (equipment {
        (mancalaBoard 2 "Columns"
            {
            (track "TrackCCW" "1,E,N,W" loop:True)
            (track "TrackCW" "6,W,N,E" loop:True)
            }
        )
        (regions P1 (sites Bottom))                     // P1 home
        (regions P2 (sites Top))                        // P2 home
        (map {(pair P1 FirstSite) (pair P2 LastSite)})  // kalahs (storage pits)
        (piece "Seed" Shared)
        (map "RightMost" {(pair P1 6) (pair P2 7)})
        (map "CorrespondingHoles" {(pair 1 12) (pair 2 11) (pair 3 10) (pair 4 9) (pair 5 8) (pair 6 7) (pair 7 6) (pair 8 5) (pair 9 4) (pair 10 3) (pair 11 2) (pair 12 1)})
    })

    (rules
        (start {
            (set Count 4 to:(sites Track))
            (set RememberValue "OwnedP1" (sites Bottom))
            (set RememberValue "OwnedP2" (sites Top))
        })
        phases:{
        (phase "Sowing"
            (play
                (or {
                    (move
                        Select
                        (from
                            ("OwnedHoles")
                            if:(and ("PossibleSowFrom") (< 0 (count at:(from))))
                        )
                        (then
                            (and {
                                (sow
                                    "TrackCCW"
                                    if:(and
                                        (is In (to) (sites Next))
                                        (= (count at:(to)) 3)
                                    )
                                    apply:(fromTo
                                        (from (to))
                                        (to (mapEntry (mover)))
                                        count:(count at:(to))
                                    )
                                    backtracking:True
                                )
                                (forEach Value
                                    (array (sites Track from:(last From) to:("NextHole" (last From) (min 12  (count at:(last From))))))
                                    (if (is Mover P1)
                                        (if (is In (value) (values Remembered "P2SowFrom"))
                                            (forget Value "P2SowFrom" (value))
                                        )
                                        (if (is In (value) (values Remembered "P1SowFrom"))
                                            (forget Value "P1SowFrom" (value))
                                        )
                                    )
                                )
                                (if (is Mover P1)
                                    (remember Value "P1SowFrom" (last From))
                                    (remember Value "P2SowFrom" (last From))
                                )
                            })
                        )
                    )
                    }
                    (then
                        (if ("NoMoreCapturePossible")
                            (and {
                                (forEach Site (sites P1)
                                    (if (< 0 (count at:(site)))
                                        (fromTo
                                            (from (site))
                                            (to (mapEntry P1))
                                            count:(count at:(site))
                                        )
                                    )
                                )
                                (forEach Site (sites P2)
                                    (if (< 0 (count at:(site)))
                                        (fromTo
                                            (from (site))
                                            (to (mapEntry P2))
                                            count:(count at:(site))
                                        )
                                    )
                                )
                                (forget Value "OwnedP1" All)
                                (forget Value "OwnedP2" All)
                                (forget Value "P1SowFrom" All)
                                (forget Value "P2SowFrom" All)
                                (if (>=
                                        (+
                                            (count at:(mapEntry P2))
                                            (count in:(sites P2))
                                        )
                                        (+
                                            (count at:(mapEntry P1))
                                            (count in:(sites P1))
                                        )
                                    )
                                    (set NextPlayer (player 1))
                                    (set NextPlayer (player 2))
                                )
                            })
                        )
                    )
                )
            )
            (end (if ("NoPieceOnBoard")
                    {
                    (if (> 4 (count at:(mapEntry P1))) (result P2 Win))
                    (if (> 4 (count at:(mapEntry P2))) (result P1 Win))
                    }
                )
            )
            (nextPhase ("NoPieceOnBoard") "BetweenRounds")
        )
        (phase "BetweenRounds"
            (play
                (if (<= 4 (count at:(mapEntry Mover)))
                    (move
                        (from (mapEntry Mover))
                        (to ("RightMostEmpty"))
                        count:4
                        (then
                            (and
                                ("RemmemberOwnedHoles" (last To))
                                (if (<= 4 (count at:(mapEntry Mover)))
                                    (moveAgain)
                                    (forEach Site (sites Mover)
                                        (if (is Occupied (site))
                                            (and
                                                (fromTo
                                                    (from (mapEntry Next))
                                                    (to (mapEntry "CorrespondingHoles" (site)))
                                                    count:(count at:(site))
                                                )
                                                ("RemmemberNextOwnedHoles" (mapEntry "CorrespondingHoles" (site)))
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            )
            (nextPhase (> 4 (count at:(mapEntry Mover))) "Sowing")
        )
        }
    )
)

//------------------------------------------------------------------------------

(metadata
    (info
        {
        (description "Adi is a two-row mancala-style board game played by the Ewe people of Togo and Ghana. The game can either be played on wooden boards, which are sometimes elaborately carved, or as holes in the ground using seeds or stones as counters.")
        (rules "2x6 board with two stores. Four counters in each hole. Sowing occurs in an anti-clockwise direction from a hole in the player's row. If the final counter falls into a hole in the opponent's row containing two counters, making it contain three, they are captured. Any holes containing three counters in an unbroken line behind it in the opponent's row are also captured. A player cannot sow into a hole from which they sowed until it has been sown into by the opponent. Play continues until no more captures are possible, and the players win the counters they captured and the counters on their side of the board. A new round begins. The player with fewer counters fills up their holes from right to left with four counters. The opponent fills the same number of holes, and continues to play, holding any remaining counters for future rounds, if necessary. Play proceeds as before with the present number of holes in play. Play continues until one player cannot fill any holes.")
        (source "Klose 1906: 75.")
        (version "1.3.0")
        (classification "board/sow/two rows")
        (credit "Eric Piette")
        (origin  "This game was played in West Africa, around 1906.")
        }
    )

    (graphics {
        (board Style Mancala)
    })

)
