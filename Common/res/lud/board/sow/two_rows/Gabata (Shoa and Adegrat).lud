(define "NextHole" (trackSite Move from:#1 #2 steps:#3))

(define "OwnedHoles"
    (if (is Mover P1)
        (sites (values Remembered "OwnedP1"))
        (sites (values Remembered "OwnedP2"))
    )
)

(define "OpponentOwnedHoles"
    (if (is Mover P1)
        (sites (values Remembered "OwnedP2"))
        (sites (values Remembered "OwnedP1"))
    )
)

(define "RemmemberOwnedHoles"
    (if (is Mover P1)
        (remember Value "OwnedP1" #1)
        (remember Value "OwnedP2" #1)
    )
)

(define "OnlyPiecesInMarked"
    (no Pieces All in:(forEach (sites Board) if:(= 0 (state at:(site)))))
)

(define "NoPieceOnBoard" (no Pieces All in:(sites Board)))

(define "RightMostEmpty"
    (trackSite FirstSite
        "TrackCW"
        from:(mapEntry "RightMost" Mover)
        if:(is Empty (to))
    )
)

(define "RememberOwnedHolesRandom"
    (if (< 50 (value Random (range 1 100)))
        (remember Value "OwnedP1" #1)
        (remember Value "OwnedP2" #1)
    )
)

(define "SitesMarkedBy"
    (forEach (sites Board) if:(= #1 (state at:(site))))
)

//------------------------------------------------------------------------------

(game "Gabata (Shoa and Adegrat)"
    (players 2)

    (equipment {
        (mancalaBoard 2 6 store:None
            {
            (track "TrackCCW" "0,E,N,W" loop:True)
            (track "TrackCW" "5,W,N,E" loop:True)
            }
        )
        (piece "Seed" Shared)
        (hand Each)
        (regions P1 (sites Bottom))                     // P1 home
        (regions P2 (sites Top))                        // P2 home
        (map "RightMost" {(pair P1 5) (pair P2 6)})
    })
    (rules

        (start {
            (set RememberValue "OwnedP1" (sites Bottom))
            (set RememberValue "OwnedP2" (sites Top))
            (set Count 4 to:(sites Track) )
        })

        phases:{
        (phase "Opening"
            (play
                (if (is Mover P1)
                    (move Select
                        (from
                            (if (and (not (is Pending)) ("SameTurn"))
                                (sites {("NextHole" (last From) "TrackCCW" 2)})
                                (sites {10})
                            )
                        )
                        (then
                            (sow
                                count:1
                                "TrackCCW"
                                apply:(if (not (is In ("NextHole" (from) "TrackCCW" 2) (intersection (sites Bottom) (sites Right))))
                                    (moveAgain)
                                    (set State at:11 (mover))
                                )
                            )
                        )
                    )
                    (move Select
                        (from
                            (if (and (not (is Pending)) ("SameTurn"))
                                (sites {("NextHole" (last From) "TrackCCW" 2)})
                                (sites {1})
                            )
                        )
                        (then
                            (sow
                                count:1
                                "TrackCCW"
                                apply:(if (not (is In ("NextHole" (from) "TrackCCW" 2) (intersection (sites Top) (sites Left))))
                                    (moveAgain)
                                    (set State at:0 (mover))
                                )
                            )
                        )
                    )
                )
            )
            (nextPhase
                (if (is Mover P1)
                    (is In ("NextHole" (last From) "TrackCCW" 2) (intersection (sites Bottom) (sites Right)))
                    (is In ("NextHole" (last From) "TrackCCW" 2) (intersection (sites Top) (sites Left)))
                )
                "Sowing"
            )
        )

        (phase "Sowing"
            (play
                (or {
                    (move Select
                        (from
                            (if (is Mover Prev)
                                (sites {(var "Replay")})
                                ("OwnedHoles")
                            )
                            if:(and (< 0 (count at:(from))) (= 0 (state at:(from))))
                        )
                        (then
                            (sow
                                "TrackCCW"
                                apply:(if (and
                                        (= 0 (state at:(to)))
                                        (= 4 (count at:(to)))
                                    )
                                    (set State at:(to) (mover))
                                    (if (< 1 (count at:(to)))
                                        (if (= 0 (state at:(to)))
                                            (and
                                                (moveAgain)
                                                (set Var "Replay" (to))
                                            )
                                            (if (!= (mover) (state at:(to)))
                                                (and
                                                    (fromTo
                                                        (from (to))
                                                        (to (handSite Mover))
                                                        count:(min 2 (count at:(to)))
                                                    )
                                                    (set State at:(to) (state at:(to)))
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                    }
                    (then
                        (if ("OnlyPiecesInMarked")
                            (and {
                                (forEach Site ("SitesMarkedBy" 1)
                                    (fromTo
                                        (from (site))
                                        (to (handSite P1))
                                        count:(count at:(site))
                                    )
                                )
                                (forEach Site ("SitesMarkedBy" 2)
                                    (fromTo
                                        (from (site))
                                        (to (handSite P2))
                                        count:(count at:(site))
                                    )
                                )
                                (forget Value "OwnedP1" All)
                                (forget Value "OwnedP2" All)
                                (set Var "Round" (+ 1 (var "Round")))
                            })
                        )
                    )
                )
            )

            (end (if ("NoPieceOnBoard")
                    {
                    (if (>= 1 (count Cell at:(handSite P1))) (result P2 Win))
                    (if (>= 1 (count Cell at:(handSite P2))) (result P1 Win))
                    }
                )
            )

            (nextPhase ("NoPieceOnBoard") "BetweenRounds")
        )

        (phase "BetweenRounds"
            (play
                (if (<= 4 (count Cell at:(handSite Mover)))
                    (move
                        (from (handSite Mover))
                        (to ("RightMostEmpty"))
                        count:4
                        (then
                            (and {
                                ("RemmemberOwnedHoles" (last To))
                                (if (<= 4 (count Cell at:(handSite Mover)))
                                    (moveAgain)
                                    (if (= 3 (count Cell at:(handSite Mover)))
                                        (and {
                                            (fromTo
                                                (from (handSite Mover))
                                                (to ("RightMostEmpty"))
                                                count:3
                                            )
                                            (fromTo
                                                (from (handSite Next))
                                                (to ("RightMostEmpty"))
                                                count:1
                                            )
                                            ("RemmemberOwnedHoles" ("RightMostEmpty"))
                                        })
                                        (if (= 2 (count Cell at:(handSite Mover)))
                                            (and {
                                                (fromTo
                                                    (from (handSite Mover))
                                                    (to ("RightMostEmpty"))
                                                    count:2
                                                )
                                                (fromTo
                                                    (from (handSite Next))
                                                    (to ("RightMostEmpty"))
                                                    count:2
                                                )
                                                ("RememberOwnedHolesRandom" ("RightMostEmpty"))
                                            })
                                        )
                                    )
                                )
                            })
                        )
                    )
                    (then
                        (if (and (is Empty (handSite P1)) (is Empty (handSite P2)))
                            (and
                                (if
                                    (is Even (var "Round"))
                                    (set NextPlayer (player 2))
                                    (set NextPlayer (player 1))
                                )
                                (set Pending)
                            )
                        )
                    )
                )
            )
            (nextPhase (and (is Empty (handSite P1)) (is Empty (handSite P2))) "Opening")
        )

        }
    )
)

//------------------------------------------------------------------------------

(metadata
    (info
        {
        (description "Gabata is a name for several mancala-style board games in the Horn of Africa. This is one of the more popular versions, played in central Ethiopia and the Adegrat region of Eritrea.")
        (aliases {"Mengas"})
        (rules "2x6 board. Four counters in each hole. The game begins with a stylised move. One player takes one counter from their rightmost hole, and holds in in their hand. They then take one counter from the next hole, moving in an anti-clockwise direction, and place it in the next hole. They then take a counter from the next hole after that, and placing it in the next hole, continuing until there is an alternating pattern of a hole with five counters followed by a hole with three counters. The original hole from which the first counter was taken will have four counters. The player will then place the first counter taken into the next hole in the opponent's row, causing it to hold four counters. This creates a weg, a hole captured by that player, which is involved in capturing (see below). Players alternate making this first move in subsequent rounds. The next phase begins once this stylised move is completed. Sowing occurs in an anti-clockwise direction. If the final counter of a sowing falls into a hole containing counters, these are picked up and sowing continues. A player's turn ends when the final counter falls into an empty hole. When the final counter of a sowing falls into a hole containing three counters, it creates a weg, and the turn ends. Players cannot sow from a weg they've captured. A player may capture counters from an opponent's weg when the final counter of a sowing falls into the opponent's weg on the player's turn. The final counter and one counter in the weg are captured. The player may then take the counters from any of their holes and sow from there. If a player cannot play, they must pass their turn, but may play again if this becomes possible in a subsequent turn. Play ends when there are no possible moves left on the board. Players then capture the counters in their wegs. A new round begins. The players fill as many of their holes with four counters as they are able. The player with more counters will capture as many holes from the opponent in which they can place four or more counters. If the player has three remaining counters after holes are filled with four, the opponent would cede their one remaining counter to the opponent to make four and the player captures one further hole. If there are two remaining, the players draw lots to determine which player owns the remaining hole. The player who played second in the previous round begins the new round with the same stylized move, and play continues as before after that. Play continues until one player owns no holes; the opponent wins.")
        (source "Pankhurst 1971: 172, 174-176.")
        (version "1.3.0")
        (classification "board/sow/two rows")
        (credit "Eric Piette")
        (origin  "This game was played in Horn of Africa, around 1971.")
        }
    )

    (graphics {
        (board Style Mancala)
        (show LocalStateHoles)
    })
)
