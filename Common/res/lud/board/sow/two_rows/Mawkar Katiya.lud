(define "Columns" 7)
(define "OppositePit" (if (is In #1 (sites Bottom)) (+ #1 "Columns") (- #1 "Columns") ) )
(define "NextHole" (trackSite Move from:#1 "Track" steps:#2))
(define "PlayableSites" (sites (values Remembered "Playable")))
(define "NoPieceOnBoard" (no Pieces All in:(forEach (sites Board) if:(= 0 (state at:(site))))))
(define "LeftMostEmpty"
    (trackSite FirstSite "TrackCCW"
        from:(mapEntry "LeftMost" Mover)
        if:(is Empty (to))
    )
)
//------------------------------------------------------------------------------

(game "Mawkar Katiya"
    (players 2)

    (equipment {
        (mancalaBoard 2 "Columns" store:None
            {
            (track "TrackCW" "6,W,N,E" loop:True)
            (track "TrackCCW" "0,E,N,W" loop:True)
            }
        )
        (piece "Seed" Shared)
        (hand Each)
        (regions P1 (sites Bottom))                     // P1 home
        (regions P2 (sites Top))                        // P2 home
        (map "LeftMost" {(pair P1 0) (pair P2 13)})
    })

    (rules
        (start {
            (set Count 5 to:(sites Track "TrackCW") )
            (set RememberValue "Playable" (union (sites Top) (sites Bottom)))
        })

        phases:{
        (phase "Sowing"
            (play
                (or {
                    (move Select
                        (from
                            (if
                                (is Mover Prev)
                                (sites {(var "Replay")})
                                (sites Mover)
                            )
                            if:(and {
                                (is Occupied (from))
                                (is In (from) ("PlayableSites"))
                                (!= (next) (state at:(from)))
                            })
                        )
                        (then
                            (do
                                (and
                                    (set Var "NumSowed" (count at:(last To)))
                                    (set Var "StateSowFrom" (state at:(last To)))
                                )
                                next:(sow
                                    "TrackCW"
                                    apply:(if (is Occupied ("NextHole" (to) 1))
                                        (and
                                            (moveAgain)
                                            (set Var "Replay" ("NextHole" (to) 1))
                                        )
                                        (if (is Occupied ("OppositePit" ("NextHole" (to) 1)))
                                            (and
                                                (fromTo
                                                    (from ("OppositePit" ("NextHole" (to) 1)))
                                                    (to (handSite Mover))
                                                    count:(count at: ("OppositePit" ("NextHole" (to) 1)))
                                                )
                                                (set State at:("OppositePit" ("NextHole" (to) 1)) (state at:("OppositePit" ("NextHole" (to) 1))))
                                            )
                                        )
                                    )
                                    skipIf:(or (and (!= (state at:(to)) (mover)) (!= (state at:(to)) 0)) (not (is In (to) ("PlayableSites"))))
                                )
                                (then
                                    (and {
                                        (forEach Site (sites Track from:(last From) to:(trackSite Move from:(last From) "Track" steps:(var "NumSowed")))
                                            (if (and (= (value Player Mover) (count at:(site))) (or (= (state at:(site)) (mover)) (= (state at:(site)) 0)))
                                                (and
                                                    (fromTo
                                                        (from (site))
                                                        (to (handSite Mover))
                                                        count:(value Player Mover)
                                                    )
                                                    (set State at:(site) (state at:(site)))
                                                )
                                                (if (and (is Occupied (site)) (= (mover) (state at:(site))))
                                                    (and
                                                        (fromTo
                                                            (from (site))
                                                            (to (handSite Mover))
                                                            count:1
                                                        )
                                                        (set State at:(site) (state at:(site)))
                                                    )
                                                )
                                            )
                                        )
                                        (set Var "NumSowed" 0)
                                        (if (< 0 (var "StateSowFrom")) (set State at:(last From) (var "StateSowFrom")))
                                    })
                                )
                            )
                        )
                    )
                    }
                    (then
                        (if ("NoPieceOnBoard")
                            (and {
                                (forEach Site (sites Board)
                                    (and
                                        (if (= (state at:(site)) 1)
                                            (fromTo
                                                (from (site))
                                                (to (handSite P1))
                                                count:(count at:(site))
                                            )
                                        )
                                        (if (= (state at:(site)) 2)
                                            (fromTo
                                                (from (site))
                                                (to (handSite P2))
                                                count:(count at:(site))
                                            )
                                        )
                                    )
                                )
                                (forget Value "Playable" All)
                                (if (>= (count Cell at:(handSite P1)) (count Cell at:(handSite P2)))
                                    (set Var "CurrentWinner" 1)
                                    (set Var "CurrentWinner" 2)
                                )
                                (set Value P2 0)
                                (set Value P1 0)
                                (forEach Site (sites Board)
                                    (if (!= 0 (state at:(site))) (set State at:(site) 0))
                                )
                            })
                        )
                    )
                )
            )
            (end (if ("NoPieceOnBoard")
                    {
                    (if (= 0 (count Cell at:(handSite P1))) (result P2 Win))
                    (if (= 0 (count Cell at:(handSite P2))) (result P1 Win))
                    }
                )
            )

            (nextPhase ("NoPieceOnBoard") "BetweenRounds")
        )

        (phase "BetweenRounds"
            (play
                (if (not (all Sites (sites Mover) if:(is Occupied (site))))
                    (if (<= 5 (count Cell at:(handSite Mover)))
                        (move
                            (from (handSite Mover))
                            (to "LeftMostEmpty")
                            count:5
                            (then (remember Value "Playable" (last To)))
                        )
                        (if (and (!= 0 (count Cell at:(handSite Mover))) (!= (mover) (var "CurrentWinner")))
                            (move
                                (from (handSite Mover))
                                (to "LeftMostEmpty")
                                count:(count Cell at:(handSite Mover))
                                (then
                                    (and {
                                        (remember Value "Playable" (last To))
                                        (set Value Mover (count at:(last To)))
                                        (set State at:(last To) (next))
                                    })
                                )
                            )
                        )
                    )
                    (if (= (mover) (var "CurrentWinner"))
                        (move Pass
                            (then
                                (set Value Mover (count Cell at:(handSite Mover)))
                            )
                        )
                    )
                )
            )
            (nextPhase (all Passed) "Sowing")
        )
        }
    )
)

//------------------------------------------------------------------------------

(metadata
    (info
        {
        (description "Mawkar Katiya is a two-row mancala-style board game that was played by the Khasi people of India in the early part of the twentieth century.")
        (rules "2x7 board. Five counters in each hole. Players sow in a clockwise direction. When the final counter lands in a hole, the contents of the next hole are picked up and sowing continues. When the final counter is sown and the next hole is empty, the contents of the hole in the opposite row of the empty hole are captured. Play continues until all of the counters are captured.

        A new game begins. The players fill their holes with five counters in each, starting from their left. The player who has remaining counters after all of their holes are full puts the extra counters aside. The player who has fewer counters places the remainder in the next empty hole. Any empty holes are out of play for the round. Play begins with the same rules, with the following modifications: Each player, during their opponent's turn, also captures counters in any hole that are made to equal the number of extra counters they had at the beginning of this round (i.e., the number of counters set aside by the winning player or the number of counters less than five that placed in the final hole by the loser). The player who could fill their holes will capture one counter each time that player sows into the hole in which the opponent placed fewer than five counters at the beginning of the round. The opponent cannot sow in this hole. In addition, at the end of the round, the player who filled their holes at the beginning of the round will always capture pieces that accumulate in this hole. Subsequent rounds are played like this until one player captures all of the counters, and thus wins.")
        (source "Gupta 1923: 71-72.")
        (version "1.3.0")
        (classification "board/sow/two rows")
        (credit "Eric Piette")
        }
    )

    (graphics {
        (board Style Mancala)
        (show LocalStateHoles)
    })
)

