(define "OwnedHoles"
    (if (is Mover P1)
        (sites (values Remembered "OwnedP1"))
        (sites (values Remembered "OwnedP2"))
    )
)

(define "RemmemberOwnedHoles"
    (if (is Mover P1)
        (remember Value "OwnedP1" #1)
        (remember Value "OwnedP2" #1)
    )
)

(define "OnlyPiecesInMarked"
    (no Pieces All in:(forEach (sites Board) if:(= 0 (state at:(site)))))
)

(define "NoPieceOnBoard" (no Pieces All in:(sites Board)))

(define "RightMostEmpty"
    (trackSite FirstSite
        "TrackCW"
        from:(mapEntry "RightMost" Mover)
        if:(is Empty (to))
    )
)

(define "SitesMarkedBy"
    (forEach (sites Board) if:(= #1 (state at:(site))))
)

(define "NextHole" (trackSite Move from:#1 #2 steps:#3))

(define "RememberOwnedHolesRandom"
    (if (< 50 (value Random (range 1 100)))
        (remember Value "OwnedP1" #1)
        (remember Value "OwnedP2" #1)
    )
)

//------------------------------------------------------------------------------

(game "Gabata (Shoa I)"
    (players 2)

    (equipment {
        (mancalaBoard 2 <Board:size> store:None
            {
            (track "TrackCCW" "0,E,N,W" loop:True)
            (track "TrackCW" <Board:trackCW> loop:True)
            }
        )
        (piece "Seed" Shared)
        (hand Each)
        (regions P1 (sites Bottom))                     // P1 home
        (regions P2 (sites Top))                        // P2 home
        (map "RightMost" {(pair P1 5) (pair P2 6)})
    })
    (rules

        (start {
            (set RememberValue "OwnedP1" (sites Bottom))
            (set RememberValue "OwnedP2" (sites Top))
            (set Count 4 to:(sites Track) )
        })

        phases:{
        <Board:opening>

        (phase "Sowing"
            (play
                (or {
                    (move Select
                        (from
                            (if (is Mover Prev)
                                (sites {(var "Replay")})
                                ("OwnedHoles")
                            )
                            if:(and (< 0 (count at:(from))) (= 0 (state at:(from))))
                        )
                        (then
                            (sow
                                "TrackCCW"
                                apply:(if (and
                                        (= 0 (state at:(to)))
                                        (= 4 (count at:(to)))
                                    )
                                    (set State at:(to) (mover))
                                    (if (< 1 (count at:(to)))
                                        (if (= 0 (state at:(to)))
                                            (and
                                                (moveAgain)
                                                (set Var "Replay" (to))
                                            )
                                            (if (!= (mover) (state at:(to)))
                                                (and
                                                    (fromTo
                                                        (from (to))
                                                        (to (handSite Mover))
                                                        count:(min 2 (count at:(to)))
                                                    )
                                                    (set State at:(to) (state at:(to)))
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                    }
                    (then
                        (if ("OnlyPiecesInMarked")
                            (and {
                                (forEach Site ("SitesMarkedBy" 1)
                                    (fromTo
                                        (from (site))
                                        (to (handSite P1))
                                        count:(count at:(site))
                                    )
                                )
                                (forEach Site ("SitesMarkedBy" 2)
                                    (fromTo
                                        (from (site))
                                        (to (handSite P2))
                                        count:(count at:(site))
                                    )
                                )
                                (forget Value "OwnedP1" All)
                                (forget Value "OwnedP2" All)
                                (set Var "Round" (+ 1 (var "Round")))
                            })
                        )
                    )
                )
            )

            (end (if ("NoPieceOnBoard")
                    {
                    (if (>= 1 (count Cell at:(handSite P1))) (result P2 Win))
                    (if (>= 1 (count Cell at:(handSite P2))) (result P1 Win))
                    }
                )
            )

            (nextPhase ("NoPieceOnBoard") "BetweenRounds")
        )

        (phase "BetweenRounds"
            (play
                (if (<= 4 (count Cell at:(handSite Mover)))
                    (move
                        (from (handSite Mover))
                        (to ("RightMostEmpty"))
                        count:4
                        (then
                            (and {
                                ("RemmemberOwnedHoles" (last To))
                                (if (<= 4 (count Cell at:(handSite Mover)))
                                    (moveAgain)
                                    (if (= 3 (count Cell at:(handSite Mover)))
                                        (and {
                                            (fromTo
                                                (from (handSite Mover))
                                                (to ("RightMostEmpty"))
                                                count:3
                                            )
                                            (fromTo
                                                (from (handSite Next))
                                                (to ("RightMostEmpty"))
                                                count:1
                                            )
                                            ("RemmemberOwnedHoles" ("RightMostEmpty"))
                                        })
                                        (if (= 2 (count Cell at:(handSite Mover)))
                                            (and {
                                                (fromTo
                                                    (from (handSite Mover))
                                                    (to ("RightMostEmpty"))
                                                    count:2
                                                )
                                                (fromTo
                                                    (from (handSite Next))
                                                    (to ("RightMostEmpty"))
                                                    count:2
                                                )
                                                ("RememberOwnedHolesRandom" ("RightMostEmpty"))
                                            })
                                        )
                                    )
                                )
                            })
                        )
                    )
                    (then
                        (if (and (is Empty (handSite P1)) (is Empty (handSite P2)))
                            (and
                                (if
                                    (is Even (var "Round"))
                                    (set NextPlayer (player 2))
                                    (set NextPlayer (player 1))
                                )
                                (set Pending)
                            )
                        )
                    )
                )
            )
            (nextPhase (and (is Empty (handSite P1)) (is Empty (handSite P2))) "Sowing")
        )

        }
    )
)

//------------------------------------------------------------------------------

(option "Board Size" <Board> args:{ <size> <trackCW> <opening>}
    {
    (item "5"   <5> <"4,W,N,E"> <> "Each row has 5 holes.")
    (item "6"   <6> <"5,W,N,E"> <> "Each row has 6 holes.")*
    (item "6 With Opening"  <6> <"5,W,N,E">
        <
        (phase "Opening"
            (play
                (if (= 4 (last To))
                    (move Select
                        (from 4)
                        (then (sow))
                    )
                    (move
                        (from
                            (if ("SameTurn")
                                ("NextHole" (last From) "TrackCCW" 2)
                                (mapEntry "RightMost" P1)
                            )
                        )
                        (to
                            ("NextHole" (from) "TrackCCW" 1)
                        )
                        count:4
                        (then
                            (and
                                (if (= (last To) 11)
                                    (set State at:11 (mover))
                                )
                                (moveAgain)
                            )
                        )
                    )
                )
            )
            (nextPhase (= (last From) 4) "Sowing")
        )
        >
    "Each row has 6 holes.")*
    (item "7"   <7> <"6,W,N,E">
        <>
    "Each row has 7 holes.")
})

//------------------------------------------------------------------------------

(rulesets {

    (ruleset "Ruleset/Gabata I (Observed)" {
        "Board Size/6"
    })*

    (ruleset "Ruleset/Gabata 3 (Observed)" {
        "Board Size/6 With Opening"
    })

    (ruleset "Ruleset/Seven holes (Observed)" {
        "Board Size/7"
    })

    (ruleset "Ruleset/Five holes (Observed)" {
        "Board Size/5"
    })

})

//------------------------------------------------------------------------------

(metadata
    (info
        {
        (description "Gabata is a name applied to many two-or three-row mancala-style board games played in the Horn of Africa. This one is the most commonly played, and has been attested in Ethiopia since the early twentieth century, but is likely to be much older.")
        (aliases {"Uugg" "Weg" "Waladach"})
        (useFor "Ruleset/Gabata I (Observed)" (rules "2x6 board. Four counters in each hole. Players draw lots to see who goes first. Players pick up the counters in any of the holes in their row and sow them in an anti-clockwise direction. If the last counter falls into a hole that is occupied, the player picks up the contents of this hole and continues to sow. When the last counter falls into an empty hole, the play ends. Capturing occurs when the last counter falls into a hole on the opponent's side of the board containing three counters, increasing it to four. This hole then belongs to the player who captured it. A player cannot pick up counters from this hole, and the opponent can only do so if the last counter of their sowing falls there, in which case the opponent takes one counter from it, along with the final counter. The captured hole remains in the ownership of the person who captured it. If it remains empty and the opponent drops their last counter into this hole, the last counter is removed. If a player cannot move, they pass, but the opponent may continue to make moves. The player could then resume play if the opponent's moves create a possibility for a move. Play ends when there are no more counters available to move. Each player owns the counters in their captured holes or which they have removed from the board. A second round is played, each player placing four counters into each hole starting from the rightmost hole in their row. The player with more counters gains a hole from their opponent for every four extra balls they've captured. If an opponent has three extra after counting in such a way, they also gain a hole, but not if there are one or two extra. Play continues in several rounds like this until one player takes all the counters."))
        (useFor "Ruleset/Gabata I (Observed)" (source "Pankhurst 1971: 174-176."))
        (useFor "Ruleset/Five holes (Observed)" (rules "2x5 board."))
        (useFor "Ruleset/Five holes (Observed)" (source "Pankhurst 1971: 174-176."))
        (useFor "Ruleset/Seven holes (Observed)" (rules "2x7 board."))
        (useFor "Ruleset/Seven holes (Observed)" (source "Pankhurst 1971: 174-176."))
        (useFor "Ruleset/Gabata 3 (Observed)" (rules "The game begins with a stylized move. One player takes all of the coutners from the rightmost hole and places them in the next hole. This hole becomes that player's weg. The player then takes the counters from the next hole and places them all in the hole after it, continuing around the board until all holes have either eight or zero counters. The player then takes all of the counters from the final hole that have eight counters and sows them in the regular way."))
        (useFor "Ruleset/Gabata 3 (Observed)" (source "Pankhurst 1971: 177."))
        (source "Cohen 1911: 491-495 Variant: Gabata II (Wuqro), Pankhurst 1971: 173 ")
        (version "1.3.0")
        (classification "board/sow/two rows")
        (credit "Eric Piette")
        }
    )

    (graphics {
        (board Style Mancala)
        (show LocalStateHoles)
    })
)
