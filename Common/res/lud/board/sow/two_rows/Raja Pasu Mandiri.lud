(define "PlayableSites" (sites (values Remembered "Playable")))
(define "NextHole" (trackSite Move from:#1 "Track" steps:1))

(define "HomeP1"
    (if (> 3 (% (+ 1 (var "Round")) 9))
        (sites {0 1 7 8})
        (if (> 6 (% (+ 1 (var "Round")) 9))
            (sites {2 3 4 9 10 11})
            (sites {5 6 12 13})
        )
    )
)

(define "HomeP2"
    (if (> 3 (% (+ 1 (var "Round")) 9))
        (sites {2 3 4 9 10 11})
        (if (> 6 (% (+ 1 (var "Round")) 9))
            (sites {5 6 12 13})
            (sites {0 1 7 8})
        )
    )
)

(define "HomeP3"
    (if (> 3 (% (+ 1 (var "Round")) 9))
        (sites {5 6 12 13})
        (if (> 6 (% (+ 1 (var "Round")) 9))
            (sites {0 1 7 8})
            (sites {2 3 4 9 10 11})
        )
    )
)

(define "HomeMover"
    (if (is Mover P1)
        ("HomeP1")
        (if (is Mover P2)
            ("HomeP2")
            ("HomeP3")
        )
    )
)

(define "FourOrLessPieceOnBoard" (> 4 (count in:(difference (sites Board) (sites Row 1)))))

//------------------------------------------------------------------------------

(game "Raja Pasu Mandiri"
    (players 3)
    (equipment {
        (board
            (merge {
                (rectangle 1 7)
                (shift 0 2 (rectangle 1 7))
                (shift 3 1 (square 1))
                (shift 1 1 (square 1))
                (shift 5 1 (square 1))
            })
            {
            (track "Track" "6,W,7,E" loop:True)
            }
            use:Vertex
        )
        (piece "Seed" Shared)
        (map {(pair P1 15) (pair P2 14) (pair P3 16)})  // kalahs (storage pits)
    })
    (rules
        (start {
            (set Count 7 to:(difference (sites Board) (sites Row 1)))
            (set RememberValue "Playable" (difference (sites Board) (sites Row 1)))
        })
        phases:{
        (phase "Sowing"
            (play
                (or {
                    (move Select
                        (from
                            (if ("SameTurn") (sites {(var "Replay")}) ("HomeMover"))
                            if:(and (is Occupied (from)) (is In (from) ("PlayableSites")))
                        )
                        (then
                            (do
                                (set Var "NumSowed" (count at:(last To)))
                                next:(sow
                                    apply:(if (< 1 (count at:(to)))
                                        (and
                                            (moveAgain)
                                            (set Var "Replay" (to))
                                        )
                                        (if (is Occupied ("NextHole" (to)))
                                            (fromTo
                                                (from (to))
                                                (to (mapEntry Mover))
                                                count:(count at:(to))
                                            )
                                        )
                                    )
                                    skipIf:(not (is In (to) ("PlayableSites")))
                                )
                                (then
                                    (and
                                        (forEach Site (sites Track from:(last From) to:(trackSite Move from:(last From) "Track" steps:(var "NumSowed")))
                                            (if (= 4 (count at:(site)))
                                                (fromTo
                                                    (from (site))
                                                    (to (mapEntry Mover))
                                                    count:4
                                                )
                                            )
                                        )
                                        (set Var "NumSowed" 0)
                                    )
                                )
                            )
                        )
                    )
                    }
                    (then
                        (if ("FourOrLessPieceOnBoard")
                            (and {
                                (forEach Site (difference (sites Board) (sites Row 1))
                                    (if (is Occupied (site))
                                        (fromTo
                                            (from (site))
                                            (to (mapEntry Mover))
                                            count:(count at:(site))
                                        )
                                    )
                                )
                                (if (and (= 6 (count Sites in:("HomeP1"))) (< 2 (count at:(mapEntry P1))))
                                    (and
                                        (fromTo
                                            (from (mapEntry P1))
                                            (to (mapEntry P2))
                                            count:1
                                        )
                                        (fromTo
                                            (from (mapEntry P1))
                                            (to (mapEntry P3))
                                            count:1
                                        )
                                    )
                                    (if (and (= 6 (count Sites in:("HomeP2"))) (< 2 (count at:(mapEntry P2))))
                                        (and
                                            (fromTo
                                                (from (mapEntry P2))
                                                (to (mapEntry P1))
                                                count:1
                                            )
                                            (fromTo
                                                (from (mapEntry P2))
                                                (to (mapEntry P3))
                                                count:1
                                            )
                                        )
                                        (if (and (= 6 (count Sites in:("HomeP3"))) (< 2 (count at:(mapEntry P3))))
                                            (and
                                                (fromTo
                                                    (from (mapEntry P3))
                                                    (to (mapEntry P1))
                                                    count:1
                                                )
                                                (fromTo
                                                    (from (mapEntry P3))
                                                    (to (mapEntry P2))
                                                    count:1
                                                )
                                            )
                                        )
                                    )
                                )
                                (set Var "Round" (+ 1 (var "Round")))
                                (forget Value "Playable" All)
                            })
                        )
                    )
                )
            )

            (end {
                (if ("FourOrLessPieceOnBoard")
                    {
                    (if (> 7 (count at:(mapEntry P1))) (result P1 Loss))
                    (if (> 7 (count at:(mapEntry P2))) (result P2 Loss))
                    (if (> 7 (count at:(mapEntry P3))) (result P3 Loss))
                    }
                )
            })

            (nextPhase ("FourOrLessPieceOnBoard") "BetweenRounds")
        )

        (phase "BetweenRounds"
            (play
                (if (not (all Sites ("HomeMover") if:(is Occupied (site))))
                    (if (<= 7 (count at:(mapEntry Mover)))
                        (move
                            (from (mapEntry Mover))
                            (to ("HomeMover"))
                            count:7
                            (then (remember Value "Playable" (last To)))
                        )
                    )
                )
            )
            (nextPhase (all Passed) "Sowing")
        )
        }
    )
)

//------------------------------------------------------------------------------

(metadata

    (info
        {
        (description "Raja Pasu Mandiri is a three-player mancala-style board game played in Sri Lanka.")
        (rules "2x7 board, with three store holes. Three players. One player, the Raja, owns the three central holes in each row, one player owns the holes to the left and the other player the holes to the right. Seven counters in each hole. Players alternate turns sowing the counters in an anti-clockwise direction. When the final counter lands in a hole, the contents of the following hole are picked up, and sowing continues. If the following hole is empty, the contents of the next hole after that one are captured. Also, if at any point during the sowing a hole contains four counters, they are immediately captured. Play continues until all of the counters have been captured. If a player cannot play, they pass their turn, until captures are no longer possible, at which point the last person who played captures the remaining counters. A new round begins. The Raja gives each of the other players one counter. Players fill their holes with their captured counters, seven per hole. Any holes which can not be filled with seven counters are out of play. Play continues as before. A player plays as the Raja for three turns in a row, after which point it rotates to the next player. Play continues until only one player can fill holes on the board, this player becoming the winner.")
        (source "de Voogt 2000: 96-97.")
        (version "1.3.0")
        (classification "board/sow/two rows")
        (credit "Eric Piette")
        (origin  "This game was played in Sri Lanka, around 2000.")
        }
    )

    (graphics {
        (board Style Mancala)
    })

)
