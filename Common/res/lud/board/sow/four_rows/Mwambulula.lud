(define "Columns" 8)
(define "OppositePitInner" (if (is Mover P1) (+ (to) "Columns") (- (to) "Columns") ) )
(define "OppositeOuterPitInner" (if (is Mover P1) (+ (to) (* "Columns" 2)) (- (to) (* "Columns" 2)) ) )
(define "OppositePitOuter" (if (is Mover P1) (+ (to) (* "Columns" 2)) (- (to) (* "Columns" 2))))
(define "OppositeOuterPitOuter" (if (is Mover P1) (+ (to) (* "Columns" 3)) (- (to) (* "Columns" 3)) ) )
(define "PlayFromLastHole" (sites {(last To afterConsequence:True)}))
(define "NoSeedsInInner"
    (all Sites (sites Mover "Inner") if:(= 0 (count at:(site))))
)

//------------------------------------------------------------------------------

(game "Mwambulula"
    (players 2)

    (equipment {
        (mancalaBoard 4 "Columns" store:None
            {
            (track "Track1" "0,E,N1,W" loop:True P1)
            (track "Track2" "16,E,N1,W" loop:True P2)
            }
        )
        (regions "Home" P1 (sites Track "Track1"))                              // P1 Home
        (regions "Home" P2 (sites Track "Track2"))                              // P2 home
        (regions "Inner" P1 (difference (sites Track "Track1") (sites Bottom))) // P1 inner Home
        (regions "Inner" P2 (difference (sites Track "Track2") (sites Top) ))   // P2 inner Home
        (piece "Seed" Shared)
        (hand Each)
    })
    (rules

        (start (set Count 2 to:(union (sites P1 "Home") (sites P2 "Home") ) ))

        phases:{
        (phase "Opening"
            (play
                (move
                    (from (sites Mover "Inner") if:(is Occupied (from)))
                    (to Cell (handSite Mover))
                    count:2
                )
            )
            (nextPhase Mover "NoSeedsInInner" "Sowing")
        )

        (phase "Sowing"
            (play
                (or
                    (move Select
                        (from
                            (if
                                (is Mover Prev)
                                "PlayFromLastHole"
                                (sites Mover "Home")
                            )
                            if:(> (count at:(from)) 0)
                        )
                        (then
                            (sow
                                "Track"
                                owner:(mover)
                                apply:(if (< 1 (count at:(to)))
                                    (if (is In (to) (sites Mover "Inner"))
                                        (if (is Occupied ("OppositePitInner"))
                                            (and {
                                                (fromTo
                                                    (from ("OppositePitInner"))
                                                    (to (last From))
                                                    count:(count at:("OppositePitInner"))
                                                )
                                                (if (is Occupied ("OppositeOuterPitInner"))
                                                    (fromTo
                                                        (from ("OppositeOuterPitInner"))
                                                        (to (last From))
                                                        count:(count at:("OppositeOuterPitInner"))
                                                    )
                                                )
                                                (sow
                                                    (last From)
                                                    count:(+ (count at:("OppositePitInner")) (count at:("OppositeOuterPitInner")))
                                                    "Track"
                                                    owner:(mover)
                                                )
                                            })
                                            (moveAgain)
                                        )
                                        (if (is Occupied ("OppositePitOuter"))
                                            (and {
                                                (fromTo
                                                    (from ("OppositePitOuter"))
                                                    (to (last From))
                                                    count:(count at:("OppositePitOuter"))
                                                )
                                                (if (is Occupied ("OppositeOuterPitOuter"))
                                                    (fromTo
                                                        (from ("OppositeOuterPitOuter"))
                                                        (to (last From))
                                                        count:(count at:("OppositeOuterPitOuter"))
                                                    )
                                                )
                                                (sow
                                                    (last From)
                                                    count:(+ (count at:("OppositePitOuter")) (count at:("OppositeOuterPitOuter")))
                                                    "Track"
                                                    owner:(mover)
                                                )
                                            })
                                            (moveAgain)
                                        )
                                    )
                                )
                            )
                        )
                    )
                    (if (and (not (is Mover Prev) ) (is Occupied Cell (handSite Mover)))
                        (move Select
                            (from Cell (handSite Mover))
                            (then
                                (forEach Site (sites Mover "Home")
                                    (fromTo
                                        (from Cell (handSite Mover))
                                        (to (site))
                                    )
                                )
                            )
                        )
                    )
                )
            )
        )

        }

        (end
            (forEach NonMover
                if:(no Moves Player)
                (result Player Loss)
            )
        )
    )
)

//------------------------------------------------------------------------------

(metadata

    (info
        {
        (description "Mwambulula is a four-row mancala-style board game played by the Bemba people of Zambia. It is notable because it begins immediately by holding counters in reserved to be entered into the board on a later turn.")
        (rules "4x8 board. Two counters in each hole, the holes in the inner row are then vacated. These counters become the \"store.\" Sowing occurs in an anti-clockwise direction in the player's two rows. When the final counter of a sowing lands in any occupied hole, the contents of the opponent's inner row holes opposite are captured. If there are also counters in the opponent's outer hole opposite, these are also captured, but only if there are counters in the opponent's inner hole. Captured counters are then sown from the hole that the sowing began. If the final counter lands in an occupied hole and capturing cannot happen, these counters are picked up and sowing continues. At any time during the game if a player is running low on counters, they may enter counters from the \"store\" and add one counter to each hole. The player who is unable to move loses.")
        (source "Chaplin 1956: 169.")
        (version "1.3.0")
        (classification "board/sow/four rows")
        (credit "Eric Piette")
        }
    )

    (graphics {
        (board Style Mancala)
    })

)

