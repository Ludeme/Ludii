(define "Columns" 8)
(define "OuterPhaseOppositePit" (if (is Mover P1) (+ (to) (* 3 ("Columns"))) (- (to) (* ("Columns") 3)) ) )
(define "OppositePit" (if (is Mover P1) (+ #1 "Columns") (- #1 "Columns") ) )
(define "OuterOppositePit" (if (is Mover P1) (+ #1 (* 2 ("Columns"))) (- #1 (* ("Columns") 2)) ) )
(define "NextHole" (trackSite Move from:#1 #2 steps:#3))

(define "RightMostWithFour"
    (trackSite FirstSite Mover
        "TrackCW"
        from:(if (= (value Player Mover) Undefined) (mapEntry "RightMost" Mover) (value Player Mover))
        if:(= 4 (count at:(to)))
    )
)

//------------------------------------------------------------------------------

(game "Ikibuguzo (Opening 2)"
    (players 2)

    (equipment {
        (mancalaBoard 4 "Columns" store:None
            {
            (track "TrackCCW1" "0,E,N1,W" loop:True P1)
            (track "TrackCCW2" "16,E,N1,W" loop:True P2)
            (track "TrackCW1" "7,W,N1,E" loop:True P1)
            (track "TrackCW2" "24,E,S1,W" loop:True P2)
            }
        )
        (regions "Home" P1 (sites Track "TrackCCW1"))                              // P1 Home
        (regions "Home" P2 (sites Track "TrackCCW2"))                              // P2 home
        (regions "Inner" P1 (difference (sites Track "TrackCCW1") (sites Bottom))) // P1 inner Home
        (regions "Inner" P2 (difference (sites Track "TrackCCW2") (sites Top) ))   // P2 inner Home
        (map "RightMost" { (pair P1 7) (pair P2 24)})
        (map "LeftMostOuter" {(pair P1 0) (pair P2 31)})
        (map "SecondLeftInner" {(pair P1 9) (pair P2 22)})
        (piece "Seed" Shared)
        (hand Each)
    })
    (rules

        (start (set Count 4 to:(union (sites Bottom) (sites Top))))

        phases:{
        (phase "FirstMove"
            (play
                (move
                    (from ("RightMostWithFour"))
                    (to ("NextHole" (from) "TrackCCW" 1))
                    count:2
                    (then
                        (and {
                            (fromTo
                                (from (last From))
                                (to ("NextHole" (last From) "TrackCCW" 2))
                                count:1
                            )
                            (fromTo
                                (from (last From))
                                (to ("NextHole" (last From) "TrackCCW" 3))
                                count:1
                            )
                            (set Value Mover (last From))
                        })
                    )
                )
            )
            (nextPhase Mover (= (last From) (mapEntry "LeftMostOuter" Mover)) "MainPhase")
        )

        (phase "MainPhase"
            (play
                (or
                    (move Select
                        (from
                            (if ("SameTurn")
                                (sites {(var "Replay")})
                                (sites {(mapEntry "LeftMostOuter" Mover) (mapEntry "SecondLeftInner" Mover)})
                            )
                            if:(and {
                                if:(if ("SameTurn")
                                    (< 0 (count at:(from)))
                                    (< 1 (count at:(from)))
                                )
                                (is In (from) (sites {(mapEntry "LeftMostOuter" Mover) (mapEntry "SecondLeftInner" Mover)}))
                                (is In ("NextHole" (from) "TrackCW" (count at:(from))) (sites Mover "Inner"))
                                (is Occupied ("OppositePit" ("NextHole" (from) "TrackCW" (count at:(from)))))
                                (is Occupied ("OuterOppositePit" ("NextHole" (from) "TrackCW" (count at:(from)))))
                            })
                        )
                        (then
                            (sow
                                "TrackCW"
                                owner:(mover)
                                apply:
                                (if (< 1 (count at:(to)))
                                    (and
                                        (moveAgain)
                                        (if (and {
                                                (is Occupied ("OppositePit" (to)))
                                                (is Occupied ("OuterOppositePit" (to)))
                                                (is In (to) (sites Mover "Inner"))
                                            } )
                                            (and {
                                                (fromTo
                                                    (from ("OppositePit" (to)))
                                                    (to (last From))
                                                    count:(count at:("OppositePit" (to)))
                                                )
                                                (fromTo
                                                    (from ("OuterOppositePit" (to)))
                                                    (to (last From))
                                                    count:(count at:("OuterOppositePit" (to)))
                                                )
                                                (set Var "Replay" (from))
                                            })
                                            (set Var "Replay" (to))
                                        )
                                    )
                                )
                            )
                        )
                    )
                    (move Select
                        (from
                            (if ("SameTurn")
                                (sites {(var "Replay")})
                                (sites Mover)
                            )
                            if:(if ("SameTurn")
                                (< 0 (count at:(from)))
                                (< 1 (count at:(from)))
                            )
                        )
                        (then
                            (sow
                                "TrackCCW"
                                owner:(mover)
                                apply:
                                (if (< 1 (count at:(to)))
                                    (and
                                        (moveAgain)
                                        (if (and {
                                                (is Occupied ("OppositePit" (to)))
                                                (is Occupied ("OuterOppositePit" (to)))
                                                (is In (to) (sites Mover "Inner"))
                                            } )
                                            (and {
                                                (fromTo
                                                    (from ("OppositePit" (to)))
                                                    (to (last From))
                                                    count:(count at:("OppositePit" (to)))
                                                )
                                                (fromTo
                                                    (from ("OuterOppositePit" (to)))
                                                    (to (last From))
                                                    count:(count at:("OuterOppositePit" (to)))
                                                )
                                                (set Var "Replay" (from))
                                            })
                                            (set Var "Replay" (to))
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            )

            (end (if (no Moves Next) (result Mover Win)))
        )

        }
    )
)

//------------------------------------------------------------------------------

(metadata

    (info
        {
        (description "Ikibuguzo is a four-row mancala-style board game from the Great Lakes Region of Africa. It is closely related to other games in the region, but with different opening positions and the possibility of winning by making a specific capture.

        ")
        (aliases {"Uruheso" "Uruheisho"})
        (rules "4x8 board. Two counters in each hole. Opening play:  PLayers rearrange their counters so that there are four counters in each hole of their outer row. If they play with the second array, the take turns sowing from each of the holes with four  counters, beginning with the rightmost hole, placing two in the first hole and one in each of the following. Main phase: Play begins from any hole on the player's side of the board with counters in it. Singletons cannot move. Sowing happens in an anti-clockwise direction. If the last counter lands in an empty hole, the turn is over. For capturing: Holes are in 'opposition' when one player has the front row hole occupied and the opponent has both of the holes opposite it occupied. If the last hole in a sowing is in opposition, the player takes the counters in both of the opponent's holes and places them in the empty hole from which the player lifted the counters. The player then sows the captured counters from this hole. Further captures in the sowing can occur in the same way. However, each player has two hole from which clockwise plays can be made: the leftmost hole in the outer row and the second from the left in the inner row. Clockwise moves can only be made from these holes if they immediately lead to a capture. When the captured counters are sown, starting from the same hole, they can also be sown clockwise if they lead to a capture. If they cannot lead to a capture, they are sown anti-clockwise. Another alternative the player has is that, if the player plays clockwise from one of these holes and therefore makes a capture, the captured counters may be placed in the hole and left there, and the player may play instead from the other hole from which clockwise captures are allowed in a clockwise direction, if it leads to a capture. The player may continue playing from this hole as above until the possibilities to move are exhausted, and then may move from any hole in an anti-clockwise direction. Multiple captures can only be made in a clockwise direction from these holes if it is made on the first sowing of the turn. Otherwise, only one clockwise capture can be made and sowing must proceed in an anti-clockwise direction. If the last counter lands on a hole that is occupied but not in opposition, these counters are picked up and sowing continues. Play ends when one player captures all the opponent's counters or one player cannot play. The player who cannot play loses. A player may also win by capturing the counters from both of the opponent's end holes in the inner row in a single turn.
        ")
        (source "Murray 1951: 217.")
        (version "1.3.0")
        (classification "board/sow/four rows")
        (origin  "This game was played in African Great Lakes, around 1951.")
        }
    )

    (graphics {
        (board Style Mancala)
    })

)

