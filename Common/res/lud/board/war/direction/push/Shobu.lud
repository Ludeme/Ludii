(define "LastDirection"
    (directions Cell from:(last From) to:(last To))
)

(define "LastDistance"
    (count Steps (last From) (last To))
)

(define "AgressiveRegion"
    (if (is In (last To) (sites "Dark"))
        (sites "Light")
        (sites "Dark")
    )
)

(define "AgressiveMoves"
    (forEach Piece
        (if (is In (from) ("AgressiveRegion"))
            (or
                (move Slide
                    "LastDirection"
                    (between
                        (exact "LastDistance")
                        if:(is Empty (between))
                    )
                    (to
                        if:(or
                            (is Empty (to))
                            (and
                                (is Enemy (who at:(to)))
                                (or
                                    (is Empty (ahead (to) "LastDirection"))
                                    (= (ahead (to) "LastDirection") (to))
                                )
                            )
                        )
                        (apply
                            (if (is Enemy (who at:(to)))
                                (if (= (ahead (to) "LastDirection") (to))
                                    (remove (to))
                                    (fromTo
                                        (from (to))
                                        (to (ahead (to) "LastDirection"))
                                    )
                                )
                            )
                        )
                    )
                )
                (if (and {
                        (= ("LastDistance") 2)
                        (is Enemy (who at:(ahead (from) "LastDirection")))
                        (is Empty (ahead (from) steps:2 "LastDirection"))
                        (if (= (from) (ahead (from) steps:3 "LastDirection"))
                            True
                            (is Empty (ahead (from) steps:3 "LastDirection"))
                        )
                    })
                    (move
                        (from (from))
                        (to
                            (ahead (from) steps:2 "LastDirection")
                        )
                        (then
                            (if (= (ahead (last To) "LastDirection") (last To))
                                (remove (ahead (last From) "LastDirection"))
                                (fromTo
                                    (from (ahead (last From) "LastDirection"))
                                    (to (ahead (last To) "LastDirection"))
                                )
                            )
                        )
                    )
                )
            )
        )
    )
)

(define "NextNoPieceInRegion"
    (= 0 (count Sites in:(intersection (sites Occupied by:Next) #1)))
)

//-------------------------------------------------------------------------

(game "Shobu"
    (players 2)
    (equipment {
        (board
            (merge {
                (square 4)
                (shift 5 0 (square 4))
                (shift 0 5 (square 4))
                (shift 5 5 (square 4))
            })
        )
        (piece "Ball" Each)
        (regions "BottomDark" (expand origin:(coord "A1") steps:3))
        (regions "TopDark" (expand origin:(coord "A5") steps:3))
        (regions "BottomLight" (expand origin:(coord "E1") steps:3))
        (regions "TopLight" (expand origin:(coord "E5") steps:3))
        (regions "Home" P1 (union (sites "BottomDark") (sites "BottomLight")))
        (regions "Home" P2 (union (sites "TopLight") (sites "TopDark")))
        (regions "Light" (expand (sites Right) steps:3))
        (regions "Dark" (expand (sites Left) steps:3))
    })
    (rules
        (start {
            (place "Ball1" (union (sites Bottom) (sites Row 4)))
            (place "Ball2" (union (sites Top) (sites Row 3)))
        })
        phases:{
        (phase "Passive"
            (play
                (do
                    (forEach Piece
                        (if (is In (from) (sites Mover "Home"))
                            (move Slide
                                (between
                                    (max 2)
                                    if:(is Empty (between))
                                )
                            )
                        )
                        (then (moveAgain))
                    )
                    ifAfterwards:(can Move ("AgressiveMoves"))
                )
            )
            (nextPhase Mover "Agressive")
        )
        (phase "Agressive"
            (play
                ("AgressiveMoves")
            )
            (nextPhase Mover "Passive")
        )
        }
        (end
            (if (or {
                    ("NextNoPieceInRegion" (sites "BottomDark"))
                    ("NextNoPieceInRegion" (sites "TopDark"))
                    ("NextNoPieceInRegion" (sites "BottomLight"))
                    ("NextNoPieceInRegion" (sites "TopLight"))
                })
                (result Mover Win)
            )
        )
    )
)

//-------------------------------------------------------------------------

(metadata
    (info
        {
        (description "Shobu is a beautifully crafted abstract strategy game for two players.")
        (rules "Your turn is in two parts. First, a player may move one of their stones up to two spaces in any direction, including diagonally, in what is called a passive (or set up) move. Second, they take a more aggressive move, which must be the same direction and number of spaces as the first move. It is this second move that allows you to push stones across the board - or off the board's edge. A passive move can be done only if it can be followed by an aggressive move. Remove all four of your opponent's stones from just one of the four boards to win.")
        (source "<a href=\"https://www.smirkandlaughter.com/shobu\" target=\"_blank\" class=\"style1\" style=\"color: #0000EE\" />Smirk and Laughter</a>")
        (version "1.3.0")
        (classification "board/war/direction/push")
        (author "Manolis Vranas, Jamie Sajdak")
        (publisher "<a href=\"https://www.smirkandlaughter.com\" target=\"_blank\" class=\"style1\" style=\"color: #0000EE\" />Smirk and Laughter</a> (used with permission)")
        (credit "Eric Piette")
        (date "2019")
        }
    )

    (graphics {
        (player Colour P1 (colour Black))
        (player Colour P2 (colour White))
        (region Colour "Dark" (colour 185 130 85))
        (region Colour "Light" (colour 225 182 130))
    })
    (ai
        "Shobu_ai"
    )
)
