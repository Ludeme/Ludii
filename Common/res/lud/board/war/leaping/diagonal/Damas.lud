(define "HopCounter"
    (move
        Hop
        #1
        (directions {FR FL})
        (between
            if:(is Enemy (who at:(between)))
            (apply (remove (between)))
        )
        (to if:(is Empty (to)))
        #2
    )
)

(define "HopDoubleCounter"
    (move
        Hop
        #1
        Diagonal
        (between
            before:9
            after:9
            if:(is Enemy (who at:(between)))
            (apply (remove (between)))
        )
        (to if:(is Empty (to)))
        #2
    )
)

(define "SitesWithPossibleCaptureInPreviousTurn" (sites Pending))

(define "RememberSiteWithPossibleCapture"
    (set Pending
        (sites From
            (max Moves
                (or
                    (forEach Piece "Counter"
                        ("HopCounter" (from)
                            (then
                                (if (is In (last To) (sites Next))
                                    (and
                                        (move Promote (last To) (piece "DoubleCounter") Mover)
                                        (if (can Move ("HopDoubleCounter" (from (last To))))
                                            (moveAgain)
                                        )
                                    )
                                    (if (can Move ("HopCounter" (from (last To))))
                                        (moveAgain)
                                    )
                                )
                            )
                        )
                    )
                    (forEach Piece "DoubleCounter"
                        ("HopDoubleCounter" (from)
                            (then
                                (if (can Move ("HopDoubleCounter" (from (last To))))
                                    (moveAgain)
                                )
                            )
                        )
                    )
                )
            )
        )
    )
)

(define "IsUnpromoted" (= (what at:(last To)) (id "Counter" Mover)))

(define "StoreCapturingPiece" (set Value Mover (last To)))
(define "LastCapturingPiece" (value Player Mover))

//------------------------------------------------------------------------------

(game "Damas"
    (players {(player N) (player S)})
    (equipment {
        (board (square 8))
        (piece "Counter" Each)
        (piece "DoubleCounter" Each)
        (regions P1 (sites Bottom))
        (regions P2 (sites Top))
        }
    )
    (rules
        (start
            {
            (place "Counter1" (difference (expand (sites Bottom) steps:2) (sites Phase 1)  ) )
            (place "Counter2" (difference (expand (sites Top) steps:2) (sites Phase 1) ) )
            }
        )

        (play
            (if ("SameTurn")
                (if "IsUnpromoted"
                    (max Moves
                        ("HopCounter" (from (last To))
                            (then
                                (if (is In (last To) (sites Next))
                                    (and
                                        (move Promote (last To) (piece "DoubleCounter") Mover)
                                        (if (can Move ("HopDoubleCounter" (from (last To))))
                                            (moveAgain)
                                        )
                                    )
                                    (if (can Move ("HopCounter" (from (last To))))
                                        (moveAgain)
                                    )
                                )
                            )
                        )
                    )
                    (max Moves
                        ("HopDoubleCounter" (from (last To))
                            (then
                                (if (can Move ("HopDoubleCounter" (from (last To))))
                                    (moveAgain)
                                )
                            )
                        )
                    )
                )

                (do
                    ("RememberSiteWithPossibleCapture")
                    next:(or {
                        // Capture moves.
                        (forEach Piece "Counter"
                            (max Moves
                                ("HopCounter" (from)
                                    (then
                                        (and
                                            "StoreCapturingPiece"
                                            (if (is In (last To) (sites Next))
                                                (and
                                                    (move Promote (last To) (piece "DoubleCounter") Mover)
                                                    (if (can Move ("HopDoubleCounter" (from (last To))))
                                                        (moveAgain)
                                                    )
                                                )
                                                (if (can Move ("HopCounter" (from (last To))))
                                                    (moveAgain)
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                        (forEach Piece "DoubleCounter"
                            (max Moves
                                ("HopDoubleCounter" (from)
                                    (then
                                        (and
                                            "StoreCapturingPiece"
                                            (if (can Move ("HopDoubleCounter" (from (last To))))
                                                (moveAgain)
                                            )
                                        )
                                    )
                                )
                            )
                        )
                        // Non Captures moves.
                        (forEach Piece "Counter"
                            (move
                                Step
                                (directions {FR FL})
                                (to if:(is Empty (to)))
                                (then
                                    (if (is In (last To) (sites Next))
                                        (move Promote (last To) (piece "DoubleCounter") Mover)
                                    )
                                )
                            )
                        )
                        (forEach Piece "DoubleCounter"
                            (move Slide Diagonal)
                        )
                        }
                    )
                    (then
                        (and
                            (if (and (!= ("LastCapturingPiece") (last To))  (not (is In (last To) ("SitesWithPossibleCaptureInPreviousTurn"))))
                                (remove ("SitesWithPossibleCaptureInPreviousTurn"))
                            )
                            (if (and (!= ("LastCapturingPiece") (last To)) (is In (last From) ("SitesWithPossibleCaptureInPreviousTurn")))
                                (remove (last To))
                            )
                        )
                    )
                )
            )
        )

        (end {
            (if (no Moves P1) (result P2 Win))
            (if (no Moves P2) (result P1 Win))
        })
    )
)

//------------------------------------------------------------------------------

(metadata

    (info
        {
        (description "Damas is a Draughts game known from at least sixteenth century Spain. In it, the king has a long move, which influenced later Draughts games and may have even inspired the long queen and bishop in Chess.")
        (aliases {"Spanish Draughts"})
        (rules "8x8 checkered board. twelve pieces per player, placed on the first three rows closest to the players. Players alternate turns moving a piece forward diagonally to an empty space. Pieces may capture an opponent's piece by hopping over it to an empty adjacent space. Captures are compulsory, multiple captures are possible, the maximum capture possible is required, and failure to do so is penalized by the huff, where the piece that should have made the capture is itself captured. When a piece reaches the opposite edge of the board from where it started, it becomes a king. Kings may move any distance diagonally forward or backward, and may capture any number of opponent's pieces it leaps over. The player who captures all of the opponent's pieces wins.")
        (source "van der Stoep 184: 82; Murray 1951: 78.")
        (version "1.3.0")
        (classification "board/war/leaping/diagonal")
        (credit "Eric Piette")
        (origin  "This game was played in Spain, around 1547.")
        }
    )

    (graphics {
        (board Style Chess)
        (piece Families {"Defined" "Isometric"})
    })

    (ai
        "Damas_ai"
    )
)
