(define "ThrowValue" (mapEntry (count Pips)))

(define "SiteToMoveOnTrack" (trackSite Move from:(site) #1 steps:#2))

(define "SpecialThrows"
    (is In ("ThrowValue") (sites {1 4 6}))
)

(define "Tab" (= 1 ("ThrowValue")))

(define "CaptureEnemyPiece"
    (apply
        if:(is Enemy (who at:(to)))
        (remove (to) count:(count at:(to)))
    )
)

(define "CountPiecesInHome"
    (count Pieces #1 in:(sites #1 "Home"))
)

(define "PieceGoesToEnemyHome" (set State at:#1 1))

(define "PieceDidNotGoToEnemyHome" (= 0 (state at:#1)))

(define "IsInTrack" (is In #1 (sites Track Mover #2)))

(define "Move"
    (or {
        (if ("IsInTrack" (site) "HomeTrack")
            (move
                (from (site))
                (to
                    ("SiteToMoveOnTrack" "HomeTrack" ("ThrowValue"))
                    "CaptureEnemyPiece"
                )
                count:(count at:(site))
            )
        )

        (if ("IsInTrack" (site) "MiddleTrack")
            (move
                (from (site))
                (to
                    ("SiteToMoveOnTrack" "MiddleTrack" ("ThrowValue"))
                    "CaptureEnemyPiece"
                )
                count:(count at:(site))
            )
        )

        (if ("IsInTrack" (site) "EnemyTrack")
            (if (if
                    (is In (site) (sites Next "Home"))
                    True
                    (and
                        (!= 0 ("CountPiecesInHome" Next))
                        ("PieceDidNotGoToEnemyHome" (site))
                    )
                )
                (move
                    (from (site))
                    (to
                        ("SiteToMoveOnTrack" "EnemyTrack" ("ThrowValue"))
                        "CaptureEnemyPiece"
                    )
                    count:(count at:(site))
                    (then
                        (if (and (is In (last To) (sites Next "Home"))  ("PieceDidNotGoToEnemyHome" (last To)))
                            ("PieceGoesToEnemyHome" (last To))
                        )
                    )
                )
            )
        )
    })
)

//------------------------------------------------------------------------------

(game "Tab"
    (players 2)
    (equipment {
        (board
            (rectangle 4 <Board:size>)
            {
            (track "HomeTrack1" "0,E,N1,W" P1 directed:True)
            (track "HomeTrack2" <Board:HomeTrack2> P2 directed:True)
            (track "MiddleTrack" <Board:MiddleTrack> loop:True)
            (track "EnemyTrack1" <Board:EnemyTrack1> P1 directed:True)
            (track "EnemyTrack2" <Board:EnemyTrack2> P2 directed:True)
            }
            use:Vertex
        )
        (piece "Stick" Each)
        (regions "AllSites" (sites Board))
        (dice d:2 from:0 num:4)
        (map "Throw" {(pair 0 6) (pair 1 1) (pair 2 2) (pair 3 3) (pair 4 4)})
        (regions "Home" P1 (sites Bottom))
        (regions "Home" P2 (sites Top))
    })
    (rules
        (start {
            (place "Stick1" (sites Bottom))
            (place "Stick2" (sites Top))
        })
        phases:{
        (phase "InitGame"
            (play
                (do
                    (roll)
                    next:(move Pass)
                    (then
                        (if ("Tab")
                            (moveAgain)
                        )
                    )
                )
            )
            (nextPhase ("Tab") "Play")
        )
        (phase "Play"
            (play
                (do
                    (roll)
                    next:(forEach Site (sites Occupied by:Mover)
                        ("Move")
                    )
                    (then
                        (if ("SpecialThrows")
                            (moveAgain)
                        )
                    )
                )
            )
        )
        }
        (end (if (no Pieces Next) (result Mover Win)))
    )
)

//------------------------------------------------------------------------------

(option "Board size" <Board> args:{ <size> <HomeTrack2> <MiddleTrack> <EnemyTrack1> <EnemyTrack2>}
    {
    (item "7"   <7>  <"27,W,S1,E"> <"13,W,N1,E"> <"14,E,N1,W,S1,E"> <"13,W,S1,E,N1,W"> "Each row has 7 holes.")
    (item "9"   <9>  <"35,W,S1,E"> <"17,W,N1,E"> <"18,E,N1,W,S1,E"> <"17,W,S1,E,N1,W"> "Each row has 9 holes.")
    (item "11"  <11> <"43,W,S1,E"> <"21,W,N1,E"> <"22,E,N1,W,S1,E"> <"21,W,S1,E,N1,W"> "Each row has 11 holes.")
    (item "13"  <13> <"51,W,S1,E"> <"25,W,N1,E"> <"26,E,N1,W,S1,E"> <"25,W,S1,E,N1,W"> "Each row has 13 holes.")
    (item "15"  <15> <"58,W,S1,E"> <"29,W,N1,E"> <"30,E,N1,W,S1,E"> <"29,W,S1,E,N1,W"> "Each row has 15 holes.")
    }
)

//------------------------------------------------------------------------------

(rulesets {

    (ruleset "Ruleset/Tab (Described)" {
        "Board size/7"
        }
        variations:{
        "Board size/9" "Board size/11" "Board size/13" "Board size/15"
        }
    )*

})

//------------------------------------------------------------------------------

(metadata

    (info
        {
        (description "Tab is a capturing game that is commonly played in North Africa and Southwest Asia, and in other places which have been in contact wit hthem, such as Comoros. It is typically played in holes in the sand, and is at least several hundred years old. Tab boards are found as graffiti on many monuments throughout the region in which it is played.")
        (aliases {"Tab Wa Dukk"})
        (rules "4x7-15 (odd number only) board. One piece in each hole in the outer row. Four palm branches used as dice, with one side white and the other side yellow. The throws are equal to the number of white sides that fall up; when only yellow sides are up, the score is 6. When a player throws 1, 4, or 6, the player throws again. Players take turns throwing, until one throws 1, and that player begins to play. Each player moves in a boustrophedon path, from left to right in the row closest to them, right to left in the second row, and left to right in the third row. From there, the player may move again into the second row and continue as before, or move into the fourth row, proceeding from right to left, as long as at least one of the opponent's pieces remains there. The piece may enter the third row again upon reaching the end of the fourth row, but only when the player has either no pieces in their first row, or one group of pieces in the same spot (see below). When a piece has moved out of the fourth row, it may not enter it again during the game. When a player's piece lands in the same spot as another piece belonging to the player, the pieces may move as one piece. When a player's piece lands on a space occupied by an opponent's, piece, the opponent's piece is captured. The player who captures all of the opponent's pieces wins.")
        (source "Lane 1836: 346-349.")
        (version "1.3.0")
        (classification "board/war/replacement/eliminate/all")
        (credit "Eric Piette")
        }
    )

    (graphics {
        (show Edges Hidden)
        (show Symbol "disc" "AllSites" Vertex fillColour:(colour White) edgeColour:(colour Black) scale:1)
        (piece Colour "Die" state:0 fillColour:(colour Yellow))
        (piece Scale "Stick" 0.5)

    })

)

