(define "BottomSite" 36)

(define "ThrowValue" (mapEntry "Throw" (count Pips)))

(define "SiteToMoveOnTrack" (trackSite Move #1 steps:#2))

(define "Sig" (= 1 ("ThrowValue")))

(define "ActivatePiece" (set State at:#1 1))

(define "PieceActivated" (!= 0 (state at:#1)))

(define "CaptureEnemyPiece"
    (apply
        if:(is Enemy (who at:(to)))
        (if (is In (to) (sites Next "Home"))
            (remove (to))
            (if (= ("FirstAvailableInHome" Next) Off)
                (remove (to))
                (fromTo
                    (from (to))
                    (to ("FirstAvailableInHome" Next))
                )
            )
        )
    )
)

(define "IsInTrack" (is In #1 (sites Track Mover #2)))

(define "FirstAvailableInHome" (min (array (intersection (sites Empty) (sites #1 "Home")))))

(define "CaptureEnemyPieceInEntering"
    (apply
        if:(is Enemy (who at:(to)))
        (if (= ("FirstAvailableInHome" Next) Off)
            (remove (to))
            (fromTo
                (from (to))
                (to ("FirstAvailableInHome" Next))
            )
        )
    )
)

(define "Move"
    (or
        (if ("IsInTrack" (from) "HomeTrack")
            (if
                (if ("PieceActivated" (from))
                    True
                    ("Sig")
                )
                (if (not (is Friend (who at:("SiteToMoveOnTrack" "HomeTrack" ("ThrowValue")))))
                    (move
                        (from)
                        (to
                            ("SiteToMoveOnTrack" "HomeTrack" ("ThrowValue"))
                            "CaptureEnemyPiece"
                        )
                        (then
                            (if (and (not ("PieceActivated" (last To)))  ("Sig"))
                                ("ActivatePiece" (last To))
                            )
                        )
                    )
                )
            )
        )
        (if ("IsInTrack" (from) "EnemyTrack")
            (if (not (is Friend (who at:("SiteToMoveOnTrack" "EnemyTrack" ("ThrowValue")))))
                (move
                    (from)
                    (to
                        ("SiteToMoveOnTrack" "EnemyTrack" ("ThrowValue"))
                        "CaptureEnemyPiece"
                    )
                )
            )
        )
    )
)

//------------------------------------------------------------------------------

(game "Sig (Tidikelt)"
    (players 2)
    (equipment {
        (board
            (merge {
                (rectangle 12 3)
                (shift 1 -1 (rectangle 13 1))
            })
            {
            (track "HomeTrack1"  "0,N,E1,S" P1 directed:True)
            (track "HomeTrack2"  "2,N,W1,S" P2 directed:True)
            (track "EnemyTrack1" "2,N,W1,S" P1 directed:True)
            (track "EnemyTrack2" "0,N,E1,S" P2 directed:True)
            }
            use:Vertex
        )
        (piece "Stick" Each)
        (regions "AllSites" (sites Board))
        (dice d:2 from:0 num:<Dice:num>)
        <Dice:throwValues>
        (map "FirstEnemySite" {(pair P1 2) (pair P2 0)})
        (regions "Home" P1 (sites Left))
        (regions "Home" P2 (sites Right))
    })
    (rules
        (start {
            (place "Stick1" (sites Left))
            (place "Stick2" (sites Right))
        })
        (play
            (do (roll)
                next:(or
                    (if (and ("Sig") (= (mover) (who at:("BottomSite"))))
                        (move
                            (from ("BottomSite"))
                            (to
                                (mapEntry "FirstEnemySite" (mover))
                                if:(not (is Friend (mapEntry "FirstEnemySite" (mover))))
                                "CaptureEnemyPieceInEntering"
                            )
                        )
                    )
                    (forEach Piece ("Move"))
                )
            )
        )
        (end (if (no Pieces Next) (result Mover Win)))
    )
)

//------------------------------------------------------------------------------

(option "Dice" <Dice> args:{ <num> <throwValues> }
    {
    (item "4"       <4> <(map "Throw" {(pair 0 6) (pair 1 1) (pair 2 2) (pair 3 3) (pair 4 4)})>  "The game is played with 4 dice.")*
    (item "6"       <6> <(map "Throw" {(pair 0 6) (pair 1 1) (pair 2 2) (pair 3 3) (pair 4 4) (pair 5 4) (pair 6 4)})> "The game is played with 6 dice.")
    }
)

//------------------------------------------------------------------------------

(rulesets {

    (ruleset "Ruleset/Sig (Tidikelt) (Observed)" {
        "Dice/4"
    })*

    (ruleset "Ruleset/Six Stick Dice (Observed)" {
        "Dice/6"
    })

})

//------------------------------------------------------------------------------

(metadata

    (info
        {
        (description "Sig is a word used for several games played throughout North Africa. This game, played in the Tidikelt region of Algeria, alows captures only in opponent's home rows. The playing spaces represent plots of cultivated gardens and the pieces are water flowing through them.")
        (useFor "Ruleset/Sig (Tidikelt) (Observed)" (rules "Three rows of holes, arranged vertically, the outer two have twelve holes and the central one has thirteen. Twelve pieces per player, which begin in the outer rows. Four sticks, black on one side and white on the other, the number of white faces up is the value of the throw; all black faces up = 6. A player must throw a 1 (sig) to unlock a piece, which moves from the top hole in the player's row to the top hole of the central row. When a piece reaches the thirteenth space in the central row, they must throw a sig to enter the opponent's home row, at the bottom hole in that row, and proceed up that row to the top and then back into the central row. When entering the opponent's row, the opponent's piece in their bottom hole is sent to the next available hole in their row. In the central row, when a piece lands on a hole with an opponent's piece, the opponent's piece is sent back to start in their home row. A player landing on a hole occupied by an opponent in the home row captures the opponent's piece. The player who captures all of the opponent's pieces wins."))
        (useFor "Ruleset/Sig (Tidikelt) (Observed)" (source "Pâques 1964: 90-92."))
        (useFor "Ruleset/Six Stick Dice (Observed)" (rules "Six sticks, black on one side, white on the other, used as dice. The number of white faces up equals the value of the throw, with a maximum value of 4 (I.e., throws with four, five, or six white sides up = 4). All black sides up = 6."))
        (useFor "Ruleset/Six Stick Dice (Observed)" (source "Pâques 1964: 90."))
        (source "Depaulis 2001: 68; Gana 1991: 191.")
        (version "1.3.0")
        (classification "board/war/replacement/eliminate/all")
        (credit "Eric Piette")
        (origin  "This game was played in Algeria, around 1964.")
        }
    )

    (graphics {
        (show Edges Hidden)
        (show Symbol "disc" "AllSites" Vertex fillColour:(colour White) edgeColour:(colour Black) scale:1)
        (piece Colour "Die" state:0 fillColour:(colour Dark))
        (piece Scale "Stick" 0.5)

    })

)

