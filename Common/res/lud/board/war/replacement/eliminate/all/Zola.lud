(define "Outward"
    (<
        (max
            (count Sites
                in:(sites Direction
                    from:(from)
                    #1
                )
            )
            (count Sites
                in:(sites Direction
                    from:(from)
                    #2
                )
            )
        )
        (max
            (count Sites
                in:(sites Direction
                    from:(to)
                    #1
                )
            )
            (count Sites
                in:(sites Direction
                    from:(to)
                    #2
                )
            )
        )
    )
)

(define "Step"
    (move Step
        (from)
        (to
            if:(and {
                (is Empty (to))
                (or {
                    (and
                        (or
                            (= (from) (+ (to) <Board>))
                            (= (from) (- (to) <Board>))
                        )
                        ("Outward" N S)
                    )
                    (and
                        (or
                            (= (from) (+ (to) 1))
                            (= (from) (- (to) 1))
                        )
                        ("Outward" E W)
                    )
                    (and
                        (or
                            (= (from) (+ (to) (+ <Board> 1)))
                            (= (from) (- (to) (+ <Board> 1)))
                        )
                        ("Outward" SW NE)
                    )
                    (and
                        (or
                            (= (from) (+ (to) (- <Board> 1)))
                            (= (from) (- (to) (- <Board> 1)))
                        )
                        ("Outward" SE NW)
                    )
                })
            })
        )
    )
)

(define "Capture"
    (move
        (from)
        (to
            (intersection
                (sites Occupied by:Next)
                (sites Direction
                    from:(from)
                    (directions {#1 #2})
                    stop:(is Occupied (to))
                    stopIncluded:True
                )
            )
            if:(not
                (>
                    (min
                        (count Sites
                            in:(sites Direction
                                from:(from)
                                #1
                            )
                        )
                        (count Sites
                            in:(sites Direction
                                from:(from)
                                #2
                            )
                        )
                    )
                    (min
                        (count Sites
                            in:(sites Direction
                                from:(to)
                                #1
                            )
                        )
                        (count Sites
                            in:(sites Direction
                                from:(to)
                                #2
                            )
                        )
                    )
                )
            )
            (apply (remove (to)))
        )
    )
)

//-------------------------------------------------------------------------

(game "Zola"
    (players 2)
    (equipment
        {
        (board (square <Board>))
        (piece "Disc" Each)
        }
    )
    (rules
        (start
            {
            (place "Disc1" (sites Phase 0))
            (place "Disc2" (sites Phase 1))
            }
        )
        (play
            (forEach Piece
                (or {
                    ("Capture" N S)
                    ("Capture" NE SW)
                    ("Capture" E W)
                    ("Capture" SE NW)
                    ("Step")
                })
            )
        )
        (end
            (if
                (or
                    (= 0
                        (count Sites in:(sites Occupied by:P1))
                    )
                    (= 0
                        (count Sites in:(sites Occupied by:P2))
                    )
                )
                (result Mover Win)
            )
        )
    )
)

//-------------------------------------------------------------------------

(option "Board Size" <Board> args:{ <size> }
    {
    (item "6"    <6>  "A 6x6 board is currently selected")*
    (item "8"    <8>  "A 8x8 board is currently selected")
    }
)

//-------------------------------------------------------------------------

(metadata
    (info
        {
        (description "Zola is an drawless annihilation game by Mark Steere.")
        (rules "On your turn you have to options:
            • Noncapturing move: Step kingwise away from the center of the line you are stepping along.
            • Capturing move: Capture queenwise any enemy not farther away from the center of the line you are moving along.

        Only if you have no moves may you pass. The game is over when only one player has pieces left. That player is the winner.")
        (version "1.3.0")
        (classification "board/war/replacement/eliminate/all")
        (author "Mark Steere")
        (publisher "<a href=\"http://www.marksteeregames.com/\" target=\"_blank\" class=\"style1\" style=\"color: #0000EE\" />Mark Steere Games</a> (used with permission)")
        (credit "Designed by Mark Steere and implemented by Michael Amundsen.")
        (date "2021")
        }
    )

    (graphics {
        (board Colour InnerEdges (colour 0 0 0 0))
        (board Colour OuterEdges (colour 0 0 0 0))
        (board Style Chess)
    })
    (ai
        "Zola_ai"
    )
)
