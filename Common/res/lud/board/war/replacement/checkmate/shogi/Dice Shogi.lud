(define "NextCannotMove"
    (not (can Move (do (or ("PlaceAPiece" Next Mover) (forEach Piece Next)) ifAfterwards:(not ("IsInCheck" "Osho" Next (or ("PlaceAPiece" Mover Next) (forEach Piece)))) )))
)

(define "CapturePiece"
    (apply
        (if (is Enemy (who at:(to)))
            (add
                (piece (mapEntry "Captured" (what at:(to))))
                (to (mapEntry "Where" (what at:(to))))
            )
        )
    )
)

(define "InPromotionZone"
    (is In #1 (sites Mover "Promotion") )
)

(define "Promote"
    (move Promote (last To) (piece (mapEntry "Promoted" (what at:(last To)))))
)

(define "ForcePromote"
    (then
        (if
            ("InPromotionZone" (last To))
            "Promote"
        )
    )
)

(define "CanPromote"
    (then
        (if
            (or ("InPromotionZone" (last To)) ("InPromotionZone" (last From)) )
            (moveAgain)
        )
    )
)

(define "SlideMove"
    (move
        Slide
        #1
        (to if:(is Enemy (who at:(to))) "CapturePiece")
        #2
    )
)

(define "StepMove"
    (move
        Step
        #1
        (to if:(not (is Friend (who at:(to)))) "CapturePiece")
        #2
    )
)

(define "PlaceAPiece"
    (or {
        (move
            (from (sites Occupied by:#1 container:"Hand" components:{"Kakugyo" "Ginsho" "Hisha" "Kinsho"}))
            (to (sites Empty))
        )
        (do
            (move
                (from (sites Occupied by:#1 container:"Hand" component:"Fuhyo" ))
                (to (difference (sites Empty) (sites #1 "Promotion") ))
            )
            ifAfterwards:(not ("IsInCheck" "Osho" #2 (forEach Piece #1)))
        )
    })
)

(define "CorrectColumn"
    (= (+ 1 (column of:(last To))) (count Pips))
)

(define "GoldMove" ("StepMove" (directions {Forward Backward Rightward Leftward FL FR})))

//------------------------------------------------------------------------------

(game "Dice Shogi"
    (players {(player N) (player S)})

    (equipment {
        (board (square 5))

        // King
        (piece "Osho" Each ("StepMove"))

        //Pawn
        (piece "Fuhyo" Each ("StepMove" Forward "ForcePromote"))

        // Silver General
        (piece "Ginsho" Each ("StepMove" (directions {Forward BL BR FL FR}) "CanPromote"))

        // Rook
        (piece "Hisha" Each ("SlideMove" Orthogonal "CanPromote"))

        // Bishop
        (piece "Kakugyo" Each ("SlideMove" Diagonal "CanPromote"))

        // Gold General
        (piece "Kinsho" Each "GoldMove")

        // Promoted Pawn
        (piece "Tokin" Each "GoldMove")

        // Promoted Silver
        (piece "Narigin" Each "GoldMove")

        // Promoted Rook
        (piece "Ryuo" Each (or ("SlideMove" Orthogonal) ("StepMove" Diagonal)))

        // Promoted Bishop
        (piece "Ryuma" Each (or ("SlideMove" Diagonal) ("StepMove" Orthogonal)))

        (regions "Promotion" P1 (sites Top) )
        (regions "Promotion" P2 (sites Bottom) )
        (map "Where" {
            (pair (id "Fuhyo" P1) (handSite P2)) (pair (id "Fuhyo" P2) (handSite P1))
            (pair (id "Ginsho" P1) (handSite P2 1)) (pair (id "Ginsho" P2) (handSite P1 1))
            (pair (id "Hisha" P1) (handSite P2 2)) (pair (id "Hisha" P2) (handSite P1 2))
            (pair (id "Kakugyo" P1) (handSite P2 3)) (pair (id "Kakugyo" P2) (handSite P1 3))
            (pair (id "Kinsho" P1) (handSite P2 4)) (pair (id "Kinsho" P2) (handSite P1 4))
            (pair (id "Tokin" P1) (handSite P2)) (pair (id "Tokin" P2) (handSite P1))
            (pair (id "Narigin" P1) (handSite P2 1)) (pair (id "Narigin" P2) (handSite P1 1))
            (pair (id "Ryuo" P1) (handSite P2 2)) (pair (id "Ryuo" P2) (handSite P1 2))
            (pair (id "Ryuma" P1) (handSite P2 3)) (pair (id "Ryuma" P2) (handSite P1 3))
        })
        (map "Captured" {
            (pair (id "Fuhyo" P1) (id "Fuhyo" P2)) (pair (id "Fuhyo" P2) (id "Fuhyo" P1))
            (pair (id "Ginsho" P1) (id "Ginsho" P2)) (pair (id "Ginsho" P2) (id "Ginsho" P1))
            (pair (id "Hisha" P1) (id "Hisha" P2)) (pair (id "Hisha" P2) (id "Hisha" P1))
            (pair (id "Kakugyo" P1) (id "Kakugyo" P2)) (pair (id "Kakugyo" P2) (id "Kakugyo" P1))
            (pair (id "Kinsho" P1) (id "Kinsho" P2)) (pair (id "Kinsho" P2) (id "Kinsho" P1))
            (pair (id "Tokin" P1) (id "Fuhyo" P2)) (pair (id "Tokin" P2) (id "Fuhyo" P1))
            (pair (id "Narigin" P1) (id "Ginsho" P2)) (pair (id "Narigin" P2) (id "Ginsho" P1))
            (pair (id "Ryuo" P1) (id "Hisha" P2)) (pair (id "Ryuo" P2) (id "Hisha" P1))
            (pair (id "Ryuma" P1) (id "Kakugyo" P2)) (pair (id "Ryuma" P2) (id "Kakugyo" P1))
        })
        (map "Promoted" {
            (pair (id "Fuhyo" P1) (id "Tokin" P1)) (pair (id "Fuhyo" P2) (id "Tokin" P2))
            (pair (id "Ginsho" P1) (id "Narigin" P1)) (pair (id "Ginsho" P2) (id "Narigin" P2))
            (pair (id "Hisha" P1) (id "Ryuo" P1)) (pair (id "Hisha" P2) (id "Ryuo" P2))
            (pair (id "Kakugyo" P1) (id "Ryuma" P1)) (pair (id "Kakugyo" P2) (id "Ryuma" P2))
        })

        (hand Each size:5)
        (dice num:1)
    })

    (rules
        (start {
            (place "Osho1" coord:"A1") (place "Kinsho1" coord:"B1") (place "Ginsho1" coord:"C1") (place "Kakugyo1" coord:"D1") (place "Hisha1" coord:"E1") (place "Fuhyo1" coord:"A2")
            (place "Osho2" coord:"E5") (place "Kinsho2" coord:"D5") (place "Ginsho2" coord:"C5") (place "Kakugyo2" coord:"B5") (place "Hisha2" coord:"A5") (place "Fuhyo2" coord:"E4")
        })

        (play
            (if ("SameTurn")
                (or
                    ("Promote")
                    (move Pass)
                )
                (do (roll)
                    next:(do
                        (if (!= 6 (count Pips))
                            (or {
                                (if (can Move
                                        (do
                                            (or ("PlaceAPiece" Mover Next) (forEach Piece))
                                            ifAfterwards:(and
                                                (not ("IsInCheck" "Osho" Mover (forEach Piece Next)))
                                                ("CorrectColumn")
                                            )
                                        )
                                    )
                                    (do
                                        (or ("PlaceAPiece" Mover Next) (forEach Piece))
                                        ifAfterwards:("CorrectColumn")
                                    )
                                    (or ("PlaceAPiece" Mover Next) (forEach Piece))
                                )
                            })
                            (or ("PlaceAPiece" Mover Next) (forEach Piece))
                        )
                        ifAfterwards:(not ("IsInCheck" "Osho" Mover (forEach Piece Next)))
                    )
                )
            )
        )

        (end {
            (if (and ("IsInCheck" "Osho" Next (or ("PlaceAPiece" Mover Next) (forEach Piece))) ("NextCannotMove")) (result Mover Win))
            (if (no Moves Next) (result Mover Win))
        })
    )
)

(metadata

    (info
        {
        (description "Dice Shogi is a recently invented Shogi variant. It is essentially Mini Shogi played with dice determining the players' moves.")
        (rules "The rules are the same of Mini Shogi except the value of the die rolled at each turn is the index of the column of a piece must go.
            When you have pieces on your hand, you can drop a piece you like on the column with the index equal to the value of the die.
        If there are no legal moves with the value of the die, or if the value of the die is equal to 6, you can move any piece according to the rules of Mini Shogi.")
        (source "<a href=\"http://minerva.cs.uec.ac.jp/cgi-bin/uec55shogi/wiki.cgi?page=The+Rule+of+Dice%2DShogi\" target=\"_blank\" class=\"style1\" style=\"color: #0000EE\" />minerva.cs.uec.ac.jp</a>")
        (version "1.3.0")
        (classification "board/war/replacement/checkmate/shogi")
        (credit "Eric Piette")
        }
    )

    (graphics {
        (player Colour P1 (colour White))
        (player Colour P2 (colour White))
        (piece Families {"Defined" "Study"})
        (board Style Shogi)
        (piece Rotate P2 degrees:180)
        (piece Colour "Tokin" strokeColour:(colour Red))
        (piece Colour "Narigin" strokeColour:(colour Red))
        (piece Colour "Ryuo" strokeColour:(colour Red))
        (piece Colour "Ryuma" strokeColour:(colour Red))
        (piece Colour "Narikei" strokeColour:(colour Red))
        (piece Colour "Narikyo" strokeColour:(colour Red))
        (piece ExtendName P2 piece:"Osho" "1")
    })
    (ai
        "Dice Shogi_ai"
    )
)
