(define "CaptureEnemy"
    (apply
        (if
            (is Enemy (who at:(to)))
            (remove (to))
        )
    )
)

(define "Promote"
    (then
        (if
            (and
                (= (state at:(last To)) 0)
                (or
                    (is In (last To) (sites Mover "Promotion") )
                    (is In (last From) (sites Mover "Promotion") )
                )
            )
            (moveAgain)
        )
    )
)

(define "SlideMove"
    (move
        Slide
        #1
        #2
        (to
            if:(is Enemy (who at:(to)))
            ("CaptureEnemy")
        )
        #3
    )
)

(define "StepMove"
    (move
        Step
        #1
        (to
            if:(not (is Friend (who at:(to))))
            ("CaptureEnemy")
        )
        #2
    )
)

(define "HopMove"
    (move
        Hop
        #1
        (between
            if:True
        )
        (to
            if:(not (is Friend (who at:(to))))
            ("CaptureEnemy")
        )
        #2
    )
)

(define "HopMoveWithRange"
    (move
        Hop
        #1
        (between
            #2
            #3
            #4
            if:True
        )
        (to
            if:(not (is Friend (who at:(to))))
            ("CaptureEnemy")
        )
        #5
    )
)

(define "DoubleStep"
    (move
        Step
        #1
        (to
            if:(not (is Friend (who at:(to))))
            ("CaptureEnemy")
        )
        (then
            (step
                (from (last To))
                #2
                (to
                    if:(not (is Friend (who at:(to))))
                    ("CaptureEnemy")
                )
            )
        )
    )
)

(define "ForwardKnightMove"
    (forEach Direction
        Forward
        (to
            if:True
            (apply
                (forEach Direction
                    (from (to))
                    (directions {FR FL})
                    (if (not (is Friend (who at:(to))))
                        (move
                            (from)
                            (to
                                ("CaptureEnemy")
                            )
                        )
                    )
                )
            )
        )
        #1
    )
)

(define "RangingJump"
    (move
        Hop
        #1
        (between
            (range 1 (count Columns))
            if:(not (is In (what at:(between))  #2))
        )
        (to
            if:(and (is Enemy (who at:(to))) (not (is In (what at:(to)) #3)))
            ("CaptureEnemy")
        )
    )
)

(define "AdjacentEnemyPieces"
    (intersection
        (sites Around #1)
        (sites Occupied by:Next)
    )
)

(define "FireEnemyDemonAdjacent"
    (intersection
        (sites Around #1)
        (sites Occupied by:Next component:"FireDemon")
    )
)

(define "PassiveBurn"
    (if (!= 0 (count Sites in:("FireEnemyDemonAdjacent" (last To))))
        (and
            (remove (last To))
            (set Value Mover Undefined)
        )
    )
)

//------------------------------------------------------------------------------

(game "Tenjiku Shogi"
    (players {(player N) (player S)})
    (equipment {
        (board (square 16))
        (piece "Pawn" ("StepMove" Forward))
        (piece "King" ("StepMove" Adjacent))
        (piece "Prince" ("StepMove" Adjacent))
        (piece "DrunkenElephant" ("StepMove" (difference Adjacent (directions {Backward}))))

        (piece "ViceGeneral"
            (or {
                (if ("NewTurn")
                    (or
                        ("RangingJump"
                            Diagonal
                            (sites {(id "King1") (id "King2") (id "Prince1") (id "Prince2") (id "GreatGeneral1") (id "GreatGeneral2") (id "ViceGeneral1") (id "ViceGeneral2")} )
                            (sites {(id "King" Next) (id "Prince" Next)} )
                        )
                        ("SlideMove" Diagonal)
                    )
                )
                (move
                    Step
                    Adjacent
                    (to
                        if:(is Empty (to))
                    )
                    (then
                        (if (< (value Player Mover) 1)
                            (and
                                (set Value Mover (+ 1 (value Player Mover)))
                                (moveAgain)
                            )
                            (set Value Mover Undefined)
                        )
                    )
                )
                (move
                    Step
                    Adjacent
                    (to
                        if:(is Enemy (who at:(to)))
                        ("CaptureEnemy")
                    )
                    (then
                        (set Value Mover Undefined)
                    )
                )
            })
        )

        (piece "GreatGeneral"
            (or
                ("RangingJump"
                    Adjacent
                    (sites {(id "King1") (id "King2") (id "Prince1") (id "Prince2") (id "GreatGeneral1") (id "GreatGeneral2")} )
                    (sites {(id "King" Next) (id "Prince" Next)} )
                )
                ("SlideMove" Adjacent)
            )
        )

        (piece "BishopGeneral"
            (or
                ("RangingJump"
                    Diagonal
                    (sites {(id "King1") (id "King2") (id "Prince1") (id "Prince2") (id "GreatGeneral1") (id "GreatGeneral2") (id "ViceGeneral1") (id "ViceGeneral2") (id "BishopGeneral1") (id "BishopGeneral2") (id "RookGeneral1") (id "RookGeneral2")} )
                    (sites {(id "King" Next) (id "Prince" Next)} )
                )
                ("SlideMove" Diagonal)
                "Promote"
            )
        )

        (piece "RookGeneral"
            (or
                ("RangingJump"
                    Orthogonal
                    (sites {(id "King1") (id "King2") (id "Prince1") (id "Prince2") (id "GreatGeneral1") (id "GreatGeneral2") (id "ViceGeneral1") (id "ViceGeneral2") (id "BishopGeneral1") (id "BishopGeneral2") (id "RookGeneral1") (id "RookGeneral2")} )
                    (sites {(id "King" Next) (id "Prince" Next)} )
                )
                ("SlideMove" Orthogonal)
                "Promote"
            )
        )

        (piece "Lion"
            (or {
                ("DoubleStep" Adjacent N)
                ("DoubleStep" Adjacent S)
                ("DoubleStep" Adjacent E)
                ("DoubleStep" Adjacent W)
                ("DoubleStep" Adjacent NE)
                ("DoubleStep" Adjacent NW)
                ("DoubleStep" Adjacent SW)
                ("DoubleStep" Adjacent SE)
                ("HopMove" Adjacent)
                (move
                    Leap
                    "KnightWalk"
                    (to
                        if:(not (is Friend (who at:(to))))
                        ("CaptureEnemy")
                    )
                )
                }
                "Promote"
            )
        )

        (piece "HornedFalcon"
            (or {
                ("DoubleStep" Forward N)
                ("DoubleStep" Forward S)
                ("HopMove" Forward)
                ("SlideMove" (difference Adjacent (directions {Forward})))
                }
                "Promote"
            )
        )

        (piece "SoaringEagle"
            (or {
                ("DoubleStep" FL NW)
                ("DoubleStep" FL SE)
                ("DoubleStep" FR SW)
                ("DoubleStep" FR NE)
                ("HopMove" (directions {FL FR}))
                ("SlideMove" (difference Adjacent (directions {FL FR})))
                }
                "Promote"
            )
        )

        (piece "DragonHorse"
            (or
                ("StepMove" Orthogonal)
                ("SlideMove" Diagonal)
                "Promote"
            )
        )

        (piece "DragonKing"
            (or
                ("StepMove" Diagonal)
                ("SlideMove" Orthogonal)
                "Promote"
            )
        )

        (piece "Bishop"
            ("SlideMove" Diagonal ~ "Promote")
        )

        (piece "Rook"
            ("SlideMove" Orthogonal ~ "Promote")
        )

        (piece "FerociousLeopard"
            ("StepMove" (directions {Backward Forward FL FR BR BL}) "Promote")
        )

        (piece "GoldGeneral"
            ("StepMove" (directions {Backward Forward FL FR Rightward Leftward}) "Promote")
        )

        (piece "FireDemon"
            (or
                (if ("NewTurn")
                    ("SlideMove" (directions {FL FR BR BL Rightward Leftward}) ~
                        (then
                            (remove
                                ("AdjacentEnemyPieces" (last To))
                            )
                        )
                    )
                )
                (move
                    Step
                    Adjacent
                    (to
                        if:(is Empty (to))
                    )
                    (then
                        (if (!= 0 (count Sites in:("AdjacentEnemyPieces" (last To))))
                            (and
                                (remove
                                    ("AdjacentEnemyPieces" (last To))
                                )
                                (set Value Mover Undefined)
                            )
                            (if (< (value Player Mover) 1)
                                (and
                                    (set Value Mover (+ 1 (value Player Mover)))
                                    (moveAgain)
                                )
                                (set Value Mover Undefined)
                            )
                        )
                    )
                )
            )
        )

        (piece "HeavenlyTetrarch"
            (or {
                ("DoubleStep" N S)
                ("DoubleStep" NE SW)
                ("DoubleStep" E W)
                ("DoubleStep" SE NW)
                ("DoubleStep" S N)
                ("DoubleStep" SW NE)
                ("DoubleStep" W E)
                ("DoubleStep" NW SE)
                (move
                    Slide
                    (directions {FR FL BR BL Forward Backward})
                    (between
                        if:(or
                            (is Empty (between))
                            (is In (between) (sites Around (from)))
                        )
                    )
                    (to
                        if:(and
                            (not (is In (to) (sites Around (from))))
                            (is Enemy (who at:(to)))
                        )
                        (apply
                            if:(not (is In (to) (sites Around (from))))
                            (if
                                (is Enemy (who at:(to)))
                                (remove (to))
                            )
                        )
                    )
                )
                (move Slide
                    (directions {Rightward Leftward})
                    (between
                        (max 3)
                        if:(or
                            (is Empty (between))
                            (is In (between) (sites Around (from)))
                        )
                    )
                    (to
                        if:(and
                            (not (is In (to) (sites Around (from))))
                            (is Enemy (who at:(to)))
                        )
                        (apply
                            if:(not (is In (to) (sites Around (from))))
                            (if
                                (is Enemy (who at:(to)))
                                (remove (to))
                            )
                        )
                    )
                )
            })
        )

        (piece "WaterBuffalo"
            (or
                ("SlideMove" (directions {FR FL BR BL Rightward Leftward}))
                ("SlideMove" (directions {Forward Backward}) (between (max 2)))
                "Promote"
            )
        )

        (piece "ChariotSoldier"
            (or
                ("SlideMove" (directions {FR FL BR BL Forward Backward}))
                ("SlideMove" (directions {Rightward Leftward}) (between (max 2)))
                "Promote"
            )
        )

        (piece "SideSoldier"
            (or {
                ("SlideMove" (directions {Rightward Leftward}))
                ("SlideMove" Forward (between (max 2)))
                ("StepMove" Backward)
                }
                "Promote"
            )
        )

        (piece "VerticalSoldier"
            (or {
                ("SlideMove" Forward)
                ("SlideMove" (directions {Rightward Leftward}) (between (max 2)))
                ("StepMove" Backward)
                }
                "Promote"
            )
        )

        (piece "Knight" ("ForwardKnightMove" "Promote"))

        (piece "IronGeneral" ("StepMove" (directions {Forward FR FL}) "Promote"))

        (piece "FreeEagle"
            (or {
                ("SlideMove" Adjacent)
                ("DoubleStep" NE NE)
                ("DoubleStep" NE NW)
                ("DoubleStep" NE SE)
                ("DoubleStep" SE SE)
                ("DoubleStep" SE NE)
                ("DoubleStep" SE SW)
                ("DoubleStep" SW SW)
                ("DoubleStep" SW NW)
                ("DoubleStep" SW SE)
                ("DoubleStep" NW NW)
                ("DoubleStep" NW NE)
                ("DoubleStep" NW SW)
                }
            )
        )

        (piece "LionHawk"
            (or {
                ("SlideMove" Diagonal)
                ("DoubleStep" Adjacent N)
                ("DoubleStep" Adjacent S)
                ("DoubleStep" Adjacent E)
                ("DoubleStep" Adjacent W)
                ("DoubleStep" Adjacent NE)
                ("DoubleStep" Adjacent NW)
                ("DoubleStep" Adjacent SW)
                ("DoubleStep" Adjacent SE)
                ("HopMove" Adjacent)
                (move
                    Leap
                    "KnightWalk"
                    (to
                        if:(not (is Friend (who at:(to))))
                        ("CaptureEnemy")
                    )
                )
                }
            )
        )

        (piece "Queen" ("SlideMove" Adjacent ~ "Promote"))

        (piece "Phoenix"
            (or
                ("StepMove" Orthogonal)
                ("HopMove" Diagonal)
                "Promote"
            )
        )

        (piece "Kirin"
            (or
                ("StepMove" Diagonal)
                ("HopMove" Orthogonal)
                "Promote"
            )
        )

        (piece "FreeBoar" ("SlideMove" (directions {FR FL BR BL Rightward Leftward})))

        (piece "FlyingOx" ("SlideMove" (directions {FR FL BR BL Forward Backward})))

        (piece "SideMover"
            (or
                ("StepMove" (directions {Forward Backward}))
                ("SlideMove" (directions {Rightward Leftward}))
                "Promote"
            )
        )

        (piece "VerticalMover"
            (or
                ("StepMove" (directions {Rightward Leftward}))
                ("SlideMove" (directions {Forward Backward}))
                "Promote"
            )
        )

        (piece "CopperGeneral"
            ("StepMove" (directions {Forward Backward FR FL}) "Promote")
        )

        (piece "SilverGeneral"
            ("StepMove" (directions {Forward BR BL FR FL}) "Promote")
        )

        (piece "MultiGeneral"
            ("SlideMove" (directions {Forward BR BL}))
        )

        (piece "FlyingStag"
            (or
                ("SlideMove" (directions {Forward Backward}))
                ("StepMove" (directions {Rightward Leftward BR BL FR FL}))
            )
        )

        (piece "Dog"
            ("StepMove" (directions {BR BL Forward}) "Promote")
        )

        (piece "BlindTiger" ("StepMove" (difference Adjacent (directions {Forward})) "Promote"))

        (piece "WhiteHorse" ("SlideMove" (directions {Forward FR FL Backward})))

        (piece "Whale" ("SlideMove" (directions {Forward BR BL Backward})))

        (piece "Lance" ("SlideMove" Forward ~ "Promote"))

        (piece "ReverseChariot" ("SlideMove" (directions {Forward Backward}) ~ "Promote"))

        (regions "Promotion" P1 (expand (sites Top) steps:4))
        (regions "Promotion" P2 (expand (sites Bottom) steps:4))

        (map "Promoted" {
            (pair (id "FerociousLeopard" P1) (id "Bishop" P1)) (pair (id "FerociousLeopard" P2) (id "Bishop" P2))
            (pair (id "Bishop" P1) (id "DragonHorse" P1)) (pair (id "Bishop" P2) (id "DragonHorse" P2))
            (pair (id "DragonHorse" P1) (id "HornedFalcon" P1)) (pair (id "DragonHorse" P2) (id "HornedFalcon" P2))
            (pair (id "HornedFalcon" P1) (id "BishopGeneral" P1)) (pair (id "HornedFalcon" P2) (id "BishopGeneral" P2))
            (pair (id "BishopGeneral" P1) (id "ViceGeneral" P1)) (pair (id "BishopGeneral" P2) (id "ViceGeneral" P2))
            (pair (id "Knight" P1) (id "SideSoldier" P1)) (pair (id "Knight" P2) (id "SideSoldier" P2))
            (pair (id "SideSoldier" P1) (id "WaterBuffalo" P1)) (pair (id "SideSoldier" P2) (id "WaterBuffalo" P2))
            (pair (id "WaterBuffalo" P1) (id "FireDemon" P1)) (pair (id "WaterBuffalo" P2) (id "FireDemon" P2))
            (pair (id "Phoenix" P1) (id "Queen" P1)) (pair (id "Phoenix" P2) (id "Queen" P2))
            (pair (id "Queen" P1) (id "FreeEagle" P1)) (pair (id "Queen" P2) (id "FreeEagle" P2))
            (pair (id "CopperGeneral" P1) (id "SideMover" P1)) (pair (id "CopperGeneral" P2) (id "SideMover" P2))
            (pair (id "SideMover" P1) (id "FreeBoar" P1)) (pair (id "SideMover" P2) (id "FreeBoar" P2))
            (pair (id "Dog" P1) (id "MultiGeneral" P1)) (pair (id "Dog" P2) (id "MultiGeneral" P2))
            (pair (id "Lance" P1) (id "WhiteHorse" P1)) (pair (id "Lance" P2) (id "WhiteHorse" P2))
            (pair (id "DrunkenElephant" P1) (id "Prince" P1)) (pair (id "DrunkenElephant" P2) (id "Prince" P2))
            (pair (id "Pawn" P1) (id "GoldGeneral" P1)) (pair (id "Pawn" P2) (id "GoldGeneral" P2))
            (pair (id "GoldGeneral" P1) (id "Rook" P1)) (pair (id "GoldGeneral" P2) (id "Rook" P2))
            (pair (id "Rook" P1) (id "DragonKing" P1)) (pair (id "Rook" P2) (id "DragonKing" P2))
            (pair (id "DragonKing" P1) (id "SoaringEagle" P1)) (pair (id "DragonKing" P2) (id "SoaringEagle" P2))
            (pair (id "SoaringEagle" P1) (id "RookGeneral" P1)) (pair (id "SoaringEagle" P2) (id "RookGeneral" P2))
            (pair (id "RookGeneral" P1) (id "GreatGeneral" P1)) (pair (id "RookGeneral" P2) (id "GreatGeneral" P2))
            (pair (id "IronGeneral" P1) (id "VerticalSoldier" P1)) (pair (id "IronGeneral" P2) (id "VerticalSoldier" P2))
            (pair (id "VerticalSoldier" P1) (id "ChariotSoldier" P1)) (pair (id "VerticalSoldier" P2) (id "ChariotSoldier" P2))
            (pair (id "ChariotSoldier" P1) (id "HeavenlyTetrarch" P1)) (pair (id "ChariotSoldier" P2) (id "HeavenlyTetrarch" P2))
            (pair (id "Kirin" P1) (id "Lion" P1)) (pair (id "Kirin" P2) (id "Lion" P2))
            (pair (id "Lion" P1) (id "LionHawk" P1)) (pair (id "Lion" P2) (id "LionHawk" P2))
            (pair (id "SilverGeneral" P1) (id "VerticalMover" P1)) (pair (id "SilverGeneral" P2) (id "VerticalMover" P2))
            (pair (id "VerticalMover" P1) (id "FlyingOx" P1)) (pair (id "VerticalMover" P2) (id "FlyingOx" P2))
            (pair (id "BlindTiger" P1) (id "FlyingStag" P1)) (pair (id "BlindTiger" P2) (id "FlyingStag" P2))
            (pair (id "ReverseChariot" P1) (id "Whale" P1)) (pair (id "ReverseChariot" P2) (id "Whale" P2))
        })
    })
    (rules
        (start {
            // Row 1 & 16
            (place "Lance1" (sites {"A1" "P1"})) (place "Lance2" (sites {"A16" "P16"}))
            (place "Knight1" (sites {"B1" "O1"})) (place "Knight2" (sites {"B16" "O16"}))
            (place "FerociousLeopard1" (sites {"C1" "N1"})) (place "FerociousLeopard2" (sites {"C16" "N16"}))
            (place "IronGeneral1" (sites {"D1" "M1"})) (place "IronGeneral2" (sites {"D16" "M16"}))
            (place "CopperGeneral1" (sites {"E1" "L1"})) (place "CopperGeneral2" (sites {"E16" "L16"}))
            (place "SilverGeneral1" (sites {"F1" "K1"})) (place "SilverGeneral2" (sites {"F16" "K16"}))
            (place "GoldGeneral1" (sites {"G1" "J1"})) (place "GoldGeneral2" (sites {"G16" "J16"}))
            (place "King1" (sites {"H1"})) (place "King2" (sites {"I16"}))
            (place "DrunkenElephant1" (sites {"I1"})) (place "DrunkenElephant2" (sites {"H16"}))

            // Row 2 & 15
            (place "ReverseChariot1" (sites {"A2" "P2"})) (place "ReverseChariot2" (sites {"A15" "P15"}))
            (place "ChariotSoldier1" (sites {"C2" "N2" "D2" "M2"})) (place "ChariotSoldier2" (sites {"C15" "N15" "D15" "M15"}))
            (place "BlindTiger1" (sites {"F2" "K2"})) (place "BlindTiger2" (sites {"F15" "K15"}))
            (place "Kirin1" (sites {"G2"})) (place "Kirin2" (sites {"J15"}))
            (place "Lion1" (sites {"H2"})) (place "Lion2" (sites {"I15"}))
            (place "Queen1" (sites {"I2"})) (place "Queen2" (sites {"H15"}))
            (place "Phoenix1" (sites {"J2"})) (place "Phoenix2" (sites {"G15"}))

            // Row 3 & 14
            (place "SideSoldier1" (sites {"A3" "P3"})) (place "SideSoldier2" (sites {"A14" "P14"}))
            (place "VerticalSoldier1" (sites {"B3" "O3"})) (place "VerticalSoldier2" (sites {"B14" "O14"}))
            (place "Bishop1" (sites {"C3" "N3"})) (place "Bishop2" (sites {"C14" "N14"}))
            (place "DragonHorse1" (sites {"D3" "M3"})) (place "DragonHorse2" (sites {"D14" "M14"}))
            (place "DragonKing1" (sites {"E3" "L3"})) (place "DragonKing2" (sites {"E14" "L14"}))
            (place "WaterBuffalo1" (sites {"F3" "K3"})) (place "WaterBuffalo2" (sites {"F14" "K14"}))
            (place "FireDemon1" (sites {"G3" "J3"})) (place "FireDemon2" (sites {"G14" "J14"}))
            (place "LionHawk1" (sites {"H3"})) (place "LionHawk2" (sites {"I14"}))
            (place "FreeEagle1" (sites {"I3"})) (place "FreeEagle2" (sites {"H14"}))

            // Row 4 & 13
            (place "SideMover1" (sites {"A4" "P4"})) (place "SideMover2" (sites {"A13" "P13"}))
            (place "VerticalMover1" (sites {"B4" "O4"})) (place "VerticalMover2" (sites {"B13" "O13"}))
            (place "Rook1" (sites {"C4" "N4"})) (place "Rook2" (sites {"C13" "N13"}))
            (place "HornedFalcon1" (sites {"D4" "M4"})) (place "HornedFalcon2" (sites {"D13" "M13"}))
            (place "SoaringEagle1" (sites {"E4" "L4"})) (place "SoaringEagle2" (sites {"E13" "L13"}))
            (place "BishopGeneral1" (sites {"F4" "K4"})) (place "BishopGeneral2" (sites {"F13" "K13"}))
            (place "RookGeneral1" (sites {"G4" "J4"})) (place "RookGeneral2" (sites {"G13" "J13"}))
            (place "GreatGeneral1" (sites {"H4"})) (place "GreatGeneral2" (sites {"I13"}))
            (place "ViceGeneral1" (sites {"I4"})) (place "ViceGeneral2" (sites {"H13"}))

            // Row 5 & 12
            (place "Pawn1" (sites Row 4)) (place "Pawn2" (sites Row 11))

            // Row 6 & 11
            (place "Dog1" (sites {"E6" "L6"})) (place "Dog2" (sites {"E11" "L11"}))
        })

        (play
            (if ("SameTurn")
                (or
                    (if (= (what at:(last To)) (id "ViceGeneral" Mover))
                        (forEach Piece "ViceGeneral")
                        (if (= (what at:(last To)) (id "FireDemon" Mover))
                            (forEach Piece "FireDemon")
                            (move
                                Promote
                                (last To)
                                (piece (mapEntry "Promoted" (what at:(last To))))
                                (then (set State at:(last To) 1))
                            )
                        )
                    )
                    (move Pass (then (set Value Mover Undefined)))
                )
                (forEach Piece)
                (then ("PassiveBurn"))
            )
        )

        (end
            (if
                (and {
                    (not (is Mover Next))
                    (= (where "King" Next) Off)
                    (= (where "Prince" Next) Off)
                })
                (result Mover Win)
            )
        )
    )
)

//------------------------------------------------------------------------------

(option "Variant" <Variant> args:{ <type> }
    {
    (item "Wikipedia"   <>       "The rules are describing from wikipedia.")
})

//------------------------------------------------------------------------------

(rulesets {

    (ruleset "Ruleset/Wikipedia (Suggested)" {
        "Variant/Wikipedia"
    })*

    (ruleset "Ruleset/Historical Information (Incomplete)" {

    })

})

//------------------------------------------------------------------------------

(metadata

    (info
        {
        (description "Tenjiku Shogi is a large version of Shogi dated to the Edo period in Japan.")
        (useFor "Ruleset/Historical Information (Incomplete)" (rules "16x16 board. 156 pieces. Includes the same pieces as Sho Shogi, Chu Shogi, and Dai Shogi, with the addition of the following pieces: Great General: moves any distance orthogonally or diagonally, jumping over any intervening pieces; Vice General: moves one space orthogonally or any distance diagonally; Fire Demon: moves two spaces forward or backward; moves any distance left or right or diagonally, pieces in adjacent squares \"perish by burning\"; Rook General: moves any distance orthogonally, jumping over any intervening pieces; Bishop General: moves any distance diagonally, jumping over any intervening pieces; Lion Hawk: moves two spaces orthogonally and any distance diagonally; Water Buffalo: moves two spaces forward or backward or any distance left, right, or diagonally; Chariot Soldier: moves two spaces left or right and any distance forward or backward orthogonally or diagonally; Vertical Soldier: moves any distance orthogonally forward, two spaces left or right, or one step backward orthogonally; Side Soldier: moves any distance left or right orthogonally or two spaces left or right or one space backward; Dog: one space forward or one space backward diagonally; Multi General: moves any distance forward or backward diagonally; Heavenly Tetrarch: moves like the Chariot Soldier but not to adjacent squares; Free Eagle: moves like the Free King or Cat Sword twice. Tokin: promoted pawn. Pieces promote as follows: Knight to Side Soldier; Iron General to Vertical General; Side Soldier to Water Buffalo; Vertical Soldier to Chariot Soldier; Chariot Soldier to Heavenly Tetrarch; Horned Falcon to Bishop General; Soaring Eagle to Rook General; Bishop General to Vice General; Rook General to Great General; Water Buffalo to Fire Demon; Lion to Lion Hawk; Free King to Free Eagle."))
        (useFor "Ruleset/Historical Information (Incomplete)" (source "DLP evidence."))
        (useFor "Ruleset/Wikipedia (Suggested)" (rules "Rules in the Wikipedia page."))
        (useFor "Ruleset/Wikipedia (Suggested)" (source "<a href=\"https://en.wikipedia.org/wiki/Tenjiku_shogi\" target=\"_blank\" class=\"style1\" style=\"color: #0000EE\" />Wikipedia</a>"))
        (source "Shogi Zushiki.")
        (version "1.3.0")
        (classification "board/war/replacement/checkmate/shogi")
        (credit "Eric Piette")
        (origin  "This game was played in Japan, from around 1675 to 1699.")
        }
    )

    (graphics {
        (player Colour P1 (colour White))
        (player Colour P2 (colour White))
        (board Style Shogi)
        (piece Style ExtendedShogi)
        (piece Rotate P2 degrees:180)
    })

)
