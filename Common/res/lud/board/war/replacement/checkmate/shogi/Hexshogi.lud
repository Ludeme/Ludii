(define "CapturePiece"
    (apply
        (if (is Enemy (who at:(to)))
            (add
                (piece (mapEntry "Captured" (what at:(to))))
                (to (mapEntry "Where" (what at:(to))))
            )
        )
    )
)

(define "NextCannotMove"
    (not
        (can Move
            (do
                (or {
                    (move
                        (from (sites Occupied by:Next container:"Hand" components:{"Kakugyo" "Ginsho" "Hisha" "Kinsho"}))
                        (to (sites Empty))
                    )
                    (do
                        (move
                            (from (sites Occupied by:Next container:"Hand" component:"Fuhyo"))
                            (to (difference (sites Empty) (sites Next "LastRank"))
                                if:("OnePawnPerColumn" Next)
                            )
                        )
                        ifAfterwards:(not ("IsInCheck" "Osho" Mover))
                    )
                    ("PlaceLance" Next)
                    ("PlaceKnight" Next)
                    (forEach Piece Next)
                } )
                ifAfterwards:(not ("IsInCheck" "Osho" Next))
            )
        )
    )
)

(define "OnePawnPerColumn"
    (=
        (count Sites in:(sites Occupied by:#1 container:"Board" component:"Fuhyo"))
        (count Sites in:(difference (sites Occupied by:#1 container:"Board" component:"Fuhyo") (union (sites Direction from:(to) N) (sites Direction from:(to) S)) ))
    )
)

(define "PlaceKnight"
    (move
        (from (sites Occupied by:#1 container:"Hand" component:"Keima"))
        (to (difference (sites Empty) (sites #1 "TwoFurthestRank")))
    )
)

(define "PlaceLance"
    (move
        (from (sites Occupied by:#1 container:"Hand" component:"Kyosha"))
        (to (difference (sites Empty) (sites #1 "LastRank")))
    )
)

(define "PlacePawn"
    (do
        (move
            (from (sites Occupied by:#1 container:"Hand" component:"Fuhyo"))
            (to (difference (sites Empty) (sites #1 "LastRank"))
                if:("OnePawnPerColumn" #1)
            )
        )
        ifAfterwards:(not (and ("IsInCheck" "Osho" #2) ("NextCannotMove")))
    )
)

(define "InPromotionZone"
    (is In #1 (sites Mover "Promotion"))
)

(define "InLastRank"
    (is In #1 (sites Mover "LastRank"))
)

(define "InTwoFurthestRank"
    (is In #1 (sites Mover "TwoFurthestRank"))
)

(define "Promote"
    (move Promote (last To) (piece (mapEntry "Promoted" (what at:(last To)))))
)

(define "CanPromote"
    (then
        (if
            (or ("InPromotionZone" (last To)) ("InPromotionZone" (last From)))
            (moveAgain)
        )
    )
)

(define "SlideMove"
    (move
        Slide
        #1
        (to if:(is Enemy (who at:(to))) "CapturePiece")
        #2
    )
)

(define "StepMove"
    (move
        Step
        #1
        (to if:(not (is Friend (who at:(to)))) "CapturePiece")
        #2
    )
)

(define "GoldMove"
    (move
        Leap
        { {F} {F L F} {F R F} {L F} {R F} {L L F} {R R F} {L L L F}}
        rotations:False
        (to if:(not (is Friend (who at:(to)))) "CapturePiece")
    )
)

(define "SilverMove"
    (move
        Leap
        { {F} {F L F} {F R F} {L F L F} {R F R F} {L L F L F} {R R F R F}}
        rotations:False
        (to if:(not (is Friend (who at:(to)))) "CapturePiece")
    )
)

//------------------------------------------------------------------------------

(game "Hexshogi"
    (players {(player N) (player S)})

    (equipment {
        (board (rotate 90 (remove (hex Rectangle 9 11) cells:{0 10 21 31 42 52 63 73 84 94})))

        // King
        (piece "Osho" Each ("StepMove" All))

        //Pawn
        (piece "Fuhyo" Each
            ("StepMove"
                Forward
                (then
                    (if ("InPromotionZone" (last To))
                        (if ("InLastRank" (last To))
                            ("Promote")
                            (moveAgain)
                        )
                    )
                )
            )
        )

        // Silver General
        (piece "Ginsho" Each "SilverMove")

        // Rook
        (piece "Hisha" Each ("SlideMove" Orthogonal "CanPromote"))

        // Bishop
        (piece "Kakugyo" Each ("SlideMove" Diagonal "CanPromote"))

        // Knight
        (piece "Keima" Each
            (move
                Leap
                "KnightWalk"
                rotations:False
                (to
                    if: (not (is Friend (who at:(to))))
                    (apply
                        if:(is Enemy (who at:(to)))
                        (add
                            (piece (mapEntry "Captured" (what at:(to))))
                            (to (mapEntry "Where" (what at:(to))))
                        )
                    )
                )
                (then
                    (if ("InPromotionZone" (last To))
                        (if ("InTwoFurthestRank" (last To))
                            "Promote"
                            (moveAgain)
                        )
                    )
                )
            )
        )

        // Lance
        (piece "Kyosha" Each
            ("SlideMove"
                Forward
                (then
                    (if ("InPromotionZone" (last To))
                        (if ("InLastRank" (last To))
                            "Promote"
                            (moveAgain)
                        )
                    )
                )
            )
        )

        // Gold General
        (piece "Kinsho" Each "GoldMove")

        // Promoted Pawn
        (piece "Tokin" Each "GoldMove")

        // Promoted Silver
        (piece "Narigin" Each "GoldMove")

        // Promoted Rook
        (piece "Ryuo" Each (or ("SlideMove" Orthogonal) ("StepMove" Diagonal)))

        // Promoted Bishop
        (piece "Ryuma" Each (or ("SlideMove" Diagonal) ("StepMove" Orthogonal)))

        // Promoted Knight
        (piece "Narikei" Each "GoldMove")

        // Promoted Lance
        (piece "Narikyo" Each "GoldMove")

        (regions "LastRankP1" P1 (forEach (sites Board) if:(= (site) (ahead (site) N))))
        (regions "LastRankP2" P2 (forEach (sites Board) if:(= (site) (ahead (site) S))))
        (regions "TwoFurthestRankP1" P1 (forEach (sites Board) if:(= (site) (ahead (site) steps:2 N))))
        (regions "TwoFurthestRankP2" P2 (forEach (sites Board) if:(= (site) (ahead (site) steps:2 S))))
        (regions "Promotion" P1 (forEach (sites Board) if:(= (site) (ahead (site) steps:3 N))))
        (regions "Promotion" P2 (forEach (sites Board) if:(= (site) (ahead (site) steps:3 S))))
        (map "Where" {
            (pair (id "Fuhyo" P1) (handSite P2)) (pair (id "Fuhyo" P2) (handSite P1))
            (pair (id "Ginsho" P1) (handSite P2 1)) (pair (id "Ginsho" P2) (handSite P1 1))
            (pair (id "Hisha" P1) (handSite P2 2)) (pair (id "Hisha" P2) (handSite P1 2))
            (pair (id "Kakugyo" P1) (handSite P2 3)) (pair (id "Kakugyo" P2) (handSite P1 3))
            (pair (id "Keima" P1) (handSite P2 4)) (pair (id "Keima" P2) (handSite P1 4))
            (pair (id "Kyosha" P1) (handSite P2 5)) (pair (id "Kyosha" P2) (handSite P1 5))
            (pair (id "Kinsho" P1) (handSite P2 6)) (pair (id "Kinsho" P2) (handSite P1 6))
            (pair (id "Tokin" P1) (handSite P2)) (pair (id "Tokin" P2) (handSite P1))
            (pair (id "Narigin" P1) (handSite P2 1)) (pair (id "Narigin" P2) (handSite P1 1))
            (pair (id "Ryuo" P1) (handSite P2 2)) (pair (id "Ryuo" P2) (handSite P1 2))
            (pair (id "Ryuma" P1) (handSite P2 3)) (pair (id "Ryuma" P2) (handSite P1 3))
            (pair (id "Narikei" P1) (handSite P2 4)) (pair (id "Narikei" P2) (handSite P1 4))
            (pair (id "Narikyo" P1) (handSite P2 5)) (pair (id "Narikyo" P2) (handSite P1 5))
        })
        (map "Captured" {
            (pair (id "Fuhyo" P1) (id "Fuhyo" P2)) (pair (id "Fuhyo" P2) (id "Fuhyo" P1))
            (pair (id "Ginsho" P1) (id "Ginsho" P2)) (pair (id "Ginsho" P2) (id "Ginsho" P1))
            (pair (id "Hisha" P1) (id "Hisha" P2)) (pair (id "Hisha" P2) (id "Hisha" P1))
            (pair (id "Kakugyo" P1) (id "Kakugyo" P2)) (pair (id "Kakugyo" P2) (id "Kakugyo" P1))
            (pair (id "Keima" P1) (id "Keima" P2)) (pair (id "Keima" P2) (id "Keima" P1))
            (pair (id "Kyosha" P1) (id "Kyosha" P2)) (pair (id "Kyosha" P2) (id "Kyosha" P1))
            (pair (id "Kinsho" P1) (id "Kinsho" P2)) (pair (id "Kinsho" P2) (id "Kinsho" P1))
            (pair (id "Tokin" P1) (id "Fuhyo" P2)) (pair (id "Tokin" P2) (id "Fuhyo" P1))
            (pair (id "Narigin" P1) (id "Ginsho" P2)) (pair (id "Narigin" P2) (id "Ginsho" P1))
            (pair (id "Ryuo" P1) (id "Hisha" P2)) (pair (id "Ryuo" P2) (id "Hisha" P1))
            (pair (id "Ryuma" P1) (id "Kakugyo" P2)) (pair (id "Ryuma" P2) (id "Kakugyo" P1))
            (pair (id "Narikei" P1) (id "Keima" P2)) (pair (id "Narikei" P2) (id "Keima" P1))
            (pair (id "Narikyo" P1) (id "Kyosha" P2)) (pair (id "Narikyo" P2) (id "Kyosha" P1))
        })
        (map "Promoted" {
            (pair (id "Fuhyo" P1) (id "Tokin" P1)) (pair (id "Fuhyo" P2) (id "Tokin" P2))
            (pair (id "Ginsho" P1) (id "Narigin" P1)) (pair (id "Ginsho" P2) (id "Narigin" P2))
            (pair (id "Hisha" P1) (id "Ryuo" P1)) (pair (id "Hisha" P2) (id "Ryuo" P2))
            (pair (id "Kakugyo" P1) (id "Ryuma" P1)) (pair (id "Kakugyo" P2) (id "Ryuma" P2))
            (pair (id "Keima" P1) (id "Narikei" P1)) (pair (id "Keima" P2) (id "Narikei" P2))
            (pair (id "Kyosha" P1) (id "Narikyo" P1)) (pair (id "Kyosha" P2) (id "Narikyo" P2))
        })

        (hand Each size:7)
    })

    (rules
        (start {
            (place "Osho1" coord:"C3") (place "Kinsho1" {"B3" "C2"}) (place "Ginsho1" {"B4" "D2"}) (place "Keima1" {"A4" "D1"}) (place "Kyosha1" {"A5" "E1"}) (place "Kakugyo1" coord:"C5") (place "Hisha1" coord:"E3") (place "Fuhyo1" {"C7" "C6" "D6" "D5" "E5" "E4" "F4" "F3" "G3"})
            (place "Osho2" coord:"K11") (place "Kinsho2" {"K12" "L11"}) (place "Ginsho2" {"J12" "L10"}) (place "Keima2" {"J13" "M10"}) (place "Kyosha2" {"I13" "M9"}) (place "Kakugyo2" coord:"K9") (place "Hisha2" coord:"I11") (place "Fuhyo2" {"G11" "H11" "H10" "I10" "I9" "J9" "J8" "K8" "K7"})
        })

        (play
            (if ("SameTurn")
                (or
                    ("Promote")
                    (move Pass)
                )
                (do
                    (or {
                        (move
                            (from (sites Occupied by:Mover container:"Hand" components:{"Kakugyo" "Ginsho" "Hisha" "Kinsho"}))
                            (to (sites Empty))
                        )
                        ("PlacePawn" Mover Next)
                        ("PlaceLance" Mover)
                        ("PlaceKnight" Mover)
                        (forEach Piece)
                    } )
                    ifAfterwards:(not ("IsInCheck" "Osho" Mover))
                )
            )
        )

        (end
            {
            (if (and
                    ("IsInCheck" "Osho" Next)
                    ("NextCannotMove")
                )
                (result Mover Win)
            )
            (if (no Moves Next) (result Mover Win))
            }
        )
    )
)

//------------------------------------------------------------------------------

(metadata

    (info
        {
        (description "A version of Shogi played on hexagonal cells.")
        (rules "Piece movement has been updated to work on hexagonal cells, but all other rules remain the same.")
        (source "<a href=\"http://wikipedia.org/wiki/Hexshogi\" target=\"_blank\" class=\"style1\" style=\"color: #0000EE\" />Wikipedia</a>")
        (version "1.3.0")
        (classification "board/war/replacement/checkmate/shogi")
        (author "George R. Dekle Sr.")
        (credit "Matthew Stephenson")
        (date "1986")
        }
    )

    (graphics {
        (player Colour P1 (colour White))
        (player Colour P2 (colour White))
        (piece Families {"Defined" "Study"})
        (board Style Shogi)
        (piece Rotate P2 degrees:180)
        (piece Colour "Tokin" strokeColour:(colour Red))
        (piece Colour "Narigin" strokeColour:(colour Red))
        (piece Colour "Ryuo" strokeColour:(colour Red))
        (piece Colour "Ryuma" strokeColour:(colour Red))
        (piece Colour "Narikei" strokeColour:(colour Red))
        (piece Colour "Narikyo" strokeColour:(colour Red))
        (piece ExtendName P2 piece:"Osho" "1")
    })

)
