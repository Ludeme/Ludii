(define "CaptureEnemyAndPromote"
    (apply
        (if
            (is Enemy (who at:(to)))
            (and
                (remove (to))
                ("Promote")
            )
        )
    )
)

(define "Promote"
    (if
        (= (state at:(from)) 0)
        (and
            (promote
                (from)
                (piece (mapEntry "Promoted" (what at:(from))))
            )
            (set State at:(from) 1)
        )
    )
)

(define "SlideMove"
    (move
        Slide
        #1
        #2
        (to
            if:(is Enemy (who at:(to)))
            ("CaptureEnemyAndPromote")
        )
        #3
    )
)

(define "StepMove"
    (move
        Step
        #1
        (to
            if:(not (is Friend (who at:(to))))
            ("CaptureEnemyAndPromote")
        )
        #2
    )
)

(define "HopMove"
    (move
        Hop
        #1
        (between
            if:True
        )
        (to
            if:(not (is Friend (who at:(to))))
            ("CaptureEnemyAndPromote")
        )
        #2
    )
)

(define "HopMoveWithRange"
    (move
        Hop
        #1
        (between
            #2
            #3
            #4
            if:True
        )
        (to
            if:(not (is Friend (who at:(to))))
            ("CaptureEnemyAndPromote")
        )
        #5
    )
)

(define "DoubleStep"
    (move
        Step
        #1
        (to
            if:(not (is Friend (who at:(to))))
            ("CaptureEnemyAndPromote")
        )
        (then
            (step
                (from (last To))
                #2
                (to
                    if:(not (is Friend (who at:(to))))
                    ("CaptureEnemyAndPromote")
                )
            )
        )
    )
)

(define "ForwardKnightMove"
    (forEach Direction
        Forward
        (to
            if:True
            (apply
                (forEach Direction
                    (from (to))
                    (directions {FR FL})
                    (if (not (is Friend (who at:(to))))
                        (move
                            (from)
                            (to
                                ("CaptureEnemyAndPromote")
                            )
                        )
                    )
                )
            )
        )
    )
)

//------------------------------------------------------------------------------

(game "Tai Shogi"
    (players {(player N) (player S)})
    (equipment {
        (board (square 25))

        (piece "FreeBear" Each
            (or
                ("SlideMove" (directions {Rightward Leftward FR FL BR BL}))
                ("ForwardKnightMove")
            )
        )

        (piece "FreeBoar" Each ("SlideMove" (directions {Rightward Leftward FR FL BR BL})))

        (piece "FuriousFiend" Each
            (or {
                ("SlideMove" Adjacent (between (max 3)))
                ("DoubleStep" Adjacent N)
                ("DoubleStep" Adjacent S)
                ("DoubleStep" Adjacent E)
                ("DoubleStep" Adjacent W)
                ("DoubleStep" Adjacent NE)
                ("DoubleStep" Adjacent NW)
                ("DoubleStep" Adjacent SW)
                ("DoubleStep" Adjacent SE)
                ("HopMove" Adjacent)
                (move
                    Leap
                    "KnightWalk"
                    (to
                        if:(not (is Friend (who at:(to))))
                        ("CaptureEnemyAndPromote")
                    )
                )
                }
            )
        )

        (piece "WizardStork" Each
            (or
                ("SlideMove" (directions {Forward BR BL FR FL}))
                ("StepMove" Backward)
            )
        )

        (piece "GreatElephant" Each
            (or
                ("SlideMove" (directions {Rightward Leftward BR BL}) (between (max 5)))
                ("SlideMove" (directions {FR FL Backward Forward}) (between (max 3)))
            )
        )

        (piece "FragrantElephant" Each
            (or
                ("SlideMove" (directions {FR FL}))
                ("SlideMove" (difference Adjacent (directions {FR FL})) (between (max 2)))
            )
        )

        (piece "MountainWitch" Each
            (or
                ("SlideMove" (directions {Backward BR BL FR FL}))
                ("StepMove" Forward)
            )
        )

        (piece "TeachingKing" Each
            (or {
                ("SlideMove" Adjacent)
                (move // three steps
                    Slide
                    Adjacent
                    (between
                        (exact 3)
                        if:(not (is Friend (who at:(between))))
                        (apply (remove (between)))
                    )
                    (to
                        (apply
                            if:(not (is Friend (who at:(to))))
                            (if
                                (is Enemy (who at:(to)))
                                (and
                                    (remove (to))
                                    ("Promote")
                                )
                            )
                        )
                    )
                )
                ("StepMove" Adjacent) // on step
                (move // jump to three steps.
                    Hop
                    Adjacent
                    (between
                        (exact 2)
                        if:True
                    )
                    (to
                        if:(not (is Friend (who at:(to))))
                        ("CaptureEnemyAndPromote")
                    )
                )
                (move // jump to two steps.
                    Hop
                    Adjacent
                    (between
                        (exact 1)
                        if:True
                    )
                    (to
                        if:(not (is Friend (who at:(to))))
                        ("CaptureEnemyAndPromote")
                    )
                )
                (move // jump to two steps and move to step 3.
                    Hop
                    Adjacent
                    (between
                        (exact 1)
                        if:True
                    )
                    (to
                        if:(and {
                            (not (is Friend (who at:(to))))
                            (!= (to) (ahead (to) (directions Cell from:(from) to:(to))))
                            (not (is Friend (who at:(ahead (to) (directions Cell from:(from) to:(to))))))
                        })
                        ("CaptureEnemyAndPromote")
                    )
                    (then
                        (fromTo
                            (from (last To))
                            (to (ahead (last To) (directions Cell from:(last From) to:(last To))))
                        )
                    )
                )
                (move // jump to two steps and move to step 1.
                    Hop
                    Adjacent
                    (between
                        (exact 1)
                        if:True
                    )
                    (to
                        if:(and {
                            (!= (to) (ahead (to) (directions Cell from:(to) to:(from))))
                            (not (is Friend (who at:(ahead (to) (directions Cell from:(to) to:(from))))))
                            (not (is Friend (who at:(to))))
                        })
                        ("CaptureEnemyAndPromote")
                    )
                    (then
                        (fromTo
                            (from (last To))
                            (to (ahead (last To) (directions Cell from:(last To) to:(last From))))
                        )
                    )
                )
                }
            )
        )

        (piece "SquareMover" Each
            (or
                ("SlideMove" Orthogonal)
                ("StepMove" (directions {FR FL}))
            )
        )

        (piece "Bat" Each ("SlideMove" (directions {BR BL Forward})))

        (piece "BuddhistSpirit" Each
            (or
                ("SlideMove" (directions {FR FL}) (between (max 3)))
                ("StepMove" (directions {Backward Rightward Leftward}))
            )
        )

        (piece "Emperor" Each
            (and
                (do
                    (move
                        (from)
                        (to (sites Occupied by:Enemy))
                    )
                    ifAfterwards:(not ("IsInCheck" "Emperor" Mover))
                )
                (move
                    (from)
                    (to (sites Empty))
                )
            )
        )

        (piece "Prince" Each ("StepMove" Adjacent))

        (piece "HookMover" Each
            ("SlideMove" Orthogonal ~
                (then (moveAgain))
            )
        )

        (piece "LongNosedGoblin" Each
            (or
                ("SlideMove" Diagonal ~
                    (then (moveAgain))
                )
                ("StepMove" Orthogonal)
            )
        )

        (piece "Capricorn" Each
            ("SlideMove" Diagonal ~
                (then (moveAgain))
            )
        )

        (piece "Peacock" Each
            (or
                ("SlideMove" (directions {FR FL}) ~
                    (then (moveAgain))
                )
                ("SlideMove" (directions {BR BL}) (between (max 2)))
            )
        )

        (piece "SoaringEagle" Each
            (or {
                ("StepMove" (directions {FR FL}))
                (move // jump to two steps and move to step 1.
                    Hop
                    (directions {FR FL})
                    (between
                        (exact 1)
                        if:True
                    )
                    (to
                        if:(and {
                            (!= (to) (ahead (to) (directions Cell from:(to) to:(from))))
                            (not (is Friend (who at:(ahead (to) (directions Cell from:(to) to:(from))))))
                            (not (is Friend (who at:(to))))
                        })
                        ("CaptureEnemyAndPromote")
                    )
                    (then
                        (fromTo
                            (from (last To))
                            (to (ahead (last To) (directions Cell from:(last To) to:(last From))))
                        )
                    )
                )
                ("DoubleStep" (directions {FR FL}) (directions Cell from:(last From) to:(last To)))
                ("DoubleStep" (directions {FR FL}) (directions Cell from:(last To) to:(last From)))
                ("HopMove" (directions {FR FL}))
                ("SlideMove" (difference Adjacent (directions {FR FL})))
                }
            )
        )

        (piece "HornedFalcon" Each
            (or {
                ("StepMove" Forward)
                (move // jump to two steps and move to step 1.
                    Hop
                    Forward
                    (between
                        (exact 1)
                        if:True
                    )
                    (to
                        if:(and {
                            (!= (to) (ahead (to) (directions Cell from:(to) to:(from))))
                            (not (is Friend (who at:(ahead (to) (directions Cell from:(to) to:(from))))))
                            (not (is Friend (who at:(to))))
                        })
                        ("CaptureEnemyAndPromote")
                    )
                    (then
                        (fromTo
                            (from (last To))
                            (to (ahead (last To) (directions Cell from:(last To) to:(last From))))
                        )
                    )
                )
                ("DoubleStep" Forward (directions Cell from:(last From) to:(last To)))
                ("DoubleStep" Forward (directions Cell from:(last To) to:(last From)))
                ("HopMove" Forward)
                ("SlideMove" (difference Adjacent Forward))
                }
            )
        )

        (piece "Queen" Each ("SlideMove" Adjacent))

        (piece "RushingBird" Each ("SlideMove" (difference Adjacent Backward)))

        (piece "FreeDemon" Each
            (or
                ("SlideMove" (directions {Rightward Leftward FR FL}))
                ("SlideMove" (directions {Forward Backward}) (between (max 5)))
            )
        )

        (piece "FreeDreamEater" Each
            (or
                ("SlideMove" (directions {Forwards Backward}))
                ("SlideMove" (directions {Rightward Leftward}) (between (max 5)))
            )
        )

        (piece "WaterBuffalo" Each
            (or
                ("SlideMove" (directions {FR FL BR BL Rightward Leftward}))
                ("SlideMove" (directions {Forward Backward}) (between (max 2)))
            )
        )

        (piece "FlyingOx" Each ("SlideMove" (directions {BL BR FR FL Forward Backward})))

        (piece "Soldier" Each ("SlideMove" (directions {Rightward Leftward Forward Backwards})))

        (piece "DragonKing" Each
            (or
                ("StepMove" Diagonal)
                ("SlideMove" Orthogonal)
            )
        )

        (piece "DragonHorse" Each
            (or
                ("StepMove" Orthogonal)
                ("SlideMove" Diagonal)
            )
        )

        (piece "SideChariot" Each
            (or
                ("SlideMove" Orthogonal)
                ("StepMove" (directions {BL BR}))
            )
        )

        (piece "Rook" Each ("SlideMove" Orthogonal))

        (piece "Bishop" Each ("SlideMove" Diagonal))

        (piece "Lion" Each
            (or {
                ("DoubleStep" Adjacent N)
                ("DoubleStep" Adjacent S)
                ("DoubleStep" Adjacent E)
                ("DoubleStep" Adjacent W)
                ("DoubleStep" Adjacent NE)
                ("DoubleStep" Adjacent NW)
                ("DoubleStep" Adjacent SW)
                ("DoubleStep" Adjacent SE)
                ("HopMove" Adjacent)
                (move
                    Leap
                    "KnightWalk"
                    (to
                        if:(not (is Friend (who at:(to))))
                        ("CaptureEnemyAndPromote")
                    )
                )
                }
            )
        )

        (piece "WhiteHorse" Each ("SlideMove" (directions {Forwards Backward})) )

        (piece "Whale" Each ("SlideMove" (directions {Forward Backwards})) )

        (piece "StandardBearer" Each
            (or
                ("SlideMove" Forwards)
                ("SlideMove" (difference Adjacent Forwards) (between (max 2)))
            )
        )

        (piece "VermillionSparrow" Each
            (or
                ("StepMove" BL)
                ("SlideMove" (directions {FR BR}))
            )
        )

        (piece "TurtleSnake" Each
            (or
                ("StepMove" (difference Adjacent (directions {FR BR})))
                ("SlideMove" (directions {FR BR}))
            )
        )

        (piece "BlueDragon" Each
            (or {
                ("StepMove" FL)
                ("SlideMove" (directions {Rightward FR Leftward}))
                ("SlideMove" (directions {Forward Backward}) (between (max 2)))
                }
            )
        )

        (piece "WhiteTiger" Each
            (or {
                ("StepMove" FR)
                ("SlideMove" (directions {Forward FL Backward}))
                ("SlideMove" (directions {Rightward Leftward}) (between (max 2)))
                }
            )
        )

        (piece "RightChariot" Each
            (or
                ("StepMove" Backward)
                ("SlideMove" (directions {Forward FR BR}))
            )
        )

        (piece "LeftChariot" Each
            (or
                ("StepMove" Backward)
                ("SlideMove" (directions {Forward FL BL}))
            )
        )

        (piece "SideDragon" Each
            (or
                ("StepMove" Backward)
                ("SlideMove" (directions {Forward Rightward Leftward}))
            )
        )

        (piece "Dove" Each
            (or
                ("SlideMove" Orthogonal (between (max 2)))
                ("SlideMove" Diagonal (between (max 5)))
            )
        )

        (piece "SheDevil" Each
            (or
                ("SlideMove" Diagonal (between (max 2)))
                ("SlideMove" Orthogonal (between (max 5)))
            )
        )

        (piece "GoldenBird" Each
            (or {
                ("SlideMove" (directions {Rightward Leftward}) (between (max 2)))
                ("SlideMove"  Diagonal (between (max 3)))
                ("SlideMove" (directions {Forward Backward}))
                }
            )
        )

        (piece "GreatDragon" Each
            (or {
                ("SlideMove" (directions {Forward Backward}) (between (max 2)))
                ("SlideMove"  (directions {BR BL}) (between (max 3)))
                ("SlideMove" (directions {Rightward Leftward}))
                (move // jump to two steps.
                    Hop
                    (directions {Rightward Leftward})
                    (between
                        (range 1 2)
                        if:True
                    )
                    (to
                        if:(not (is Friend (who at:(to))))
                        ("CaptureEnemyAndPromote")
                    )
                )
                }
            )
        )

        (piece "WhiteElephant" Each
            (or
                ("SlideMove" (difference Adjacent (directions {BR BL})) (between (max 2)))
                ("SlideMove" (directions {BR BL}))
            )
        )

        (piece "LionDog" Each
            (or {
                (move // three steps
                    Slide
                    Adjacent
                    (between
                        (exact 3)
                        if:(not (is Friend (who at:(between))))
                        (apply (remove (between)))
                    )
                    (to
                        (apply
                            if:(not (is Friend (who at:(to))))
                            (if
                                (is Enemy (who at:(to)))
                                (and
                                    (remove (to))
                                    ("Promote")
                                )
                            )
                        )
                    )
                )
                ("StepMove" Adjacent) // on step
                (move // jump to three steps.
                    Hop
                    Adjacent
                    (between
                        (exact 2)
                        if:True
                    )
                    (to
                        if:(not (is Friend (who at:(to))))
                        ("CaptureEnemyAndPromote")
                    )
                )
                (move // jump to two steps.
                    Hop
                    Adjacent
                    (between
                        (exact 1)
                        if:True
                    )
                    (to
                        if:(not (is Friend (who at:(to))))
                        ("CaptureEnemyAndPromote")
                    )
                )
                (move // jump to two steps and move to step 3.
                    Hop
                    Adjacent
                    (between
                        (exact 1)
                        if:True
                    )
                    (to
                        if:(and {
                            (not (is Friend (who at:(to))))
                            (!= (to) (ahead (to) (directions Cell from:(from) to:(to))))
                            (not (is Friend (who at:(ahead (to) (directions Cell from:(from) to:(to))))))
                        })
                        ("CaptureEnemyAndPromote")
                    )
                    (then
                        (fromTo
                            (from (last To))
                            (to (ahead (last To) (directions Cell from:(last From) to:(last To))))
                        )
                    )
                )
                (move // jump to two steps and move to step 1.
                    Hop
                    Adjacent
                    (between
                        (exact 1)
                        if:True
                    )
                    (to
                        if:(and {
                            (!= (to) (ahead (to) (directions Cell from:(to) to:(from))))
                            (not (is Friend (who at:(ahead (to) (directions Cell from:(to) to:(from))))))
                            (not (is Friend (who at:(to))))
                        })
                        ("CaptureEnemyAndPromote")
                    )
                    (then
                        (fromTo
                            (from (last To))
                            (to (ahead (last To) (directions Cell from:(last To) to:(last From))))
                        )
                    )
                )
                }
            )
        )

        (piece "Wrestler" Each
            (or
                ("StepMove" (directions {Rightward Leftward}))
                ("SlideMove" Diagonal (between (max 3)))
            )
        )

        (piece "GuardianOfTheGods" Each
            (or
                ("StepMove" (directions {FR FL}))
                ("SlideMove" Orthogonal (between (max 3)))
            )
        )

        (piece "BuddhistDevil" Each
            (or
                ("StepMove" (directions {Backward Rightward Leftward}))
                ("SlideMove" (directions {FR FL}) (between (max 3)))
            )
        )

        (piece "GoldenDeer" Each
            (or
                ("SlideMove" (directions {FR FL}))
                ("SlideMove" (directions {BR BL}) (between (max 2)))
            )
        )

        (piece "SilverHare" Each
            (or
                ("SlideMove" (directions {BR BL}))
                ("SlideMove" (directions {FR FL}) (between (max 2)))
            )
        )

        (piece "FierceEagle" Each
            (or
                ("StepMove" Forwards)
                ("SlideMove" (directions {BR BL Rightward Leftward}) (between (max 2)))
            )
        )

        (piece "OldKite" Each
            (or
                ("StepMove" (directions {FR FL}))
                ("SlideMove" Orthogonal (between (max 2)))
            )
        )

        (piece "ViolentOx" Each ("SlideMove" Orthogonal (between (max 2)) ))

        (piece "FlyingDragon" Each ("SlideMove" Diagonal (between (max 2)) ))

        (piece "OldRat" Each ("SlideMove" (directions {Backward FR FL}) (between (max 2)) ))

        (piece "EnchantedBadger" Each ("SlideMove" (directions {Forward Rightward Leftward}) (between (max 2)) ))

        (piece "FlyingHorse" Each
            (or
                ("StepMove" Orthogonal)
                ("SlideMove" (directions {FR FL}) (between (max 2)))
            )
        )

        (piece "PrancingStag" Each
            (or
                ("StepMove" (directions {FR FL BR BL Forward}))
                ("SlideMove" (directions {Rightward Leftward}) (between (max 2)))
            )
        )

        (piece "ViolentBear" Each
            (or
                ("StepMove" (directions {Rightward Leftward}))
                ("SlideMove" (directions {FR FL}) (between (max 2)))
            )
        )

        (piece "SideMover" Each
            (or
                ("StepMove" (directions {Forward Backward}))
                ("SlideMove" (directions {Rightward Leftward}))
            )
        )

        (piece "VerticalMover" Each
            (or
                ("StepMove" (directions {Rightward Leftward}))
                ("SlideMove" (directions {Forward Backward}))
            )
        )

        (piece "Phoenix" Each
            (or
                ("StepMove" Orthogonal)
                ("HopMove" Diagonal)
            )
        )

        (piece "Kirin" Each
            (or
                ("StepMove" Diagonal)
                ("HopMove" Orthogonal)
            )
        )

        (piece "ReverseChariot" Each ("SlideMove" (directions {Backward Forward}) ))

        (piece "PoisonSnake" Each
            (or
                ("StepMove" (directions {Rightward Leftward}))
                ("HopMove" (directions {Forward BR BL}))
            )
        )

        (piece "NorthernBarbarian" Each
            (or
                ("StepMove" (directions {Rightward Leftward BR BL}))
                ("SlideMove" (directions {FR FL}) (between (max 2)))
            )
        )

        (piece "SouthernBarbarian" Each
            (or
                ("StepMove" (directions {Rightward Leftward FR FL}))
                ("SlideMove" (directions {BR BL}) (between (max 2)))
            )
        )

        (piece "EasternBarbarian" Each
            (or
                ("StepMove" (directions {Rightward Leftward FR FL}))
                ("SlideMove" (directions {Forward Backward}) (between (max 2)))
            )
        )

        (piece "WesternBarbarian" Each
            (or
                ("StepMove" (directions {Forwards Backward}))
                ("SlideMove" (directions {Rightward Leftward}) (between (max 2)))
            )
        )

        (piece "BlindBear" Each
            (or
                ("StepMove" Diagonal)
                ("SlideMove" Backward)
            )
        )

        (piece "DrunkenElephant" Each ("StepMove" (difference Adjacent Backward) ))

        (piece "NeighborKing" Each ("StepMove" (difference Adjacent Backward) ))

        (piece "BlindTiger" Each ("StepMove" (difference Adjacent Forward) ))

        (piece "FreeTiger" Each ("SlideMove" (difference Adjacent Forward) ))

        (piece "BlindMonkey" Each ("StepMove" (directions {Rightwards Leftwards}) ))

        (piece "FerociousLeopard" Each ("StepMove" (directions {Backwards Forwards}) ))

        (piece "FreeLeopard" Each ("SlideMove" (directions {Backwards Forwards}) ))

        (piece "RecliningDragon" Each ("StepMove" (directions {Backwards Forward Rightward Leftward}) ))

        (piece "FreeDragon" Each ("SlideMove" (directions {Backwards Forward Rightward Leftward}) ))

        (piece "ChineseCock" Each ("StepMove" (directions {Backward FR FL Rightward Leftward}) ))

        (piece "OldMonkey" Each ("StepMove" (directions {Backwards FR FL}) ))

        (piece "EvilWolf" Each ("StepMove" (directions {Forwards Rightward Leftward}) ))

        (piece "FreeWolf" Each ("SlideMove" (directions {Forwards Rightward Leftward}) ))

        (piece "AngryBoar" Each ("StepMove" Orthogonal ))

        (piece "CatSword" Each ("StepMove" Diagonal ))

        (piece "FreeCat" Each ("SlideMove" Diagonal ))

        (piece "CoiledSerpent" Each ("StepMove" (directions {Forward Backwards}) ))

        (piece "FreeSerpent" Each ("SlideMove" (directions {Forward Backwards}) ))

        (piece "DarkSpirit" Each ("StepMove" (directions {Rightward FR FL BR}) ))

        (piece "Deva" Each ("StepMove" (directions {Leftward FR FL BL}) ))

        (piece "RightGeneral" Each ("StepMove" (difference Adjacent Rightward) ))

        (piece "LeftGeneral" Each ("StepMove" (difference Adjacent Leftward) ))

        (piece "GoldGeneral" Each ("StepMove" (directions {Forwards Rightward Leftward Backward}) ))

        (piece "FreeGold" Each ("SlideMove" (directions {Forwards Rightward Leftward Backward})  ))

        (piece "SilverGeneral" Each ("StepMove" (directions {Forwards BR BL}) ))

        (piece "FreeSilver" Each ("SlideMove" (directions {Forwards BR BL}) ))

        (piece "CopperGeneral" Each ("StepMove" (directions {Forwards Backward}) ))

        (piece "FreeCopper" Each ("SlideMove" (directions {Forwards Backward})  ))

        (piece "TileGeneral" Each ("StepMove" (directions {FR FL Backward}) ))

        (piece "FreeTile" Each ("SlideMove" (directions {FR FL Backward})  ))

        (piece "IronGeneral" Each ("StepMove" Forwards ))

        (piece "FreeIron" Each ("SlideMove" Forwards ))

        (piece "WoodGeneral" Each ("SlideMove" (directions {FR FL}) (between (max 2)) ))

        (piece "StoneGeneral" Each ("StepMove" (directions {FR FL}) ))

        (piece "FreeStone" Each ("SlideMove" (directions {FR FL})  ))

        (piece "EarthGeneral" Each ("StepMove" (directions {Forward Backward}) ))

        (piece "GoBetween" Each ("StepMove" (directions {Forward Backward}) ))

        (piece "FreeEarth" Each ("SlideMove" (directions {Forward Backward}) ))

        (piece "FreeGoer" Each ("SlideMove" (directions {Forward Backward}) ))

        (piece "Knight" Each ("ForwardKnightMove"))

        (piece "HowlingDog" Each
            (or
                ("StepMove" Backward)
                ("SlideMove" Forward)
            )
        )

        (piece "Donkey" Each
            (or
                ("StepMove" Orthogonal)
                ("HopMove" (directions {Forward Backward}))
            )
        )

        (piece "RamsHeadSoldier" Each ("SlideMove" (directions {FR FL}) ))

        (piece "Lance" Each ("SlideMove" Forward ))

        (piece "Pawn" Each ("StepMove" Forward))

        (map "Promoted" {
            (pair (id "Prince" P1) (id "Emperor" P1)) (pair (id "Prince" P2) (id "Emperor" P2))
            (pair (id "HookMover" P1) (id "GoldGeneral" P1)) (pair (id "HookMover" P2) (id "GoldGeneral" P2))
            (pair (id "LongNosedGoblin" P1) (id "GoldGeneral" P1)) (pair (id "LongNosedGoblin" P2) (id "GoldGeneral" P2))
            (pair (id "Capricorn" P1) (id "GoldGeneral" P1)) (pair (id "Capricorn" P2) (id "GoldGeneral" P2))
            (pair (id "Peacock" P1) (id "GoldGeneral" P1)) (pair (id "Peacock" P2) (id "GoldGeneral" P2))
            (pair (id "SoaringEagle" P1) (id "GoldGeneral" P1)) (pair (id "SoaringEagle" P2) (id "GoldGeneral" P2))
            (pair (id "HornedFalcon" P1) (id "GoldGeneral" P1)) (pair (id "HornedFalcon" P2) (id "GoldGeneral" P2))
            (pair (id "RushingBird" P1) (id "FreeDemon" P1)) (pair (id "RushingBird" P2) (id "FreeDemon" P2))
            (pair (id "FreeDemon" P1) (id "GoldGeneral" P1)) (pair (id "FreeDemon" P2) (id "GoldGeneral" P2))
            (pair (id "FreeDreamEater" P1) (id "GoldGeneral" P1)) (pair (id "FreeDreamEater" P2) (id "GoldGeneral" P2))
            (pair (id "WaterBuffalo" P1) (id "FreeDreamEater" P1)) (pair (id "WaterBuffalo" P2) (id "FreeDreamEater" P2))
            (pair (id "FlyingOx" P1) (id "GoldGeneral" P1)) (pair (id "FlyingOx" P2) (id "GoldGeneral" P2))
            (pair (id "Soldier" P1) (id "GoldGeneral" P1)) (pair (id "Soldier" P2) (id "GoldGeneral" P2))
            (pair (id "Lion" P1) (id "FuriousFiend" P1)) (pair (id "Lion" P2) (id "FuriousFiend" P2))
            (pair (id "SideChariot" P1) (id "GoldGeneral" P1)) (pair (id "SideChariot" P2) (id "GoldGeneral" P2))
            (pair (id "Rook" P1) (id "GoldGeneral" P1)) (pair (id "Rook" P2) (id "GoldGeneral" P2))
            (pair (id "Bishop" P1) (id "GoldGeneral" P1)) (pair (id "Bishop" P2) (id "GoldGeneral" P2))
            (pair (id "WhiteHorse" P1) (id "GoldGeneral" P1)) (pair (id "WhiteHorse" P2) (id "GoldGeneral" P2))
            (pair (id "Whale" P1) (id "GoldGeneral" P1)) (pair (id "Whale" P2) (id "GoldGeneral" P2))
            (pair (id "StandardBearer" P1) (id "GoldGeneral" P1)) (pair (id "StandardBearer" P2) (id "GoldGeneral" P2))
            (pair (id "VermillionSparrow" P1) (id "GoldGeneral" P1)) (pair (id "VermillionSparrow" P2) (id "GoldGeneral" P2))
            (pair (id "TurtleSnake" P1) (id "GoldGeneral" P1)) (pair (id "TurtleSnake" P2) (id "GoldGeneral" P2))
            (pair (id "BlueDragon" P1) (id "GoldGeneral" P1)) (pair (id "BlueDragon" P2) (id "GoldGeneral" P2))
            (pair (id "WhiteTiger" P1) (id "GoldGeneral" P1)) (pair (id "WhiteTiger" P2) (id "GoldGeneral" P2))
            (pair (id "RightChariot" P1) (id "GoldGeneral" P1)) (pair (id "RightChariot" P2) (id "GoldGeneral" P2))
            (pair (id "LeftChariot" P1) (id "GoldGeneral" P1)) (pair (id "LeftChariot" P2) (id "GoldGeneral" P2))
            (pair (id "SideDragon" P1) (id "GoldGeneral" P1)) (pair (id "SideDragon" P2) (id "GoldGeneral" P2))
            (pair (id "Dove" P1) (id "GoldGeneral" P1)) (pair (id "Dove" P2) (id "GoldGeneral" P2))
            (pair (id "SheDevil" P1) (id "GoldGeneral" P1)) (pair (id "SheDevil" P2) (id "GoldGeneral" P2))
            (pair (id "GoldenBird" P1) (id "GoldGeneral" P1)) (pair (id "GoldenBird" P2) (id "GoldGeneral" P2))
            (pair (id "GreatDragon" P1) (id "GoldGeneral" P1)) (pair (id "GreatDragon" P2) (id "GoldGeneral" P2))
            (pair (id "WhiteElephant" P1) (id "GoldGeneral" P1)) (pair (id "WhiteElephant" P2) (id "GoldGeneral" P2))
            (pair (id "LionDog" P1) (id "GreatElephant" P1)) (pair (id "LionDog" P2) (id "GreatElephant" P2))
            (pair (id "Wrestler" P1) (id "GoldGeneral" P1)) (pair (id "Wrestler" P2) (id "GoldGeneral" P2))
            (pair (id "GuardianOfTheGods" P1) (id "GoldGeneral" P1)) (pair (id "GuardianOfTheGods" P2) (id "GoldGeneral" P2))
            (pair (id "BuddhistDevil" P1) (id "GoldGeneral" P1)) (pair (id "BuddhistDevil" P2) (id "GoldGeneral" P2))
            (pair (id "GoldenDeer" P1) (id "GoldGeneral" P1)) (pair (id "GoldenDeer" P2) (id "GoldGeneral" P2))
            (pair (id "SilverHare" P1) (id "GoldGeneral" P1)) (pair (id "SilverHare" P2) (id "GoldGeneral" P2))
            (pair (id "FierceEagle" P1) (id "GoldGeneral" P1)) (pair (id "FierceEagle" P2) (id "GoldGeneral" P2))
            (pair (id "OldKite" P1) (id "LongNosedGoblin" P1)) (pair (id "OldKite" P2) (id "LongNosedGoblin" P2))
            (pair (id "ViolentOx" P1) (id "GoldGeneral" P1)) (pair (id "ViolentOx" P2) (id "GoldGeneral" P2))
            (pair (id "FlyingDragon" P1) (id "GoldGeneral" P1)) (pair (id "FlyingDragon" P2) (id "GoldGeneral" P2))
            (pair (id "OldRat" P1) (id "Bat" P1)) (pair (id "OldRat" P2) (id "Bat" P2))
            (pair (id "EnchantedBadger" P1) (id "Dove" P1)) (pair (id "EnchantedBadger" P2) (id "Dove" P2))
            (pair (id "FlyingHorse" P1) (id "Queen" P1)) (pair (id "FlyingHorse" P2) (id "Queen" P2))
            (pair (id "PrancingStag" P1) (id "SquareMover" P1)) (pair (id "PrancingStag" P2) (id "SquareMover" P2))
            (pair (id "ViolentBear" P1) (id "GoldGeneral" P1)) (pair (id "ViolentBear" P2) (id "GoldGeneral" P2))
            (pair (id "SideMover" P1) (id "GoldGeneral" P1)) (pair (id "SideMover" P2) (id "GoldGeneral" P2))
            (pair (id "VerticalMover" P1) (id "GoldGeneral" P1)) (pair (id "VerticalMover" P2) (id "GoldGeneral" P2))
            (pair (id "ReverseChariot" P1) (id "GoldGeneral" P1)) (pair (id "ReverseChariot" P2) (id "GoldGeneral" P2))
            (pair (id "Phoenix" P1) (id "GoldenBird" P1)) (pair (id "Phoenix" P2) (id "GoldenBird" P2))
            (pair (id "Kirin" P1) (id "GreatDragon" P1)) (pair (id "Kirin" P2) (id "GreatDragon" P2))
            (pair (id "PoisonousSnake" P1) (id "HookMover" P1)) (pair (id "PoisonousSnake" P2) (id "HookMover" P2))
            (pair (id "NorthernBarbarian" P1) (id "FragrantElephant" P1)) (pair (id "NorthernBarbarian" P2) (id "FragrantElephant" P2))
            (pair (id "SouthernBarbarian" P1) (id "WhiteElephant" P1)) (pair (id "SouthernBarbarian" P2) (id "WhiteElephant" P2))
            (pair (id "EasternBarbarian" P1) (id "Lion" P1)) (pair (id "EasternBarbarian" P2) (id "Lion" P2))
            (pair (id "WesternBarbarian" P1) (id "LionDog" P1)) (pair (id "WesternBarbarian" P2) (id "LionDog" P2))
            (pair (id "BlindBear" P1) (id "FreeBear" P1)) (pair (id "BlindBear" P2) (id "FreeBear" P2))
            (pair (id "DrunkenElephant" P1) (id "Prince" P1)) (pair (id "DrunkenElephant" P2) (id "Prince" P2))
            (pair (id "NeighborKing" P1) (id "StandardBearer" P1)) (pair (id "StandardBearer" P2) (id "StandardBearer" P2))
            (pair (id "BlindTiger" P1) (id "FreeTiger" P1)) (pair (id "BlindTiger" P2) (id "FreeTiger" P2))
            (pair (id "BlindMonkey" P1) (id "GoldGeneral" P1)) (pair (id "BlindMonkey" P2) (id "GoldGeneral" P2))
            (pair (id "FerociousLeopard" P1) (id "FreeLeopard" P1)) (pair (id "FerociousLeopard" P2) (id "FreeLeopard" P2))
            (pair (id "RecliningDragon" P1) (id "FreeDragon" P1)) (pair (id "RecliningDragon" P2) (id "FreeDragon" P2))
            (pair (id "ChineseCock" P1) (id "WizardStork" P1)) (pair (id "ChineseCock" P2) (id "WizardStork" P2))
            (pair (id "OldMonkey" P1) (id "MountainWitch" P1)) (pair (id "OldMonkey" P2) (id "MountainWitch" P2))
            (pair (id "EvilWolf" P1) (id "FreeWolf" P1)) (pair (id "EvilWolf" P2) (id "FreeWolf" P2))
            (pair (id "AngryBoar" P1) (id "FreeBoar" P1)) (pair (id "AngryBoar" P2) (id "FreeBoar" P2))
            (pair (id "CatSword" P1) (id "FreeCat" P1)) (pair (id "CatSword" P2) (id "FreeCat" P2))
            (pair (id "CoiledSerpent" P1) (id "FreeSerpent" P1)) (pair (id "CoiledSerpent" P2) (id "FreeSerpent" P2))
            (pair (id "Deva" P1) (id "TeachingKing" P1)) (pair (id "Deva" P2) (id "TeachingKing" P2))
            (pair (id "DarkSpirit" P1) (id "BuddhistSpirit" P1)) (pair (id "DarkSpirit" P2) (id "BuddhistSpirit" P2))
            (pair (id "RightGeneral" P1) (id "GoldGeneral" P1)) (pair (id "RightGeneral" P2) (id "GoldGeneral" P2))
            (pair (id "LeftGeneral" P1) (id "GoldGeneral" P1)) (pair (id "LeftGeneral" P2) (id "GoldGeneral" P2))
            (pair (id "GoldGeneral" P1) (id "FreeGold" P1)) (pair (id "GoldGeneral" P2) (id "FreeGold" P2))
            (pair (id "SilverGeneral" P1) (id "FreeSilver" P1)) (pair (id "SilverGeneral" P2) (id "FreeSilver" P2))
            (pair (id "CopperGeneral" P1) (id "FreeCopper" P1)) (pair (id "CopperGeneral" P2) (id "FreeCopper" P2))
            (pair (id "TileGeneral" P1) (id "FreeTile" P1)) (pair (id "TileGeneral" P2) (id "FreeTile" P2))
            (pair (id "IronGeneral" P1) (id "FreeIron" P1)) (pair (id "IronGeneral" P2) (id "FreeIron" P2))
            (pair (id "WoodGeneral" P1) (id "GoldGeneral" P1)) (pair (id "WoodGeneral" P2) (id "GoldGeneral" P2))
            (pair (id "StoneGeneral" P1) (id "FreeStone" P1)) (pair (id "StoneGeneral" P2) (id "FreeStone" P2))
            (pair (id "EarthGeneral" P1) (id "FreeEarth" P1)) (pair (id "EarthGeneral" P2) (id "FreeEarth" P2))
            (pair (id "GoBetween" P1) (id "GoldGeneral" P1)) (pair (id "GoBetween" P2) (id "GoldGeneral" P2))
            (pair (id "Knight" P1) (id "GoldGeneral" P1)) (pair (id "Knight" P2) (id "GoldGeneral" P2))
            (pair (id "HowlingDog" P1) (id "GoldGeneral" P1)) (pair (id "HowlingDog" P2) (id "GoldGeneral" P2))
            (pair (id "Donkey" P1) (id "GoldGeneral" P1)) (pair (id "Donkey" P2) (id "GoldGeneral" P2))
            (pair (id "RamsHeadSoldier" P1) (id "GoldGeneral" P1)) (pair (id "RamsHeadSoldier" P2) (id "GoldGeneral" P2))
            (pair (id "Lance" P1) (id "GoldGeneral" P1)) (pair (id "Lance" P2) (id "GoldGeneral" P2))
            (pair (id "Pawn" P1) (id "GoldGeneral" P1)) (pair (id "Pawn" P2) (id "GoldGeneral" P2))
        })
    })
    (rules
        (start {
            // Row 1 & 25
            (place "Lance1" (sites {"A1" "Y1"})) (place "Lance2" (sites {"A25" "Y25"}))
            (place "TurtleSnake1" coord:"B1") (place "TurtleSnake2" coord:"X25")
            (place "WhiteTiger1" coord:"X1") (place "WhiteTiger2" coord:"B25")
            (place "Whale1" (sites {"C1" "W1"})) (place "Whale2" (sites {"C25" "W25"}))
            (place "FlyingDragon1" (sites {"D1" "V1"})) (place "FlyingDragon2" (sites {"D25" "V25"}))
            (place "LongNosedGoblin1" (sites {"E1" "U1"})) (place "LongNosedGoblin2" (sites {"E25" "U25"}))
            (place "Dove1" (sites {"F1" "T1"})) (place "Dove2" (sites {"F25" "T25"}))
            (place "Rook1" (sites {"G1" "S1"})) (place "Rook2" (sites {"G25" "S25"}))
            (place "DragonHorse1" (sites {"H1" "R1"})) (place "DragonHorse2" (sites {"H25" "R25"}))
            (place "DragonKing1" (sites {"I1" "Q1"})) (place "DragonKing2" (sites {"I25" "Q25"}))
            (place "Queen1" (sites {"J1" "P1"})) (place "Queen2" (sites {"J25" "P25"}))
            (place "GoldGeneral1" (sites {"K1" "O1"})) (place "GoldGeneral2" (sites {"K25" "O25"}))
            (place "Deva1" coord:"L1") (place "Deva2" coord:"N25")
            (place "DarkSpirit1" coord:"N1") (place "DarkSpirit2" coord:"L25")
            (place "Emperor1" coord:"M1") (place "Emperor2" coord:"M25")

            // Row 2 & 24
            (place "ReverseChariot1" (sites {"A2" "Y2"})) (place "ReverseChariot2" (sites {"A24" "Y24"}))
            (place "SideDragon1" (sites {"B2" "X2"})) (place "SideDragon2" (sites {"B24" "X24"}))
            (place "SoaringEagle1" (sites {"C2" "W2"})) (place "SoaringEagle2" (sites {"C24" "W24"}))
            (place "Knight1" (sites {"D2" "V2"})) (place "Knight2" (sites {"D24" "V24"}))
            (place "PoisonSnake1" (sites {"E2" "U2"})) (place "PoisonSnake2" (sites {"E24" "U24"}))
            (place "FreeDreamEater1" (sites {"F2" "T2"})) (place "FreeDreamEater2" (sites {"F24" "T24"}))
            (place "Bishop1" (sites {"G2" "S2"})) (place "Bishop2" (sites {"G24" "S24"}))
            (place "FierceEagle1" (sites {"H2" "R2"})) (place "FierceEagle2" (sites {"H24" "R24"}))
            (place "WhiteElephant1" (sites {"I2" "Q2"})) (place "WhiteElephant2" (sites {"I24" "Q24"}))
            (place "FreeDemon1" (sites {"J2" "P2"})) (place "FreeDemon2" (sites {"J24" "P24"}))
            (place "SilverGeneral1" (sites {"K2" "O2"})) (place "SilverGeneral2" (sites {"K24" "O24"}))
            (place "LeftGeneral1" coord:"L2") (place "LeftGeneral2" coord:"N24")
            (place "RightGeneral1" coord:"N2") (place "RightGeneral2" coord:"L24")
            (place "Prince1" coord:"M2") (place "Prince2" coord:"M24")

            // Row 3 & 23
            (place "SideChariot1" (sites {"A3" "Y3"})) (place "SideChariot2" (sites {"A23" "Y23"}))
            (place "WhiteHorse1" (sites {"B3" "X3"})) (place "WhiteHorse2" (sites {"B23" "X23"}))
            (place "RamsHeadSoldier1" (sites {"C3" "W3"})) (place "RamsHeadSoldier2" (sites {"C23" "W23"}))
            (place "ViolentOx1" (sites {"D3" "V3"})) (place "ViolentOx2" (sites {"D23" "V23"}))
            (place "CatSword1" (sites {"E3" "U3"})) (place "CatSword2" (sites {"E23" "U23"}))
            (place "BlindBear1" (sites {"F3" "T3"})) (place "BlindBear2" (sites {"F23" "T23"}))
            (place "SilverHare1" (sites {"G3" "S3"})) (place "SilverHare2" (sites {"G23" "S23"}))
            (place "GoldenDeer1" (sites {"H3" "R3"})) (place "GoldenDeer2" (sites {"H23" "R23"}))
            (place "BlindMonkey1" (sites {"I3" "Q3"})) (place "BlindMonkey2" (sites {"I23" "Q23"}))
            (place "BlindTiger1" (sites {"J3" "P3"})) (place "BlindTiger2" (sites {"J23" "P23"}))
            (place "BuddhistDevil1" coord:"K3") (place "BuddhistDevil2" coord:"O23")
            (place "SheDevil1" coord:"O3") (place "SheDevil2" coord:"K23")
            (place "Wrestler1" coord:"L3") (place "Wrestler2" coord:"N23")
            (place "GuardianOfTheGods1" coord:"N3") (place "GuardianOfTheGods2" coord:"L23")
            (place "NeighborKing1" coord:"M3") (place "NeighborKing2" coord:"M23")

            // Row 4 & 22
            (place "Soldier1" (sites {"A4" "Y4"})) (place "Soldier2" (sites {"A22" "Y22"}))
            (place "WaterBuffalo1" (sites {"B4" "X4"})) (place "WaterBuffalo2" (sites {"B22" "X22"}))
            (place "FerociousLeopard1" (sites {"C4" "W4"})) (place "FerociousLeopard2" (sites {"C22" "W22"}))
            (place "WesternBarbarian1" coord:"D4") (place "WesternBarbarian2" coord:"V22")
            (place "NorthernBarbarian1" coord:"V4") (place "NorthernBarbarian2" coord:"D22")
            (place "EasternBarbarian1" coord:"E4") (place "EasternBarbarian2" coord:"U22")
            (place "SouthernBarbarian1" coord:"U4") (place "SouthernBarbarian2" coord:"E22")
            (place "ChineseCock1" (sites {"F4" "T4"})) (place "ChineseCock2" (sites {"F22" "T22"}))
            (place "HornedFalcon1" (sites {"G4" "S4"})) (place "HornedFalcon2" (sites {"G22" "S22"}))
            (place "OldMonkey1" (sites {"H4" "R4"})) (place "OldMonkey2" (sites {"H22" "R22"}))
            (place "OldKite1" coord:"I4") (place "OldKite2" coord:"Q22")
            (place "RushingBird1" coord:"Q4") (place "RushingBird2" coord:"I22")
            (place "Peacock1" (sites {"J4" "P4"})) (place "Peacock2" (sites {"J22" "P22"}))
            (place "GreatDragon1" coord:"K4") (place "GreatDragon2" coord:"O22")
            (place "GoldenBird1" coord:"O4") (place "GoldenBird2" coord:"K22")
            (place "Kirin1" coord:"L4") (place "Kirin2" coord:"N22")
            (place "Phoenix1" coord:"N4") (place "Phoenix2" coord:"L22")
            (place "Lion1" coord:"M4") (place "Lion2" coord:"M22")

            // Row 5 & 21
            (place "LeftChariot1" coord:"A5") (place "LeftChariot2" coord:"Y21")
            (place "RightChariot1" coord:"Y5") (place "RightChariot2" coord:"A21")
            (place "BlueDragon1" coord:"B5") (place "BlueDragon2" coord:"X21")
            (place "VermillionSparrow1" coord:"X5") (place "VermillionSparrow2" coord:"B21")
            (place "WoodGeneral1" (sites {"C5" "W5"})) (place "WoodGeneral2" (sites {"C21" "W21"}))
            (place "EarthGeneral1" (sites {"D5" "V5"})) (place "EarthGeneral2" (sites {"D21" "V21"}))
            (place "StoneGeneral1" (sites {"E5" "U5"})) (place "StoneGeneral2" (sites {"E21" "U21"}))
            (place "TileGeneral1" (sites {"F5" "T5"})) (place "TileGeneral2" (sites {"F21" "T21"}))
            (place "IronGeneral1" (sites {"G5" "S5"})) (place "IronGeneral2" (sites {"G21" "S21"}))
            (place "CopperGeneral1" (sites {"H5" "R5"})) (place "CopperGeneral2" (sites {"H21" "R21"}))
            (place "OldRat1" (sites {"I5" "Q5"})) (place "OldRat2" (sites {"I21" "Q21"}))
            (place "CoiledSerpent1" (sites {"J5" "P5"})) (place "CoiledSerpent2" (sites {"J21" "P21"}))
            (place "RecliningDragon1" (sites {"K5" "O5"})) (place "RecliningDragon2" (sites {"K21" "O21"}))
            (place "Capricorn1" coord:"L5") (place "Capricorn2" coord:"N21")
            (place "HookMover1" coord:"N5") (place "HookMover2" coord:"L21")
            (place "DrunkenElephant1" coord:"M5") (place "DrunkenElephant2" coord:"M21")

            // Row 6 & 20
            (place "HowlingDog1" (sites {"A6" "Y6"})) (place "HowlingDog2" (sites {"A20" "Y20"}))
            (place "FlyingHorse1" (sites {"B6" "X6"})) (place "FlyingHorse2" (sites {"B20" "X20"}))
            (place "EnchantedBadger1" (sites {"C6" "W6"})) (place "EnchantedBadger2" (sites {"C20" "W20"}))
            (place "Donkey1" (sites {"D6" "V6"})) (place "Donkey2" (sites {"D20" "V20"}))
            (place "FlyingOx1" (sites {"E6" "U6"})) (place "FlyingOx2" (sites {"E20" "U20"}))
            (place "SideMover1" (sites {"F6" "T6"})) (place "SideMover2" (sites {"F20" "T20"}))
            (place "VerticalMover1" (sites {"G6" "S6"})) (place "VerticalMover2" (sites {"G20" "S20"}))
            (place "ViolentBear1" (sites {"H6" "R6"})) (place "ViolentBear2" (sites {"H20" "R20"}))
            (place "StandardBearer1" (sites {"I6" "Q6"})) (place "StandardBearer2" (sites {"I20" "Q20"}))
            (place "PrancingStag1" (sites {"J6" "P6"})) (place "PrancingStag2" (sites {"J20" "P20"}))
            (place "AngryBoar1" (sites {"K6" "O6"})) (place "AngryBoar2" (sites {"K20" "O20"}))
            (place "EvilWolf1" (sites {"L6" "N6"})) (place "EvilWolf2" (sites {"L20" "N20"}))
            (place "LionDog1" coord:"M6") (place "LionDog2" coord:"M20")

            // Row 7 & 19
            (place "Pawn1" (sites Row 6)) (place "Pawn2" (sites Row 18))

            // Row 8 & 18
            (place "GoBetween1" (sites {"H8" "R8"})) (place "GoBetween2" (sites {"H18" "R18"}))
        })

        (play
            (if ("SameTurn")
                (if (is In (what at:(last To)) (sites {(id "Peacock" Mover) (id "Capricorn" Mover) (id "LongNosedGoblin" Mover) (id "HookMover" Mover)}))
                    (or
                        (move Pass)
                        ("SlideMove"
                            (from (last To))
                            (difference
                                (difference (if (= (what at:(last To)) (id "HookMover" Mover)) Orthogonal Diagonal)
                                    (directions Cell from:(last From) to:(last To))
                                )
                                (directions Cell from:(last To) to:(last From))
                            )
                        )
                    )
                )
                (forEach Piece)
            )
        )

        (end
            (if
                (and {
                    (not (is Mover Next))
                    (= (where "Emperor" Next) Off)
                    (= (where "Prince" Next) Off)
                })
                (result Mover Win)
            )
        )
    )
)

//------------------------------------------------------------------------------

(option "Variant" <Variant> args:{ <type> }
    {
    (item "Wikipedia"   <>       "The rules are describing from wikipedia.")
})

//------------------------------------------------------------------------------

(rulesets {

    (ruleset "Ruleset/Wikipedia (Suggested)" {
        "Variant/Wikipedia"
    })*

    (ruleset "Ruleset/Historical Information (Incomplete)" {

    })

})

//------------------------------------------------------------------------------

(metadata

    (info
        {
        (description "Tai Shogi is a large Shogi variant known from the Edo Period in Japan.")
        (useFor "Ruleset/Historical Information (Incomplete)" (rules "25x25 board. 354 pieces."))
        (useFor "Ruleset/Historical Information (Incomplete)" (source "DLP evidence."))
        (useFor "Ruleset/Wikipedia (Suggested)" (rules "Detailed rules at Wikipedia."))
        (useFor "Ruleset/Wikipedia (Suggested)" (source "<a href=\"https://en.wikipedia.org/wiki/Tai_shogi\" target=\"_blank\" class=\"style1\" style=\"color: #0000EE\" />Wikipedia</a>"))
        (source "Banaschak 2001: 144.")
        (version "1.3.0")
        (classification "board/war/replacement/checkmate/shogi")
        (credit "Eric Piette")
        }
    )

    (graphics {
        (player Colour P1 (colour White))
        (player Colour P2 (colour White))
        (board Style Shogi)
        (piece Style ExtendedShogi)
        (piece Rotate P2 degrees:180)
    })

    (ai
        "Tai Shogi_ai"
    )
)
