(define "RememberPieceHasMoved"
    (then
        (if
            (= (state at:(last To)) 1)
            ("PieceHasMoved" (last To))
        )
    )
)

(define "PieceHasMoved"
    (set State at:#1 0)
)

(define "CaptureToPiece"
    (apply
        (if (is Enemy (who at:(to)))
            (remove
                (to)
            )
        )
    )
)

(define "CaptureForwardDiagonal"
    (move
        Step
        (directions {FR FL})
        (to
            if:(is Enemy (who at:(to)))
            (apply
                (remove
                    (to)
                )
            )
        )
    )
)

(define "NextCanNotMove"
    (not (can Move (do (forEach Piece Next) ifAfterwards:(not ("IsInCheck" "King" Next)))) )
)

(define "DoubleStep"
    (move
        Slide
        Forward
        (between (exact 2) if:(is Empty (between)))
        (to if:(is Empty (to)))
    )
)

//------------------------------------------------------------------------------

(game "Schachzabel"
    (players {(player N) (player S)})
    (equipment {
        (board (square 8))
        (piece "King" Each
            (or
                (move
                    Step
                    (to
                        if:(not (is Friend (who at:(to))))
                        "CaptureToPiece"
                    )
                )
                (if (= 1 (state at:(from)))
                    (move
                        Hop
                        (between
                            (range 1 3)
                            if:(not (is Enemy (who at:(between))))
                        )
                        (to
                            if:(is Empty (to))
                        )
                    )
                )
                ("RememberPieceHasMoved")
            )
        )
        (piece "Rook" Each
            (move
                Slide
                Orthogonal
                (to
                    if:(is Enemy (who at:(to)))
                    "CaptureToPiece"
                )
            )
        )
        (piece "Bishop" Each
            (move
                Hop
                Diagonal
                (between if:True)
                (to
                    if:(not (is Friend (who at:(to))))
                    "CaptureToPiece"
                )
            )
        )
        (piece "Knight" Each
            (move
                Leap
                "KnightWalk"
                (to
                    if:(not (is Friend (who at:(to))))
                    "CaptureToPiece"
                )
            )
        )
        (piece "Queen" Each
            (or
                (move
                    Step
                    Diagonal
                    (to
                        if:(not (is Friend (who at:(to))))
                        "CaptureToPiece"
                    )
                    "RememberPieceHasMoved"
                )
                (if (= 1 (state at:(from)))
                    (move
                        Hop
                        Diagonal
                        (between if:True)
                        (to
                            if:(is Empty (to))
                        )
                    )
                )
                ("RememberPieceHasMoved")
            )
        )
        (piece "Pawn" Each
            (or {
                (move Step
                    Forward
                    (to if:(is Empty (to)))
                )
                "CaptureForwardDiagonal"
                (if (and {
                        (is In (from) (sites Start (piece (what at:(from)))))
                        (= 1 (state at:(from)))
                        (= 32 (count Sites in:(sites Occupied by:All)))
                    })
                    "DoubleStep"
                )
                }
                (then
                    (if (is In (last To) (sites Mover "Promotion"))
                        (and
                            (promote (last To) (piece (id "Queen" Mover)))
                            (set State at:(last To) 1)
                        )
                    )
                )
            )
        )
        (regions "Promotion" P1 (sites Top) )
        (regions "Promotion" P2 (sites Bottom))
    })
    (rules
        (start {
            (place "Pawn1" (sites {"A2" "D2" "E2" "H2"}) state:1) (place "Pawn2" (sites {"A7" "D7" "E7" "H7"}) state:1)
            (place "Pawn1" (sites {"B2" "C2" "F2" "G2"}))  (place "Pawn2" (sites {"B7" "C7" "F7" "G7"}))
            (place "Rook1" {"A1" "H1"}) (place "Knight1" {"B1" "G1"}) (place "Bishop1" {"C1" "F1"}) (place "Queen1" coord:"D1" state:1) (place "King1" coord:"E1" state:1)
            (place "Rook2" {"A8" "H8"}) (place "Knight2" {"B8" "G8"}) (place "Bishop2" {"C8" "F8"}) (place "Queen2" coord:"D8" state:1) (place "King2" coord:"E8" state:1)
        })

        (play
            (do (forEach Piece)
                ifAfterwards:(not ("IsInCheck" "King" Mover))
                (then
                    (if (and (= 1 (state at:(where "King" Next))) ("IsInCheck" "King" Next))
                        ("PieceHasMoved" (where "King" Next))
                    )
                )
            )
        )

        (end
            (if (and
                    ("IsInCheck" "King" Next)
                    ("NextCanNotMove")
                )
                (result Mover Win)
            )
        )
    )
)

//------------------------------------------------------------------------------

(metadata

    (info
        {
        (description "Schachzabel, a form of Chess, was played in early modern Germany with these rules.")
        (rules "8x8 board. The pieces move as follows, with the number per player: 1 x King (king): moves one space orthogonally or diagonally. The King may leap one, two, or three squares on its first move if it has not yet been checked and does not hop over an opponent's piece. The King cannot make this leap over an opponent's piece. A capture cannot be made with this special first move. 1 x Queen: One square diagonally. On its first move, the Queen may jump diagonally two squares. The Queen cannot capture when making this move. 2 x Rook: Any number of spaces orthogonally. 2 x Bishop: Two squares diagonally, jumping over the first. Cannot capture another Bishop. 2 x Knight: Moves as a chess knight. 8 x Pawn: Moves one space forward orthogonally; one space forward diagonally to capture. The Rook's, King's and Queen's Pawns may move two spaces on its first move. The King's and Queen's Pawns are restricted in having this ability only if no piece on the board has been captured. Promoted to Queen when reaching the eighth rank, and may make the Queen's leap on its first move after being promoted, but cannot capture with this move. No castling. An opponent's piece is captured by moving a player's own piece onto a space occupied by the opponent's piece. When a King can be captured on the next turn by an opponent's piece, it is in check. The King must not be in check at the end of the player's turn. If this is not possible, it is checkmate and the opponent wins.
        ")
        (source "Murray 1913: 463-464.")
        (version "1.3.0")
        (classification "board/war/replacement/checkmate/chess")
        (credit "Eric Piette")
        (origin  "This game was played in Germany, around 1536.")
        }
    )

    (graphics {
        (board Style Chess)
    })

)
