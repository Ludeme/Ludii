(define "NextCanNotMove"
    (not (can Move (do (forEach Piece Next) ifAfterwards:(not ("IsInCheck" "King" Next (forEach Piece))))))
)

(define "HasNeverMoved"
    (= (state at:(from)) 1)
)

(define "PieceHasMoved"
    (set State at:(last To) 0)
)

(define "RememberPieceHasMoved"
    (then
        (if
            (= (state at:(last To)) 1)
            "PieceHasMoved"
        )
    )
)

(define "CaptureEnemyPiece"
    (apply
        (if (is Enemy (who at:(to)))
            (remove
                (to)
            )
        )
    )
)

(define "CaptureForwardDiagonal"
    (move
        Step
        (directions {FR FL})
        (to
            if:(is Enemy (who at:(to)))
            (apply (remove (to)))
        )
    )
)

(define "PromotedPiece"
    (if (is In (last To) (sites Corners))
        (id "Rook" Mover)
        (if (or (= (column of:(last To)) 1) (= (column of:(last To)) 10))
            (id "Lion" Mover)
            (if (or (= (column of:(last To)) 2) (= (column of:(last To)) 9))
                (id "Rhino" Mover)
                (if (or (= (column of:(last To)) 3) (= (column of:(last To)) 8))
                    (id "Giraffe" Mover)
                    (if (or (= (column of:(last To)) 4) (= (column of:(last To)) 7))
                        (id "Crocodile" Mover)
                        (id "Eagle" Mover)
                    )
                )
            )
        )
    )
)

(define "RhinoMovement"
    (sites To
        (if (!= (ahead (from) #1) Off)
            (slide
                (from (ahead (from) #1))
                #2
                (to
                    if:(is Enemy (who at:(to)))
                )
            )
        )
    )
)

(define "EagleMovement"
    (sites To
        (if (and (!= (ahead (from) #1) Off) (not (is Friend (who at:(ahead (from) #1)))))
            (or
                (fromTo (from) (to (ahead (from) #1)))
                (slide
                    (from (ahead (from) #1))
                    #2
                    (to
                        if:(is Enemy (who at:(to)))
                    )
                )
            )
        )
    )
)

(define "LeapMove"
    (move
        Leap
        #1
        (to
            if:(not (is Friend (who at:(to))))
            "CaptureEnemyPiece"
        )
    )
)

(define "SlideMove"
    (move
        Slide
        #1
        (to
            if:(is Enemy (who at:(to)))
            "CaptureEnemyPiece"
        )
    )
)

//----------------------------------------------------------------

(game "Grande Acedrex"
    (players {(player N) (player S)})
    (equipment {
        (board (square 12))
        <Variant:dice>
        (piece "Pawn" Each
            (or {
                "StepForwardToEmpty"
                "CaptureForwardDiagonal"
                }
                (then
                    (if (is In (last To) (sites Mover "Promotion"))
                        (promote (last To) (piece "PromotedPiece"))
                    )
                )
            )
        )
        (piece "Crocodile" Each ("SlideMove" Diagonal))
        (piece "Eagle" Each
            (move (from)
                (to
                    (union {
                        ("EagleMovement" NW (directions {N W}))
                        ("EagleMovement" NE (directions {N E}))
                        ("EagleMovement" SW (directions {S W}))
                        ("EagleMovement" SE (directions {E S}))
                    })
                    (apply
                        if:(is Enemy (who at:(to)))
                        (remove (to))
                    )
                )
            )
        )
        (piece "Rhino" Each
            (move
                (from)
                (to
                    (union {
                        ("RhinoMovement" N (directions  {NE NW}))
                        ("RhinoMovement" W (directions  {NW SW}))
                        ("RhinoMovement" S (directions  {SW SE}))
                        ("RhinoMovement" E (directions  {SE NE}))
                    })
                    (apply
                        if:(is Enemy (who at:(to)))
                        (remove (to))
                    )
                )
            )
        )
        (piece "Giraffe" Each ("LeapMove" "GiraffeWalk"))
        (piece "Rook" Each ("SlideMove" Orthogonal))
        (piece "Lion" Each ("LeapMove" { {F F F} }))
        (piece "King" Each
            (or
                (move
                    Step
                    (to
                        if:(not (is Friend (who at:(to))))
                        "CaptureEnemyPiece"
                    )
                )
                (if "HasNeverMoved"
                    (move
                        Hop
                        Forwards
                        (between if:True)
                        (to
                            if:(not (is Friend (who at:(to))))
                            "CaptureEnemyPiece"
                        )
                    )
                )
                "RememberPieceHasMoved"
            )
        )
        (regions "Promotion" P1 (sites Top) )
        (regions "Promotion" P2 (sites Bottom) )
    })
    (rules
        (start {
            (place "Pawn1" (sites Row 3)) (place "Rook1" (sites {"A1" "L1"}))
            (place "Lion1" (sites {"B1" "K1"})) (place "Rhino1" (sites {"C1" "J1"}))
            (place "Giraffe1" (sites {"D1" "I1"})) (place "Crocodile1" (sites {"E1" "H1"}))
            (place "Eagle1" coord:"F1") (place "King1" coord:"G1" state:1)

            (place "Pawn2" (sites Row 8)) (place "Rook2" (sites {"A12" "L12"}))
            (place "Lion2" (sites {"B12" "K12"})) (place "Rhino2" (sites {"C12" "J12"}))
            (place "Giraffe2" (sites {"D12" "I12"})) (place "Crocodile2" (sites {"E12" "H12"}))
            (place "Eagle2" coord:"F12")  (place "King2" coord:"G12" state:1)
        })
        (play
            <Variant:movement>
        )
        (end
            (if (and
                    ("IsInCheck" "King" Next (forEach Piece))
                    ("NextCanNotMove")
                )
                (result Mover Win)
            )
        )
    )
)

//------------------------------------------------

(option "Play Rules" <Variant> args:{ <dice> <movement>}
    {
    (item "Without Dice" <>
        <
        (do
            (or {
                (forEach Piece "Pawn")
                (forEach Piece "King")
                (forEach Piece "Rook")
                (forEach Piece "Lion")
                (forEach Piece "Giraffe")
                (forEach Piece "Eagle")
                (forEach Piece "Crocodile")
                (forEach Piece "Rhino")
            })
            ifAfterwards:(not ("IsInCheck" "King" Mover))
        )
        >
    "The rules of Alfonso X without dice.")*
    (item "With Dice"
        <
        (dice d:8 num:1)
        >
        <

        (do
            (do (roll)
                next:(if (= 1 (count Pips))
                    (forEach Piece "Pawn")
                    (if (= 2 (count Pips))
                        (forEach Piece "Giraffe")
                        (if (= 3 (count Pips))
                            (forEach Piece "Crocodile")
                            (if (= 4 (count Pips))
                                (forEach Piece "Lion")
                                (if (= 5 (count Pips))
                                    (forEach Piece "Rook")
                                    (if (= 6 (count Pips))
                                        (forEach Piece "Rhino")
                                        (if (= 7 (count Pips))
                                            (forEach Piece "Eagle")
                                            (forEach Piece "King")
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            )
            ifAfterwards:(not ("IsInCheck" "King" Mover (forEach Piece)))
        )
        >
    "The rules of Alfonso X with a die.")
})

//------------------------------------------------

(rulesets {
    (ruleset "Ruleset/Alfonso X (Described)" {
        "Play Rules/Without Dice"
    })*

    (ruleset "Ruleset/Dice (Described)" {
        "Play Rules/With Dice"
    })
})

//------------------------------------------------

(metadata

    (info
        {
        (description "Murray 1913:348")
        (useFor "Ruleset/Alfonso X (Described)" (rules "12x12 checkered board. Each player begins with 24 pieces with special moves: King (x1): Moves one space orthogonally or diagonally or may jump over one space forward orthogonally or diagonally on its first move; Aanca (x2): Moves diagonally one and one space orthogonally in the same direction, and may continue moving in that same direction any distance; Crocodile (x2): moves diagonally any distance; Giraffe (x2): moves two spaces diagonally and then one orthogonally in the same direction, jumping over any intervening pieces; Rhinoceros (x2): moves diagonally one space and then one orthogonally in the same directions, jumping over any intervening pieces, and then may continue along the diagonal in the same direction; Lion (x2); jumps orthogonally three spaces away. Rook (x2): moves any distance orthogonally; Pawns (12): move forward orthogonally one pace or diagonally one space to capture. When they reach the opposite edge of the board, they are promoted to the piece which began in that space. If this is the King's space, it is promoted to Aanca. The opening position is for white: Rook, Lion, Rhinoceros, Giraffe, Crocodile, Aanca, King, Crocodile, Giraffe, Rhinoceros, Lion, Rook. This is mirrored for black so that the kings face each other. The pawns begin on the fourth row. Pieces are captured when a piece lands on a space occupied by the opposing player. The goal is to checkmnate the King. When the King can be captured on the opponent's next turn, it is in check. The player must remove the King from check on their next turn. If the King cannot move out of check, it is checkmated and the opponent wins. "))
        (useFor "Ruleset/Alfonso X (Described)" (source "Libro de los Juegos 81-83."))
        (useFor "Ruleset/Dice (Described)" (rules "Played with an eight-sided die. The values on the die determine the piece to be moved. The rolls are as follows: 8=King; 7=Aanca, 6=Rhinoceros, 5=Rook, 4=Lion, 3=Crocodile, 2=Giraffe, 1=Pawn."))
        (useFor "Ruleset/Dice (Described)" (source "Libro de los Juegos 83."))
        (version "1.3.0")
        (classification "board/war/replacement/checkmate/chess")
        (credit "Eric Piette")
        }
    )

    (graphics {
        (board Style Chess)
    })
    (ai
        "Grande Acedrex_ai"
    )
)
