(define "NextCanNotMove"
    (not (can Move (do (forEach Piece Next) ifAfterwards:(not ("IsInCheck" "King" Next)))) )
)

(define "CaptureToPiece"
    (apply
        (if (is Enemy (who at:(to)))
            (remove
                (to)
            )
        )
    )
)

(define "CaptureForwardDiagonal"
    (move
        Step
        (directions {FR FL})
        (to
            if:(is Enemy (who at:(to)))
            (apply (remove (to)))
        )
    )
)

//------------------------------------------------------------------------------

(game "Currierspiel"
    (players {(player N) (player S)})
    (equipment {
        (board (rectangle 8 12))
        (regions "StartingPawnRookQueen" P1 (sites {"A2" "G2" "L2"}))
        (regions "StartingPawnRookQueen" P2 (sites {"A7" "G7" "L7"}))
        (piece "King" Each
            (move
                Step
                (to
                    if:(not (is Friend (who at:(to))))
                    "CaptureToPiece"
                )
            )
        )
        (piece "Queen" Each // TO ADD may leap two spaces diagonally on its first move oer any intervening pieces;
            (or
                (move
                    Step
                    Diagonal
                    (to
                        if:(not (is Friend (who at:(to))))
                        "CaptureToPiece"
                    )
                )
                (if (= 1 (state at:(from)))
                    (move Hop
                        (between
                            if:True
                        )
                        (to if:(not (is Friend (who at:(to))))
                            (apply (remove (to)))
                        )
                    )
                    (then (set State at:(last To) 0))
                )
            )
        )
        (piece "Mann" Each
            (move
                Step
                (to
                    if:(not (is Friend (who at:(to))))
                    "CaptureToPiece"
                )
            )
        )
        (piece "Fool" Each
            (move
                Step
                Orthogonal
                (to
                    if:(not (is Friend (who at:(to))))
                    "CaptureToPiece"
                )
            )
        )
        // Courier
        (piece "Ferz" Each
            (move
                Slide
                Diagonal
                (to
                    if:(is Enemy (who at:(to)))
                    "CaptureToPiece"
                )
            )
        )
        (piece "Bishop" Each
            (move Hop
                (between
                    if:True
                )
                (to if:(not (is Friend (who at:(to))))
                    (apply (remove (to)))
                )
            )
        )
        (piece "Knight" Each
            (move
                Leap
                "KnightWalk"
                (to
                    if:(not (is Friend (who at:(to))))
                    "CaptureToPiece"
                )
            )
        )
        (piece "Rook" Each
            (move
                Slide
                Orthogonal
                (to
                    if:(is Enemy (who at:(to)))
                    "CaptureToPiece"
                )
            )
        )
        (piece "Pawn" Each
            (or
                "StepForwardToEmpty"
                "CaptureForwardDiagonal"
            )
        )
    })
    (rules
        (start {
            (place "Pawn1" (sites Row 1))
            (place "Pawn2" (sites Row 6))
            (place "Rook1" {"A1" "L1"}) (place "Knight1" {"B1" "K1"}) (place "Ferz1" {"C1" "J1"}) (place "Bishop1" {"D1" "I1"}) (place "Queen1" coord:"G1" state:1) (place "Fool1" coord:"H1") (place "Mann1" coord:"E1") (place "King1" coord:"F1")
            (place "Rook2" {"A8" "L8"}) (place "Knight2" {"B8" "K8"}) (place "Ferz2" {"C8" "J8"}) (place "Bishop2" {"D8" "I8"}) (place "Queen2" coord:"G8" state:1) (place "Fool2" coord:"H8") (place "Mann2" coord:"E8") (place "King2" coord:"F8")
        })

        phases:
        {
        (phase "Opening"
            (play
                (forEach Site
                    (intersection (sites Occupied by:Mover) (sites Mover))
                    (move
                        (from (site))
                        (to (ahead (site) steps:2 Forward))
                    )
                )
            )
            (nextPhase Mover  (= 0 (count Sites in:(intersection (sites Occupied by:Mover) (sites Mover)))) "Playing")
        )
        (phase "Playing"
            (play
                (do
                    (forEach Piece)
                    ifAfterwards:(not ("IsInCheck" "King" Mover))
                )
            )
        )
        }

        (end
            (if
                (and
                    ("IsInCheck" "King" Next)
                    ("NextCanNotMove")
                )
                (result Mover Win)
            )
        )
    )
)

//------------------------------------------------------------------------------

(metadata

    (info
        {
        (description "Currierspiel is an enlarged form of Chess played in medieval and early modern Germany. It was particularly popular and long-lived in the village of Str√∂beck.")
        (aliases {"Grossenspiel" "Grossen-Spiel" "Currier-Spiel" "Currier-Schach-Spiel"})
        (rules "8x12 board. Each player begins with a complement of pieces, each with their own powers of movement as follows: King (x1): may move one space in any direction; Queen (x1): moves one space diagonally, may leap two spaces diagonally on its first move over any intervening pieces; Man (x1): moves one space in any direction; Fool (x1): moves orthogonally one space; Courier (x2): moves diagonally any distance; Bishop (x2): moves diagonally two spaces, jumping over any intervening pieces; Knight (x2): moves orthogonally one space and then diagonally another space, jumping over any intervening pieces; Rook (x2): moves orthogonally any distance; Pawns (x12): move forward one space or diagonally forward one space to capture. Only the Rooks' and Queens' pawns may move forward two spaces for their first move. Each player must move the Rooks' Pawns and Queens' Pawn in this way in their first three moves. A piece is captured when an opponent's piece moves onto its space. The King is in check when it can be taken on the opponent's next turn; it must not remain in check at the end of the player's turn. When the king cannot move out of check, it is checkmated and the opponent wins.")
        (source "Selenus 1616: 425-432.")
        (version "1.3.0")
        (classification "board/war/replacement/checkmate/chess")
        (credit "Eric Piette")
        (origin  "This game was played in Germany, from around 1202 to 1616.")
        }
    )

    (graphics {
        (show Check "King")
        (piece Scale "Pawn" 0.825)
        (piece Families {"Defined" "Microsoft" "Pragmata" "Symbola"})
        (board Style Chess)
    })
    (ai
        "Currierspiel_ai"
    )
)
