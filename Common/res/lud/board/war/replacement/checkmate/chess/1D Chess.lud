(define "NextCanNotMove"
    (not (can Move (do (forEach Piece Next) ifAfterwards:(not ("IsInCheck" "King" Next)))) )
)

(define "CaptureToPiece"
    (apply
        (if (is Enemy (who at:(to)))
            (remove
                (to)
            )
        )
    )
)

//------------------------------------------------------------------------------

(game "1D Chess"
    (players 2)
    (equipment {
        (board (rectangle 1 <BoardSize:BoardSize>))

        (piece "Rook" Each
            (move
                Slide
                Orthogonal
                (to
                    if:(is Enemy (who at:(to)))
                    "CaptureToPiece"
                )
            )
        )
        (piece "King" Each
            (move
                Step
                (to
                    if:(not (is Friend (who at:(to))))
                    "CaptureToPiece"
                )
            )
        )
        (piece "Knight" Each
            (move
                Leap
                { {F F} }
                (to
                    if:(not (is Friend (who at:(to))))
                    "CaptureToPiece"
                )
            )
        )
        }
    )
    (rules
        (start
            {
            (place "Rook1" coord:"C1") (place "Knight1" coord:"B1") (place "King1" coord:"A1")
            <BoardSize:PiecePlacement>
            }
        )

        (play (do (forEach Piece) ifAfterwards:(not ("IsInCheck" "King" Mover))))

        (end
            {
            (if (and
                    ("IsInCheck" "King" Next)
                    ("NextCanNotMove")
                )
                (result Mover Win)
            )
            (if (or (no Moves Mover) (= (counter) 100)) (result Mover Draw))
            }
        )
    )
)

(option "BoardSize" <BoardSize> args:{ <BoardSize> <PiecePlacement> }
    {
    (item "8"
        <
        8
        >
        <
        (place "Rook2" coord:"F1") (place "Knight2" coord:"G1") (place "King2" coord:"H1")
        >
    "Board of length 8.")**

    (item "9"
        <
        9
        >
        <
        (place "Rook2" coord:"G1") (place "Knight2" coord:"H1") (place "King2" coord:"I1")
        >
    "Board of length 9.")
})

//------------------------------------------------------------------------------

(metadata

    (info
        {
        (description "In his column in the July 1980 issue of Scientific American, Martin Gardner (well known for this writings on mathematical recreations), gives the following one dimensional chess variants.")
        (rules "Here, the King and Rook move as usual, and the knight moves exactly two squares, and may jump over a piece doing that. Gardner asks his readers whether white can win. (White can make a draw by taking the opponents rook and thus giving stalemate.).")
        (source "<a href=\"https://www.chessvariants.com/shape.dir/onedim.html\" target=\"_blank\" class=\"style1\" style=\"color: #0000EE\" />chessvariants.com</a>")
        (version "1.3.0")
        (classification "board/war/replacement/checkmate/chess")
        (credit "Matthew Stephenson")
        }
    )

    (graphics {
        (show Check "King")
        (piece Scale "Pawn" 0.825)
        (piece Families {"Defined" "Microsoft" "Pragmata" "Symbola"})
        (board Style Chess)
    })

)
