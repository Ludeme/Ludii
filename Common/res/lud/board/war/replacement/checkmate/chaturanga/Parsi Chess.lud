(define "CaptureToPiece"
    (apply
        (remove
            (to)
        )
    )
)

(define "CaptureForwardDiagonal"
    (move
        Step
        (directions {FR FL})
        (to
            if:(and
                (or
                    (not (is In (to) (sites Mover "Promotion")))
                    (and
                        (is In (to) (sites Mover "Promotion"))
                        ("PowerfulPieceOnColumnHasBeenRemoved")
                    )
                )
                (is Enemy (who at:(to)))
            )
            (apply (remove (to)))
        )
    )
)

(define "StepForwardToEmpty"
    (move Step
        Forward
        (to
            if:(and
                (or
                    (not (is In (to) (sites Mover "Promotion")))
                    (and
                        (is In (to) (sites Mover "Promotion"))
                        ("PowerfulPieceOnColumnHasBeenRemoved")
                    )
                )
                (is Empty (to))
            )
        )
    )
)

(define "NextCanNotMove"
    (not (can Move (do (forEach Piece Next) ifAfterwards:(not ("IsInCheck" "King_noCross" Next)))) )
)

(define "DoubleStep"
    (move
        Slide
        Forward
        (between (exact 2) if:(is Empty (between)))
        (to if:(is Empty (to)))
    )
)

(define "RememberPieceHasMoved"
    (then
        (if
            (= (state at:(last To)) 1)
            ("PieceHasMoved" (last To))
        )
    )
)

(define "PieceHasMoved"
    (set State at:#1 0)
)

(define "PromotedPiece"
    (if (is In (last To) (sites Corners))
        (id "Boat" Mover)
        (if (or (= (column of:(last To)) 1) (= (column of:(last To)) 6))
            (id "Knight" Mover)
            (if (or (= (column of:(last To)) 2) (= (column of:(last To)) 5))
                (id "Elephant" Mover)
                (if (or (and (is Mover P2) (= (column of:(last To)) 4)) (and (is Mover P1) (= (column of:(last To)) 3)))
                    (id "Ferz_noCross" Mover)
                    (id "King_noCross" Mover)
                )
            )
        )
    )
)

(define "PowerfulPieceOnColumnHasBeenRemoved"
    (if (and (is In (to) (sites Corners)) (< (count Sites in:(sites Occupied by:Mover component:"Boat")) 2))
        True
        (if (and (or (= (column of:(to)) 1) (= (column of:(to)) 6)) (< (count Sites in:(sites Occupied by:Mover component:"Knight")) 2))
            True
            (if (and (or (= (column of:(to)) 2) (= (column of:(to)) 5)) (< (count Sites in:(sites Occupied by:Mover component:"Elephant")) 2))
                True
                (if (and (or (and (is Mover P1) (= (column of:(to)) 3)) (and (is Mover P2) (= (column of:(to)) 4))) (< (count Sites in:(sites Occupied by:Mover component:"Ferz_noCross")) 1))
                    True
                    False
                )
            )
        )
    )
)

//------------------------------------------------------------------------------

(game "Parsi Chess"
    (players {(player N) (player S)})
    (equipment {
        (board (square 8))

        (piece "Pawn" Each
            (or {
                (if (is In (from) (sites Start (piece (what at:(from)))))
                    (if (= 1 (state at:(ahead (from) Backward)))
                        "DoubleStep"
                    )
                )
                "StepForwardToEmpty"
                "CaptureForwardDiagonal"
                }
                (then
                    (if (is In (last To) (sites Mover "Promotion"))
                        (promote (last To) (piece "PromotedPiece"))
                    )
                )
            )
        )
        (piece "Boat" Each
            (move
                Slide
                Orthogonal
                (to
                    if:(is Enemy (who at:(to)))
                    "CaptureToPiece"
                )
                "RememberPieceHasMoved"
            )
        )
        (piece "King_noCross" Each
            (or
                (move
                    Step
                    (to
                        if:(not (is Friend (who at:(to))))
                        "CaptureToPiece"
                    )
                )
                (if (!= (value Player Mover) (mover))
                    (move
                        Leap
                        "KnightWalk"
                        (to
                            if:(is Empty (to))
                        )
                        (then (set Value Mover (mover)))
                    )
                )
                "RememberPieceHasMoved"
            )
        )
        (piece "Elephant" Each
            (move
                Slide
                Diagonal
                (to
                    if:(is Enemy (who at:(to)))
                    "CaptureToPiece"
                )
            )
        )
        (piece "Knight" Each
            (move
                Leap
                "KnightWalk"
                (to
                    if:(not (is Friend (who at:(to))))
                    "CaptureToPiece"
                )
            )
        )
        (piece "Ferz_noCross" Each
            (move
                Slide
                (to
                    if:(is Enemy (who at:(to)))
                    "CaptureToPiece"
                )
                "RememberPieceHasMoved"
            )
        )
        (regions "Promotion" P1 (sites Top) )
        (regions "Promotion" P2 (sites Bottom) )
        }
    )
    (rules
        (start
            {
            (place "Pawn1" (sites Row 1))
            (place "Pawn2" (sites Row 6))
            (place "Boat1" {"A1" "H1"} state:1) (place "Knight1" {"B1" "G1"}) (place "Elephant1" {"C1" "F1"}) (place "Ferz_noCross1" coord:"D1" state:1) (place "King_noCross1" coord:"E1" state:1)
            (place "Boat2" {"A8" "H8"} state:1) (place "Knight2" {"B8" "G8"}) (place "Elephant2" {"C8" "F8"}) (place "Ferz_noCross2" coord:"E8" state:1) (place "King_noCross2" coord:"D8" state:1)
            }
        )

        (play
            (do
                (forEach Piece)
                ifAfterwards:(and (can Move (forEach Piece Next)) (not ("IsInCheck" "King_noCross" Mover)))
                (then
                    (if (!= (next) (value Player Next))
                        (if ("IsInCheck" "King_noCross" Next)
                            (set Value Next (next))
                        )
                    )
                )
            )
        )

        (end
            {
            (if (and
                    ("IsInCheck" "King_noCross" Next)
                    ("NextCanNotMove")
                )
                (result Mover Win)
            )
            (if (= 1 (count Pieces Next)) (result Mover Draw)) // Only the king
            }
        )
    )
)

//------------------------------------------------------------------------------

(metadata

    (info
        {
        (description "Parsi Chess is the name given by Murray to the style of Chess played in southern India in the nineteenth century. It has particular rules regarding pawn movement and promotion, as well as end of game situations.")
        (rules "8x8 board, marked as in Chaturanga. Pieces move according to specialized moves, as follows: Pawns (x8): can move one space forward, or one space diagonally to capture. The pawns in front of the Raja, Vizier, or Chariot may move two spaces on their first move, but only if the piece which began on the space behind them remains on that spot. Chariot (or Boat): any number of spaces orthogonally; Elephant (x2): can move any number of spaces diagonally; Horse (2): moves in any direction, one space orthogonally with one space forward diagonally; Vizier (x1): can move any number of spaces orthogonally or diagonally; Raja (x1): can move one space orthogonally or diagonally, but can also move like the horse once in the game, if it has not yet been checked. It cannot take a piece with this move. The pieces are arranged as in Chess, except the Vizier is place to the left of the Raja on both sides. Players capture pieces by moving onto a space occupied by an opponent's piece. When a Pawn reaches the opposite edge of the board from where it started, it may be promoted to the more powerful piece that begins the game in that position, but only if one of these belonging to the player has already been captured. If this has not happened, the pawn cannot move to the final row. When promoted to a Horse, the piece may immediately make a Horse's move. When a player can capture the opponent's Raja on the next turn, the Raja is in Check, the opponent's next move must free the Raja from Check. If the opponent cannot, it is Checkmate and the player wins. If a player captures all of the opponent's pieces aside from the Raja, it is a draw, or Boorj. When both players are left with only a Raja, it is a draw. Players are not allowed to stalemate the opponent. Perpetual check is not allowed, a player must make another move if such a state is entered.")
        (source "Shastree 1814: vii-x.")
        (version "1.3.0")
        (classification "board/war/replacement/checkmate/chaturanga")
        (credit "Eric Piette")
        (origin  "This game was played in South Asia, around 1814.")
        }
    )

    (graphics {
        (piece Scale "Pawn" 0.825)
        (show Check "King")
        (board Colour InnerEdges (colour Black))
        (board Colour OuterEdges (colour Black))
        (board Colour Symbols (colour Black))
        (board Colour Phase0 (colour 222 173 123))
        (show Symbol "thinCross" {0 3 4 7 24 27 28 31 32 35 36 39 56 59 60 63} scale:0.9)
    })

    (ai
        "Parsi Chess_ai"
    )
)
