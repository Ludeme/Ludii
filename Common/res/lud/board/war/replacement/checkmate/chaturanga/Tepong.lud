(define "CaptureEnemyToPiece"
    (apply
        (if (is Enemy (who at:(to)))
            (remove (to))
        )
    )
)

(define "CaptureForwardDiagonal"
    (move
        Step
        (if (= 1 (state at:(from))) (directions {BR BL}) (directions {FR FL}) )
        (to
            if:(is Enemy (who at:(to)))
            (apply (remove (to)))
        )
    )
)

(define "DoubleStep"
    (move
        Slide
        Forward
        (between (exact 2) if:(is Empty (between)))
        (to if:(is Empty (to)))
    )
)

(define "NextCanNotMove"
    (not (can Move (do (forEach Piece Next) ifAfterwards:(not ("IsInCheck" "King_noCross" Next)))) )
)

(define "SitesNextToKing" (sites {"C1" "E1" "D8" "F8"}))
(define "KingSites" (sites {"E8" "D1"}))
(define "RememberRookMoved" (set State at:#1 1))
(define "RookMovedBefore" (= 1 (state at:#1)))

(define "KingMovedBefore" (= 1 (state at:#1)))
(define "RememberKingMoved" (set State at:#1 1))

//------------------------------------------------------------------------------

(game "Tepong"
    (players {(player N) (player S)})
    (equipment {
        (board (square 8))
        (piece "King_noCross" Each
            (or
                (move Step
                    (to if:(not (is Friend (who at:(to))))
                        ("CaptureEnemyToPiece")
                    )
                    (then
                        (if (not ("KingMovedBefore" (last To)))
                            ("RememberKingMoved" (last To))
                        )
                    )
                )
                (if (not ("KingMovedBefore" (from)))
                    (or {
                        (move
                            Hop
                            Orthogonal
                            (between
                                (exact 2)
                                if:True
                            )
                            (to
                                if:(not (is Friend (who at:(to))))
                                "CaptureEnemyToPiece"
                            )
                        )
                        (move
                            Leap
                            "KnightWalk"
                            (to
                                if:(not (is Friend (who at:(to))))
                                "CaptureEnemyToPiece"
                            )
                        )
                        (if (is In (from) ("KingSites"))
                            (or
                                (if (and {
                                        (is Empty (ahead (from) steps:2 W))
                                        (= (id "Rook" Mover) (what at:(ahead (from) W)))
                                        (not ("RookMovedBefore" (ahead (from) W)))
                                    })
                                    (move
                                        (from)
                                        (to
                                            (ahead (from) steps:2 W)
                                        )
                                    )
                                )
                                (if (and {
                                        (is Empty (ahead (from) steps:2 E))
                                        (= (id "Rook" Mover) (what at:(ahead (from) E)))
                                        (not ("RookMovedBefore" (ahead (from) E)))
                                    })
                                    (move
                                        (from)
                                        (to
                                            (ahead (from) steps:2 E)
                                        )
                                    )
                                )
                            )
                        )
                        }
                        (then ("RememberKingMoved" (last To)))
                    )
                )
            )
        )
        (piece "Queen" Each
            (move
                Slide
                (to
                    if:(is Enemy (who at:(to)))
                    "CaptureEnemyToPiece"
                )
            )
        )
        (piece "Bishop_noCross" Each
            (move
                Slide
                Diagonal
                (to
                    if:(is Enemy (who at:(to)))
                    "CaptureEnemyToPiece"
                )
            )
        )
        (piece "Knight" Each
            (move
                Leap
                "KnightWalk"
                (to
                    if:(not (is Friend (who at:(to))))
                    "CaptureEnemyToPiece"
                )
            )
        )
        (piece "Rook" Each
            (move
                Slide
                Orthogonal
                (to
                    if:(is Enemy (who at:(to)))
                    "CaptureEnemyToPiece"
                )
                (then
                    (if (and
                            (not ("RookMovedBefore" (last To)))
                            (not (is In (last To) ("SitesNextToKing")))
                        )
                        ("RememberRookMoved" (last To))
                    )
                )
            )
        )
        (piece "Pawn" Each
            (or {
                (if (and (= 0 (state at:(last To))) (is In (from) (sites Start (piece (what at:(from))))))
                    "DoubleStep"
                )
                (move Step
                    (if (= 1 (state at:(from))) Backward Forward)
                    (to if:(is Empty (to)))
                )
                "CaptureForwardDiagonal"
                }
                (then
                    (if (is In (last To) (union (sites Bottom) (sites Top)))
                        (if (= 0 (state at:(last To)))
                            (set State at:(last To) 1)
                            (set State at:(last To) 2)
                        )
                    )
                )
            )
        )
    })
    (rules
        (start {
            (place "Pawn1" (sites Row 1))
            (place "Pawn2" (sites Row 6))
            (place "Rook1" {"A1" "H1"}) (place "Knight1" {"B1" "G1"}) (place "Bishop_noCross1" {"C1" "F1"}) (place "King_noCross1" coord:"D1") (place "Queen1" coord:"E1")
            (place "Rook2" {"A8" "H8"}) (place "Knight2" {"B8" "G8"}) (place "Bishop_noCross2" {"C8" "F8"}) (place "King_noCross2" coord:"E8") (place "Queen2" coord:"D8")
        })

        (play
            (do
                (forEach Piece)
                ifAfterwards:(not ("IsInCheck" "King_noCross" Mover))
            )
        )

        (end {
            (if (and
                    ("IsInCheck" "King_noCross" Next)
                    ("NextCanNotMove")
                )
                (result Mover Win)
            )
        })
    )
)

//------------------------------------------------------------------------------

(metadata

    (info
        {
        (description "Tepong is a version of Main Chator played by the Batak people of Sumatra. One player, who is generally a strong player, has to checkmate their opponent in one of the central four squares of the board.")
        (rules "8x8 board, with diagonals in every square. Pieces have special moves, as follows: Raja (king), moves one square in any direction, but on the first move, it may jump two squares or move as a knight, with the exception that it cannot jump two squares diagonally; Mantri (minister), moves orthogonally or diagonally any number of spaces; Gajah (x2); move diagonally any distance; Kuda (horse) x2, moves orthogonally one space then diagonal one space from there, jumping over any intervening pieces; Ter/Chemor (chariot) x2, moves orthogonally any distance; Bídaq (pawn) x8: moves one square forward or one square forward diagonally to capture. May move two spaces forward orthogonally if it is that piece's first move. Upon reaching the opposite edge of the board, the Bídaq moves in the opposite direction, reversing again if it reaches the opposite edge. The Mantri is placed to the right of the Raja at the beginning of play. Castling occurs in two moves, the rook moving to the king and then the king jumping over the rook. Pieces are captured by moving onto a space occupied by an opponent's piece. If the Raja can be captured on its next turn, it is in check. The Raja cannot be in check at the end of its turn. When this is unavoidable, it is checkmate and the opponent wins.
        ")
        (source "von Oefele 1904: 34-35.")
        (version "1.3.0")
        (classification "board/war/replacement/checkmate/chaturanga")
        (credit "Eric Piette")
        (origin  "This game was played in Indonesia, around 1904.")
        }
    )

    (graphics {
        (show Symbol "thinCross" (sites Board) scale:1)
        (board Colour Phase0 (colour 223 178 110))
        (board Colour InnerEdges (colour Black))
        (board Colour OuterEdges (colour Black))
    })

)
