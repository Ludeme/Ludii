(define "CaptureEnemyToPiece"
    (apply
        (if (is Enemy (who at:(to)))
            (remove (to))
        )
    )
)

(define "CaptureForwardDiagonal"
    (move
        Step
        (directions {FR FL})
        (to
            if:(is Enemy (who at:(to)))
            (apply (remove (to)))
        )
    )
)

(define "NextCanNotMove"
    (not (can Move (do (forEach Piece Next) ifAfterwards:(not ("IsInCheck" "King_noCross" Next)))) )
)

(define "SitesNextToKing" (sites {"D1" "F1" "C8" "E8"}))
(define "KingSites" (sites {"E1" "D8"}))
(define "RememberRookMoved" (set State at:#1 1))
(define "RookMovedBefore" (= 1 (state at:#1)))

(define "KingMovedOrCheckedBefore" (= 1 (state at:#1)))
(define "RememberKingMovedOrChecked" (set State at:#1 1))

//------------------------------------------------------------------------------

(game "Chatur"
    (players {(player N) (player S)})
    (equipment {
        (board (square 8) )
        (piece "King_noCross"
            (or
                (move Step
                    (to if:(not (is Friend (who at:(to))))
                        ("CaptureEnemyToPiece")
                    )
                    (then
                        (if (not ("KingMovedOrCheckedBefore" (last To)))
                            ("RememberKingMovedOrChecked" (last To))
                        )
                    )
                )
                (if (not ("KingMovedOrCheckedBefore" (from)))
                    (or {
                        (move
                            Slide
                            (between
                                (exact 2)
                            )
                            (to
                                if:(is Enemy (who at:(to)))
                                "CaptureEnemyToPiece"
                            )
                        )
                        (move
                            Leap
                            "KnightWalk"
                            (to
                                if:(not (is Friend (who at:(to))))
                                "CaptureEnemyToPiece"
                            )
                        )
                        (if (is In (from) ("KingSites"))
                            (or
                                (if (and {
                                        (is Empty (ahead (from) steps:2 W))
                                        (= (id "Rook" Mover) (what at:(ahead (from) W)))
                                        (not ("RookMovedBefore" (ahead (from) W)))
                                    })
                                    (move
                                        (from)
                                        (to
                                            (ahead (from) steps:2 W)
                                        )
                                    )
                                )
                                (if (and {
                                        (is Empty (ahead (from) steps:2 E))
                                        (= (id "Rook" Mover) (what at:(ahead (from) E)))
                                        (not ("RookMovedBefore" (ahead (from) E)))
                                    })
                                    (move
                                        (from)
                                        (to
                                            (ahead (from) steps:2 E)
                                        )
                                    )
                                )
                            )
                        )
                        }
                        (then ("RememberKingMovedOrChecked" (last To)))
                    )
                )
            )
        )
        (piece "Rook"
            (move
                Slide
                Orthogonal
                (to
                    if:(is Enemy (who at:(to)))
                    "CaptureEnemyToPiece"
                )
                (then
                    (if (and
                            (not ("RookMovedBefore" (last To)))
                            (not (is In (last To) ("SitesNextToKing")))
                        )
                        ("RememberRookMoved" (last To))
                    )
                )
            )
        )
        (piece "Bishop_noCross"
            (move
                Slide
                Diagonal
                (to
                    if:(is Enemy (who at:(to)))
                    "CaptureEnemyToPiece"
                )
            )
        )
        (piece "Knight"
            (move
                Leap
                "KnightWalk"
                (to
                    if:(not (is Friend (who at:(to))))
                    "CaptureEnemyToPiece"
                )
            )
        )
        (piece "Pawn"
            (if (is In (from) (sites Mover "Promotion"))
                (move
                    Slide
                    (directions {BR BL})
                    (between
                        (exact 3)
                    )
                    (to
                        if:(is Enemy (who at:(to)))
                        "CaptureEnemyToPiece"
                    )
                    (then
                        (promote (last To) (piece "Queen") Mover)
                    )
                )
                (or
                    "StepForwardToEmpty"
                    "CaptureForwardDiagonal"
                    (then
                        (if (is In (last To) (intersection (sites Corners) (sites Mover "Promotion")))
                            (promote (last To) (piece "Queen") Mover)
                        )
                    )
                )
            )
        )
        (piece "Queen"
            (move
                Slide
                (to
                    if:(is Enemy (who at:(to)))
                    "CaptureEnemyToPiece"
                )
            )
        )
        (regions "Promotion" P1 (sites Top) )
        (regions "Promotion" P2 (sites Bottom) )
    })
    (rules
        (start {
            (place "Pawn1" (sites Row 1))
            (place "Pawn2" (sites Row 6))
            (place "Rook1" {"A1" "H1"}) (place "Knight1" {"B1" "G1"}) (place "Bishop_noCross1" {"C1" "F1"}) (place "Queen1" coord:"D1") (place "King_noCross1" coord:"E1")
            (place "Rook2" {"A8" "H8"}) (place "Knight2" {"B8" "G8"}) (place "Bishop_noCross2" {"C8" "F8"}) (place "Queen2" coord:"E8") (place "King_noCross2" coord:"D8")
        })

        (play
            (do
                (forEach Piece)
                ifAfterwards:(not ("IsInCheck" "King_noCross" Mover))
                (then
                    (if ("IsInCheck" "King_noCross" Next)
                        (if (not ("KingMovedOrCheckedBefore" (where "King_noCross" Next)))
                            ("RememberKingMovedOrChecked" (where "King_noCross" Next))
                        )
                    )
                )
            )
        )

        (end {
            (if (and
                    ("IsInCheck" "King_noCross" Next)
                    ("NextCanNotMove")
                )
                (result Mover Win)
            )
            (if (= (count Pieces Next) 1) (result Mover Loss) )
        })
    )
)

//------------------------------------------------------------------------------

(metadata

    (info
        {
        (description "Chátur is a capturing game played on the island of Java. It is similar to other games which are derived from Indian Chaturanga, but it has more stringent promotion rules and more lenient castling moves.")
        (aliases {"Chátur"})
        (rules "8x8 board. Pieces have special moves, as follows: Rátu (king), moves one square in any direction, but on the first move, if it has not been checked, may move two spaces in any direction or like a Járan; Pateh (minister), moves orthogonally or diagonally any number of spaces; Mántri (x2); move diagonally any distance; Járan (horse) x2, moves orthogonally one space then diagonal one space from there, jumping over any intervening pieces; Práhu (vessel) x2, moves orthogonally any distance; Bídak (pawn) x8: moves one square forward or one square forward diagonally to capture. May move two spaces forward orthogonally if it is that piece's first move. Upon reaching the opposite edge of the board, the Bídak must move backward diagonally three spaces before being promoted to Pateh, unless it is in one of the corner spaces, in which case it is promoted immediately. There is no limit to the number of Patehs on the board. To castle, the Práhu moves next to the Rátu, and then at any turn in the future the Rátu may move to the space on the other side of it, provided the Rátu has not yet been checked and that the space to which it moves remains available. The Rátu cannot be in check at the end of its turn. When this is unavoidable, it is checkmate and the opponent wins. If the Rátu is the only piece belonging to the player on the board, that player wins.")
        (source "Raffles 1817: 390.")
        (version "1.3.0")
        (classification "board/war/replacement/checkmate/chaturanga")
        (credit "Eric Piette")
        (origin  "This game was played in Java, around 1817.")
        }
    )

    (graphics {
        (piece Scale "Pawn" 0.825)
        (show Check "King")
        (board Colour InnerEdges (colour Black))
        (board Colour OuterEdges (colour Black))
        (board Colour Symbols (colour Black))
        (board Colour Phase0 (colour 222 173 123))
    })

)

