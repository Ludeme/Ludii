(define "CaptureToPiece"
    (apply
        (if (is Enemy (who at:(to)))
            (remove
                (to)
            )
        )
    )
)

(define "KingNotCheckedAndToEmpty"
    (and
        (is Empty (to))
        (not ("IsInCheck" "King_noCross" Mover at:(to)))
    )
)

(define "DoubleStep"
    (move
        Slide
        Forward
        (between (exact 2) if:(is Empty (between)))
        (to if:(is Empty (to)))
    )
)

(define "CaptureForwardDiagonal"
    (move
        Step
        (directions {FR FL})
        (to
            if:(is Enemy (who at:(to)))
            (apply (remove (to)))
        )
    )
)

(define "CanNotMove"
    (not (can Move (do (and (forEach Piece #1) (set NextPlayer (player #2))) ifAfterwards:(not ("IsInCheck" "King_noCross" #1)))) )
)

(define "RemovePiecesIfCheckmate"
    (if (and (is Active #1) (not (is Mover #1)))
        (if
            (or
                (and
                    ("IsInCheck" "King_noCross" #1)
                    ("CanNotMove" #1 #2)
                )
                (= (where (id "King_noCross" #1)) Off)
            )
            (forEach Site (sites Occupied by:#1)
                (remove (site))
            )
        )
    )
)

//------------------------------------------------------------------------------

(game "Chatrang"
    (players {(player N) (player S) (player N) (player S)})
    (equipment {
        (board (square 8))

        (piece "Pawn" Each
            (or {
                (if (is In (from) (sites Start (piece (what at:(from)))))
                    "DoubleStep"
                )
                "StepForwardToEmpty"
                "CaptureForwardDiagonal"
            })
        )

        (piece "Rook" Each
            (move
                Slide
                Orthogonal
                (to
                    if:(is Enemy (who at:(to)))
                    "CaptureToPiece"
                )
            )
        )
        (piece "King_noCross" Each
            (move
                Step
                (to
                    if:(not (is Friend (who at:(to))))
                    "CaptureToPiece"
                )
            )
        )
        (piece "Elephant" Each
            (move
                Slide
                Diagonal
                (to
                    if:(is Enemy (who at:(to)))
                    "CaptureToPiece"
                )
            )
        )
        (piece "Knight" Each
            (move
                Leap
                "KnightWalk"
                (to
                    if:(not (is Friend (who at:(to))))
                    "CaptureToPiece"
                )
            )
        )
    })
    (rules

        (start {
            (place "Pawn1" (intersection (expand (sites Left) steps:3) (sites Row 1)))
            (place "Pawn2" (intersection (expand (sites Right) steps:3) (sites Row 6)))
            (place "Pawn3" (intersection (expand (sites Right) steps:3) (sites Row 1)))
            (place "Pawn4" (intersection (expand (sites Left) steps:3) (sites Row 6)))
            (place "Rook1" {"A1"}) (place "Knight1" {"B1"}) (place "Elephant1" {"C1"}) (place "King_noCross1" coord:"D1")
            (place "Rook3" {"H1"}) (place "Knight3" {"G1"}) (place "Elephant3" {"F1"}) (place "King_noCross3" coord:"E1")
            (place "Rook2" {"H8"}) (place "Knight2" {"G8"}) (place "Elephant2" {"F8"}) (place "King_noCross2" coord:"E8")
            (place "Rook4" {"A8"}) (place "Knight4" {"B8"}) (place "Elephant4" {"C8"}) (place "King_noCross4" coord:"D8")
            (set Team 1 {P1 P3})
            (set Team 2 {P2 P4})
        })

        (play
            (do
                (forEach Piece)
                ifAfterwards:(not ("IsInCheck" "King_noCross" Mover))
                (then
                    (and {
                        ("RemovePiecesIfCheckmate" P1 1)
                        ("RemovePiecesIfCheckmate" P2 2)
                        ("RemovePiecesIfCheckmate" P3 3)
                        ("RemovePiecesIfCheckmate" P4 4)
                    })
                )
            )
        )

        (end {
            (forEach NonMover
                if:(= (where "King_noCross" Player) Off)
                (result Player Loss)
            )
            (if
                (and {
                    (no Pieces Enemy "Pawn")
                    (no Pieces Enemy "Knight")
                    (no Pieces Enemy "Elephant")
                    (no Pieces Enemy "Rook")
                })
                (result TeamMover Win)
            )
        })
    )
)

//------------------------------------------------------------------------------

(metadata

    (info
        {
        (description "This version of Shatranj, which is played by four players, was played in the Punjab region of what is now Pakistan during the nineteenth century. Players play on two teams.")
        (rules "Four players, playing on teams of two. 1 x Shah (king): moves one space orthogonally or diagonally. 2 x Rukh (rook): Any number of spaces orthogonally. 2 x Pil (elephant): any distance diagonally; 2 x Asb (horse): Moves as a chess knight. 8 x Sarbaz (soldier): Moves one space forward orthogonally; one space forward diagonally to capture. The pieces of one team are arranged with Shahs on the two central squares of the outer rows, then the Pils, ASbs, and Rukhs, with the Sarbaz in the row in front of them. When a piece moves onto a space occupied by an opponent's piece, the opponent's piece is captured. When a Shah can be captured on the next turn, it is in check, and cannot remain in check at the end of that player's turn. When this is not possible, it is checkmate, and that player is out of the game. A team wins by checkmating both opposing Kings, or by capturing all of the opponents' pieces aside from the Kings. If all four Kings are the only remaining pieces, the game is a draw. ")
        (source "Murray 1913: 74.")
        (version "1.3.0")
        (classification "board/war/replacement/checkmate/chaturanga")
        (credit "Eric Piette")
        (origin  "This game was played in Pakistan, around 1900.")
        }
    )

    (graphics {
        (show Check "King_noCross")
        (piece Scale "Pawn" 0.825)
        (piece Families {"Defined" "Microsoft" "Pragmata" "Symbola"})
        (board Style Chess)
    })

)
