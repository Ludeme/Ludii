(define "EdgeInCommon"
    (intersection (sites Incident Edge of:Cell at:#1)
        (sites Incident Edge of:Cell at:#2)
    )
)

(define "NoEdgeBetweenCells"
    ("NoSites" (intersection (sites Occupied by:Shared on:Edge) ("EdgeInCommon" #1 #2)))
)

(define "OriginalCloserToTheseus"
    (> (count Steps Orthogonal (where (id "Minotaur0")) (where (id "Theseus")))
        (count Steps Orthogonal (ahead (where (id "Minotaur0")) #1) (where (id "Theseus")))
    )
)

(define "SmartCloserToTheseus"
    (> (count Steps
            (step
                (from (where (id "Minotaur0")))
                Orthogonal
                (to
                    if:("NoEdgeBetweenCells" (from) (to))
                )
            )
            (where (id "Minotaur0"))
            (where (id "Theseus"))
        )
        (count Steps
            (step
                (from (ahead (where (id "Minotaur0")) #1))
                Orthogonal
                (to
                    if:("NoEdgeBetweenCells" (from) (to))
                )
            )
            (ahead (where (id "Minotaur0")) #1)
            (where (id "Theseus"))
        )
    )
)

(define "MoveMinotaur"
    (fromTo
        (from (where (id "Minotaur0")))
        (to (ahead (from) #1)
            (apply
                (if (= (id "Theseus") (what at:(to)))
                    (remove
                        (to)
                    )
                )
            )
        )
    )
)

(define "GoCloserToTheseus"
    (if (and ("NoEdgeBetweenCells" (where (id "Minotaur0")) (ahead (where (id "Minotaur0")) #1))
            (<Minotaur:move> #1)
        )
        ("MoveMinotaur" #1)
        #2
        #3
    )
)

(define "MinotaurThreatAgain"
    ("GoCloserToTheseus" E
        ("GoCloserToTheseus" W
            ("GoCloserToTheseus" N
                ("GoCloserToTheseus" S)
            )
        )
    )
)

(define "MinotaurThreat"
    ("GoCloserToTheseus" E
        ("GoCloserToTheseus" W
            ("GoCloserToTheseus" N
                ("GoCloserToTheseus" S)
            )
        )
        (then
            ("MinotaurThreatAgain")
        )
    )
)

//------------------------------------------------------------------------------

(game "Theseus and the Minotaur"
    (players 1)
    (equipment {
        (board <Board:type>)
        (piece "Theseus" P1
            (move
                Step
                Orthogonal
                (to
                    if:(and (is Empty (to)) ("NoEdgeBetweenCells" (from) (to)))
                )
            )
        )
        (piece "Minotaur" Neutral)
        (piece "Marker" Shared)
        (regions "Exit" {<Board:exit>})
    })
    (rules
        (start
            {
            (place "Theseus" coord:<Board:startTheseus>)
            (place "Minotaur0" coord:<Board:startMinotaur>)
            (set
                Shared
                Edge
                (union
                    (sites Outer Edge)
                    (sites {<Board:walls>})
                )
            )
            }
        )
        (play
            (or
                (forEach Piece)
                (move Pass)
                (then
                    <Minotaur:threat>
                )
            )
        )
        (end
            {
            (if (no Pieces Mover) (result Mover Loss))
            (if (is In (where (id "Theseus")) (sites "Exit")) (result Mover Win))
            }
        )
    )
)

//------------------------------------------------------------------------------

(option "Board" <Board> args:{ <type> <startTheseus> <startMinotaur> <exit> <walls> }
    {
    (item  "Wikipedia"
        <(square 6)>
        <"E4">
        <"A6">
        <34>
        <65 60 53 47 46 33 41 63 76 48 28 21 36 43 56 62 20>
        "The board in Wikipedia."
    )*
    (item  "Rectangle 4x7"
        <(rectangle 4 7)>
        <"C3">
        <"A3">
        <1>
        <31 38 39 20 27 28>
        "The board in Wikipedia."
    )
    (item  "Square 8x8"
        <(square 8)>
        <"H5">
        <"A8">
        <16>
        <17 26 28 20 21 46 63 48 56 64 73 58 109 115 124 97 88>
        "The board in Wikipedia."
    )
    }
)

(option "Play" <Minotaur> args:{ <move> }
    {
    (item  "Original"  <"OriginalCloserToTheseus"> "The minotaur comes closer to Theseus in looking only the number of orthogonal steps without to take in account the walls.")*
    (item  "Smart"  <"SmartCloserToTheseus"> "The minotaur comes closer to Theseus in looking only the number of orthogonal steps in taking in account the walls.")
    }
)

(option "End" <Minotaur> args:{ <threat> }
    {
    (item  "Immediate Win"
        <(if (not (is In (where (id "Theseus")) (sites "Exit")))
            ("MinotaurThreat")
        )>
        "Theseus wins immediately if he reaches the exit."
    )*
    (item  "Not Immediate Win"
        <("MinotaurThreat")>
        "Theseus wins if he reaches the exit and the minotaur can not reach him."
    )
    }
)

//------------------------------------------------------------------------------

(metadata

    (info
        {
        (description "Theseus and the Minotaur is a type of logic maze designed by Robert Abbott. In this maze, the player acts as Theseus, who is attempting to escape the Labyrinth.")
        (rules "The goal of Theseus is to escape of the labyrinth. Theseus can step orthogonally but after steping the Minotaur comes closer to him twice faster. If the minotaur catches him, Theseus dies.")
        (source "<a href=\"https://en.wikipedia.org/wiki/Theseus_and_the_Minotaur\" target=\"_blank\" class=\"style1\" style=\"color: #0000EE\" />Wikipedia</a>")
        (version "1.3.0")
        (classification "puzzle/planning")
        (author "Robert Abbott")
        (credit "Eric Piette")
        (date "1990")
        }
    )

    (graphics {
        (player Colour Neutral (colour Red))
        (player Colour P1 (colour Blue))
        (player Colour Shared (colour Dark))
        (board Style PenAndPaper replaceComponentsWithFilledCells:False)
        (show Symbol "door" "Exit" fillColour:(colour 110 52 52) scale:0.5)
        (board Colour InnerVertices (colour Hidden))
        (board Colour OuterVertices (colour Hidden))

    })
    (ai
        "Theseus and the Minotaur_ai"
    )
)
