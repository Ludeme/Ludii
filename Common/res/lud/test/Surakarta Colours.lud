(define "SlideToCapture"
    (move
        Slide
        "AllTracks"
        (between
            if:(or
                (= (between) (from))
                (is Empty (between))
            )
        )
        <Slide:to>
        (then (set Counter))
    )
)

(define "NoCaptureProposal" 101)

(define "NPiecesOnTrack"
    (end
        (forEach
            Track
            if:(> #1 (count Pieces Mover in:(sites Track)))
            (result Mover Loss)
        )
    )
)

//------------------------------------------------------------------------------

(game "Surakarta"
    (players <Option:players>)
    (equipment {
        (surakartaBoard <Option:board>)

        (piece "Marker" Each
            (or {
                (move
                    Step
                    All
                    <Step:to>
                )
                ("SlideToCapture")
            })
        )
    })
    (rules
        (start {
            (place "Marker1" <Option:start1>)
            (place "Marker2" <Option:start2>)
            <Option:start3>
        })
        (play
            (if (is Proposed "End")
                (or (move Vote "End") (move Vote "No" (then (set Counter))))
                (or
                    (if (>= (counter) "NoCaptureProposal")
                        (move Propose "End" (then (vote "End")))
                    )
                    (forEach Piece)
                )
            )
        )
        <End:rules>
    )
)

//------------------------------------------------------------------------------

(option "Corners Capture" <Step> args:{<to>}
    {
    (item "False"
        <(to if:(is Empty (to)))>
        "The pieces can step to an empty site."
    )*
    (item "True"
        <
        (to
            if:(or
                (is Empty (to))
                (and
                    (is In (to) (sites Corners))
                    (is Enemy (who at:(to)))
                )
            )
            (apply
                (if (is Enemy (who at:(to)))
                    (remove
                        (to)
                    )
                )
            )
        )
        >
        "The pieces can step to an empty site or capturing an enemy piece in a corner in steping."
    )
    }
)

//-------

(option "Slide" <Slide> args:{<to>}
    {
    (item "To Capture"
        <
        (to
            if:(is Enemy (who at:(to)))
            (apply if:False (remove (to)))
        )
        >
        "The pieces can slide to capture."
    )*
    (item "To Move or Capture"
        <
        (to
            if:(is Enemy (who at:(to)))
            (apply if:(is Empty (to)) (remove (to)))
        )
        >
        "The pieces can slide to move or capture."
    )
    }
)

//------

(option "End Rules" <End> args:{<rules>}
    {
    (item "No Piece"
        <
        (end {
            (if (is Decided "End")
                (byScore {
                    (score P1 (count Pieces P1))
                    (score P2 (count Pieces P2))
                })
            )
            (if (no Pieces Next) (result Mover Win))
        })
        >
        "The mover win if the next player does not have any piece."
    )*
    (item "Less Than 2 Pieces Per Track"
        <
        ("NPiecesOnTrack" 2)
        >
        "The mover loses if it does not have 2 pieces on each track."
    )
    (item "Less Than 3 Pieces Per Track"
        <
        ("NPiecesOnTrack" 3)
        >
        "The mover loses if it does not have 3 pieces on each track."
    )
    (item "Less Than 4 Pieces Per Track"
        <
        ("NPiecesOnTrack" 4)
        >
        "The mover loses if it does not have 4 pieces on each track."
    )
    }
)

//------

(option "Version" <Option> args:{ <players> <board> <start1> <start2> <start3> } {
    (item "Official"
        <2>
        <(square 6)>
        <(expand (sites Bottom))>
        <(expand (sites Top))>
        <>
        "The game is played on the Awithlaknan Mosona board."
    )*
    (item "Middle Line"
        <2>
        <(square 7) loops:3>
        <(expand (sites Bottom))>
        <(expand (sites Top))>
        <>
        "The game is played on the Kolowis Awithlaknannai board."
    )
    (item "Experimental 6x9"
        <2>
        <(rectangle 6 9)>
        <(expand (sites Bottom))>
        <(expand (sites Top))>
        <>
        "The game is played on an experimental 6x9 board."
    )
    (item "Experimental 9x6 (A)"
        <2>
        <(rectangle 9 6)>
        <(expand (sites Bottom))>
        <(expand (sites Top))>
        <>
        "The game is played on an experimental 9x6 board."
    )
    (item "Experimental 9x6 (B)"
        <2>
        <(rectangle 9 6)>
        <(expand (sites Bottom) steps:2)>
        <(expand (sites Top) steps:2)>
        <>
        "The game is played on an experimental 9x6 board."
    )
    (item "Experimental 12x8"
        <2>
        <(rectangle 12 8) loops:3 from:1>
        <(difference (expand (sites Bottom) steps:4) (sites Bottom))>
        <(difference (expand (sites Top) steps:4) (sites Top))>
        <>
        "The game is played on an experimental 12x8 board."
    )
    (item "Ja-Jeon-Geo-Gonu (A)"
        <2>
        <(square 4)>
        <{"A3" "B3" "A4" "B4"}>
        <{"C1" "D1" "C2" "D2"}>
        <>
        "Small 4x4 version of the game."
    )
    (item "Ja-Jeon-Geo-Gonu (B)"
        <2>
        <(square 4)>
        <{"C4" "B3" "A4" "D3"}>
        <{"B1" "D1" "B2" "D2"}>
        <>
        "Small 4x4 version of the game (variant start)."
    )
    (item "Triangular 4"
        <2>
        <(tri 4)>
        <{"A1" "B1" "C1" "D1"}>
        <(expand (sites {"D4"}))>
        <>
        "Experimental triangular version of the game."
    )
    (item "Triangular 5"
        <2>
        <(tri 5)>
        <(union (expand (sites {"A1"})) (expand (sites {"E1"})))>
        <(union (expand (sites {"E5"})) (sites {"D3"}))>
        <>
        "Experimental triangular version of the game."
    )
    (item "Triangular 6"
        <2>
        <(tri 6)>
        <(union (expand (sites {"A1"})) (expand (sites {"F1"})))>
        <(expand (sites {"F6"}) steps:2)>
        <>
        "Experimental triangular version of the game."
    )
    (item "Triangular 6 (Inverted)"
        <2>
        <(tri 6)>
        <(expand (sites {"F6"}) steps:2)>
        <(union (expand (sites {"A1"})) (expand (sites {"F1"})))>
        <>
        "Experimental triangular version of the game."
    )
    (item "Triangular 7"
        <2>
        <(tri 7)>
        <(union (expand (sites {"A1"}) steps:2) (expand (sites {"G1"}) steps:2))>
        <(union (expand (sites {"G7"}) steps:2) (sites {"E4" "F4"}))>
        <>
        "Experimental triangular version of the game."
    )
    (item "Triangular 7 (Balanced)"
        <2>
        <(tri 7)>
        <(union { (expand (sites {"A1"})) (expand (sites {"G1"})) (sites {"C2" "F2"}) } )>
        <(union (expand (sites {"G7"}) steps:2) (sites {"E4" "F4"}))>
        <>
        "Experimental triangular version of the game."
    )
    (item "Triangular 7 (Balanced, Inverted)"
        <2>
        <(tri 7)>
        <(union (expand (sites {"G7"}) steps:2) (sites {"E4" "F4"}))>
        <(union { (expand (sites {"A1"})) (expand (sites {"G1"})) (sites {"C2" "F2"}) } )>
        <>
        "Experimental triangular version of the game."
    )
    (item "Triangular 8"
        <2>
        <(tri 8)>
        <(union (expand (sites {"A1"}) steps:2) (expand (sites {"H1"}) steps:2))>
        <(expand (sites {"H8"}) steps:3)>
        <>
        "Experimental triangular version of the game."
    )
    (item "Triangular 8 (Inverted)"
        <2>
        <(tri 8)>
        <(expand (sites {"H8"}) steps:3)>
        <(union (expand (sites {"A1"}) steps:2) (expand (sites {"H1"}) steps:2))>
        <>
        "Experimental triangular version of the game."
    )
    (item "Three Player A"
        <3>
        <(tri 8)>
        <(expand (sites {"A1"}) steps:2)>
        <(expand (sites {"H1"}) steps:2)>
        <(place "Marker3" (expand (sites {"H8"}) steps:2))>
        "Experimental triangular version of the game."
    )
})

//------------------------------------------------------------------------------

(metadata

    (info
        {
        (description "Surakarta is purported to be from Java in Indonesia, but this claim may have been a marketing ploy by Ravensberger when the game was first published in Germany in 1971.")
        (rules "Played on a 6x6 board with corner loops. Each player has 12 pieces. Play is made on the intersections of the lines. pieces are captured by moving via the outer loops and occupying a space held by another player. The goal is to capture all of the opponent's pieces. If no further captures are possible, the player with the most remaining pieces wins.")
        (source "<a href=\"https://en.wikipedia.org/wiki/Surakarta_(game)\" target=\"_blank\" class=\"style1\" style=\"color: #0000EE\" />Wikipedia</a>")
        (version "1.1.15")
        (classification "board/war")
        (credit "Eric Piette")
        (date "01-01-1970")
        }
    )

    (graphics {
        (board Style Surakarta)
        (board Colour Phase0 (colour LightTan))
        (show Score Never)
        //(player Colour P1 (colour Cream))
        //(player Colour P2 (colour VeryDarkBrown))
        //(player Colour P2 (colour Burgundy))
        //(player Colour P2 (colour Blue))
    })

    (ai
        "Surakarta_ai"
    )
)
