(game "Clobber"
    (players 2)
    (equipment
        {
        (board (rect <Rows> <Columns>))
        (piece "Marker" Each <Moves>)
        }
    )
    (rules
        (start
            {
            (place "Marker1" (sites Phase 1))
            (place "Marker123" (sites Phase 0))
            }
        )
        (play (forEach Piece))
        (end ("NoMoves" Loss))
    )
)

//------------------------------------------------------------------------------

(option "Rows" <Rows> args:{ <num> }
    {
    (item  "1"  <1> "The board has 1 row.")
    (item  "2"  <2> "The board has 2 rows.")
    (item  "3"  <3> "The board has 3 rows.")
    (item  "4"  <4> "The board has 4 rows.")
    (item  "5"  <5> "The board has 5 rows.")
    (item  "6"  <6> "The board has 6 rows.")
    (item  "7"  <7> "The board has 7 rows.")
    (item  "8"  <8> "The board has 8 rows.")
    (item  "9"  <9> "The board has 9 rows.")
    (item "10" <10> "The board has 10 rows.")*
    (item "11" <11> "The board has 11 rows.")
    (item "12" <12> "The board has 12 rows.")
    (item "13" <13> "The board has 13 rows.")
    (item "14" <14> "The board has 14 rows.")
    (item "15" <15> "The board has 15 rows.")
    (item "16" <16> "The board has 16 rows.")
    (item "17" <17> "The board has 17 rows.")
    (item "18" <18> "The board has 18 rows.")
    (item "19" <19> "The board has 19 rows.")
    }
)
(option "Columns" <Columns> args:{ <num> }
    {
    (item  "1"  <1> "The board has 1 column.")
    (item  "2"  <2> "The board has 2 columns.")
    (item  "3"  <3> "The board has 3 columns.")
    (item  "4"  <4> "The board has 4 columns.")
    (item  "5"  <5> "The board has 5 columns.")
    (item  "6"  <6> "The board has 6 columns.")
    (item  "7"  <7> "The board has 7 columns.")
    (item  "8"  <8> "The board has 8 columns.")
    (item  "9"  <9> "The board has 9 columns.")
    (item "10" <10> "The board has 10 columns.")*
    (item "11" <11> "The board has 11 columns.")
    (item "12" <12> "The board has 12 columns.")
    (item "13" <13> "The board has 13 columns.")
    (item "14" <14> "The board has 14 columns.")
    (item "15" <15> "The board has 15 columns.")
    (item "16" <16> "The board has 16 columns.")
    (item "17" <17> "The board has 17 columns.")
    (item "18" <18> "The board has 18 columns.")
    (item "19" <19> "The board has 19 columns.")
    }
)
(option "Moves" <Moves> args:{ <moves> }
    {
    (item
        "Standard"
        <
        (step
            Orthogonal
            (to
                if:(is Enemy (who at:(to)))
                (apply (remove (to)))
            )
        )
        >
        "Pieces must step onto an enemy piece."
    )*
    (item
        "Cannibal"
        <
        (step
            Orthogonal
            (to
                if:(or
                    (is Enemy (who at:(to)))
                    (is Friend (who at:(to)))
                )
                (apply (remove (to)))
            )
        )
        >
        "Pieces can step onto any piece."
    )
    }
)

//------------------------------------------------------------------------------

(metadata
    (info
        {
        (description "Clobber is an abstract strategy game invented in 2001 by combinatorial game theorists Michael H. Albert, J.P. Grossman and Richard Nowakowski.")
        (rules "To start the game, each of the squares on the checkerboard is occupied by a stone. White stones are placed on the white squares and black stones on the black squares. To move, the player must pick up one of his or her own stones and 'clobber' an opponent's stone on an adjacent square, either horizontally or vertically. Once the opponent's stone is clobbered, it must then be removed from the board and replaced by the stone that was moved. The player who, on their turn, is unable to move, loses the game.")
        (source "https://en.wikipedia.org/wiki/Clobber")
        (version "1.0.0")
        (classification "board/war/other")
        (credit "Cameron Browne 14/5/2020")
        (author "Michael H. Albert, J.P. Grossman and Richard Nowakowski (2001).")
        }
    )
    (graphics
        {
        (board Style Chess)
        }
    )
)
